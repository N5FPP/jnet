var N = null;var searchIndex = {};
searchIndex["as_slice"]={"doc":"`AsSlice` and `AsMutSlice` traits","items":[[8,"AsSlice","as_slice","Something that can be seen as an immutable slice",N,N],[16,"Element","","The element type of the slice view",0,N],[10,"as_slice","","Returns the immutable slice view of `Self`",0,N],[8,"AsMutSlice","","Something that can be seen as an mutable slice",N,N],[10,"as_mut_slice","","Returns the mutable slice view of `Self`",1,N]],"paths":[[8,"AsSlice"],[8,"AsMutSlice"]]};
searchIndex["byteorder"]={"doc":"This crate provides convenience methods for encoding and decoding numbers in either [big-endian or little-endian order].","items":[[4,"BigEndian","byteorder","Defines big-endian serialization.",N,N],[4,"LittleEndian","","Defines little-endian serialization.",N,N],[6,"BE","","A type alias for [`BigEndian`].",N,N],[6,"LE","","A type alias for [`LittleEndian`].",N,N],[6,"NetworkEndian","","Defines network byte order serialization.",N,N],[6,"NativeEndian","","Defines system native-endian serialization.",N,N],[8,"ByteOrder","","`ByteOrder` describes types that can serialize integers as bytes.",N,N],[10,"read_u16","","Reads an unsigned 16 bit integer from `buf`.",0,N],[11,"read_u24","","Reads an unsigned 24 bit integer from `buf`, stored in u32.",0,N],[10,"read_u32","","Reads an unsigned 32 bit integer from `buf`.",0,N],[11,"read_u48","","Reads an unsigned 48 bit integer from `buf`, stored in u64.",0,N],[10,"read_u64","","Reads an unsigned 64 bit integer from `buf`.",0,N],[10,"read_u128","","Reads an unsigned 128 bit integer from `buf`.",0,N],[10,"read_uint","","Reads an unsigned n-bytes integer from `buf`.",0,N],[10,"read_uint128","","Reads an unsigned n-bytes integer from `buf`.",0,N],[10,"write_u16","","Writes an unsigned 16 bit integer `n` to `buf`.",0,N],[11,"write_u24","","Writes an unsigned 24 bit integer `n` to `buf`, stored in u32.",0,N],[10,"write_u32","","Writes an unsigned 32 bit integer `n` to `buf`.",0,N],[11,"write_u48","","Writes an unsigned 48 bit integer `n` to `buf`, stored in u64.",0,N],[10,"write_u64","","Writes an unsigned 64 bit integer `n` to `buf`.",0,N],[10,"write_u128","","Writes an unsigned 128 bit integer `n` to `buf`.",0,N],[10,"write_uint","","Writes an unsigned integer `n` to `buf` using only `nbytes`.",0,N],[10,"write_uint128","","Writes an unsigned integer `n` to `buf` using only `nbytes`.",0,N],[11,"read_i16","","Reads a signed 16 bit integer from `buf`.",0,N],[11,"read_i24","","Reads a signed 24 bit integer from `buf`, stored in i32.",0,N],[11,"read_i32","","Reads a signed 32 bit integer from `buf`.",0,N],[11,"read_i48","","Reads a signed 48 bit integer from `buf`, stored in i64.",0,N],[11,"read_i64","","Reads a signed 64 bit integer from `buf`.",0,N],[11,"read_i128","","Reads a signed 128 bit integer from `buf`.",0,N],[11,"read_int","","Reads a signed n-bytes integer from `buf`.",0,N],[11,"read_int128","","Reads a signed n-bytes integer from `buf`.",0,N],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point number.",0,N],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point number.",0,N],[11,"write_i16","","Writes a signed 16 bit integer `n` to `buf`.",0,N],[11,"write_i24","","Writes a signed 24 bit integer `n` to `buf`, stored in i32.",0,N],[11,"write_i32","","Writes a signed 32 bit integer `n` to `buf`.",0,N],[11,"write_i48","","Writes a signed 48 bit integer `n` to `buf`, stored in i64.",0,N],[11,"write_i64","","Writes a signed 64 bit integer `n` to `buf`.",0,N],[11,"write_i128","","Writes a signed 128 bit integer `n` to `buf`.",0,N],[11,"write_int","","Writes a signed integer `n` to `buf` using only `nbytes`.",0,N],[11,"write_int128","","Writes a signed integer `n` to `buf` using only `nbytes`.",0,N],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point number.",0,N],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point number.",0,N],[10,"read_u16_into","","Reads unsigned 16 bit integers from `src` into `dst`.",0,N],[10,"read_u32_into","","Reads unsigned 32 bit integers from `src` into `dst`.",0,N],[10,"read_u64_into","","Reads unsigned 64 bit integers from `src` into `dst`.",0,N],[10,"read_u128_into","","Reads unsigned 128 bit integers from `src` into `dst`.",0,N],[11,"read_i16_into","","Reads signed 16 bit integers from `src` to `dst`.",0,N],[11,"read_i32_into","","Reads signed 32 bit integers from `src` into `dst`.",0,N],[11,"read_i64_into","","Reads signed 64 bit integers from `src` into `dst`.",0,N],[11,"read_i128_into","","Reads signed 128 bit integers from `src` into `dst`.",0,N],[11,"read_f32_into","","Reads IEEE754 single-precision (4 bytes) floating point numbers from `src` into `dst`.",0,N],[11,"read_f32_into_unchecked","","DEPRECATED.",0,N],[11,"read_f64_into","","Reads IEEE754 single-precision (4 bytes) floating point numbers from `src` into `dst`.",0,N],[11,"read_f64_into_unchecked","","DEPRECATED.",0,N],[10,"write_u16_into","","Writes unsigned 16 bit integers from `src` into `dst`.",0,N],[10,"write_u32_into","","Writes unsigned 32 bit integers from `src` into `dst`.",0,N],[10,"write_u64_into","","Writes unsigned 64 bit integers from `src` into `dst`.",0,N],[10,"write_u128_into","","Writes unsigned 128 bit integers from `src` into `dst`.",0,N],[11,"write_i16_into","","Writes signed 16 bit integers from `src` into `dst`.",0,N],[11,"write_i32_into","","Writes signed 32 bit integers from `src` into `dst`.",0,N],[11,"write_i64_into","","Writes signed 64 bit integers from `src` into `dst`.",0,N],[11,"write_i128_into","","Writes signed 128 bit integers from `src` into `dst`.",0,N],[11,"write_f32_into","","Writes IEEE754 single-precision (4 bytes) floating point numbers from `src` into `dst`.",0,N],[11,"write_f64_into","","Writes IEEE754 double-precision (8 bytes) floating point numbers from `src` into `dst`.",0,N],[10,"from_slice_u16","","Converts the given slice of unsigned 16 bit integers to a particular endianness.",0,N],[10,"from_slice_u32","","Converts the given slice of unsigned 32 bit integers to a particular endianness.",0,N],[10,"from_slice_u64","","Converts the given slice of unsigned 64 bit integers to a particular endianness.",0,N],[10,"from_slice_u128","","Converts the given slice of unsigned 128 bit integers to a particular endianness.",0,N],[11,"from_slice_i16","","Converts the given slice of signed 16 bit integers to a particular endianness.",0,N],[11,"from_slice_i32","","Converts the given slice of signed 32 bit integers to a particular endianness.",0,N],[11,"from_slice_i64","","Converts the given slice of signed 64 bit integers to a particular endianness.",0,N],[11,"from_slice_i128","","Converts the given slice of signed 128 bit integers to a particular endianness.",0,N],[10,"from_slice_f32","","Converts the given slice of IEEE754 single-precision (4 bytes) floating point numbers to a particular endianness.",0,N],[10,"from_slice_f64","","Converts the given slice of IEEE754 double-precision (8 bytes) floating point numbers to a particular endianness.",0,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"read_u16","","",1,N],[11,"read_u32","","",1,N],[11,"read_u64","","",1,N],[11,"read_u128","","",1,N],[11,"read_uint","","",1,N],[11,"read_uint128","","",1,N],[11,"write_u16","","",1,N],[11,"write_u32","","",1,N],[11,"write_u64","","",1,N],[11,"write_u128","","",1,N],[11,"write_uint","","",1,N],[11,"write_uint128","","",1,N],[11,"read_u16_into","","",1,N],[11,"read_u32_into","","",1,N],[11,"read_u64_into","","",1,N],[11,"read_u128_into","","",1,N],[11,"write_u16_into","","",1,N],[11,"write_u32_into","","",1,N],[11,"write_u64_into","","",1,N],[11,"write_u128_into","","",1,N],[11,"from_slice_u16","","",1,N],[11,"from_slice_u32","","",1,N],[11,"from_slice_u64","","",1,N],[11,"from_slice_u128","","",1,N],[11,"from_slice_f32","","",1,N],[11,"from_slice_f64","","",1,N],[11,"read_u16","","",2,N],[11,"read_u32","","",2,N],[11,"read_u64","","",2,N],[11,"read_u128","","",2,N],[11,"read_uint","","",2,N],[11,"read_uint128","","",2,N],[11,"write_u16","","",2,N],[11,"write_u32","","",2,N],[11,"write_u64","","",2,N],[11,"write_u128","","",2,N],[11,"write_uint","","",2,N],[11,"write_uint128","","",2,N],[11,"read_u16_into","","",2,N],[11,"read_u32_into","","",2,N],[11,"read_u64_into","","",2,N],[11,"read_u128_into","","",2,N],[11,"write_u16_into","","",2,N],[11,"write_u32_into","","",2,N],[11,"write_u64_into","","",2,N],[11,"write_u128_into","","",2,N],[11,"from_slice_u16","","",2,N],[11,"from_slice_u32","","",2,N],[11,"from_slice_u64","","",2,N],[11,"from_slice_u128","","",2,N],[11,"from_slice_f32","","",2,N],[11,"from_slice_f64","","",2,N],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"eq","","",1,[[["self"],["bigendian"]],["bool"]]],[11,"eq","","",2,[[["self"],["littleendian"]],["bool"]]],[11,"cmp","","",1,[[["self"],["bigendian"]],["ordering"]]],[11,"cmp","","",2,[[["self"],["littleendian"]],["ordering"]]],[11,"partial_cmp","","",1,[[["self"],["bigendian"]],["option",["ordering"]]]],[11,"partial_cmp","","",2,[[["self"],["littleendian"]],["option",["ordering"]]]],[11,"hash","","",1,N],[11,"hash","","",2,N],[11,"clone","","",1,[[["self"]],["bigendian"]]],[11,"clone","","",2,[[["self"]],["littleendian"]]],[11,"default","","",1,[[],["bigendian"]]],[11,"default","","",2,[[],["littleendian"]]]],"paths":[[8,"ByteOrder"],[4,"BigEndian"],[4,"LittleEndian"]]};
searchIndex["cast"]={"doc":"Ergonomic, checked cast functions for primitive types","items":[[4,"Error","cast","Cast errors",N,N],[13,"Infinite","","Infinite value casted to a type that can only represent finite values",0,N],[13,"NaN","","NaN value casted to a type that can't represent a NaN value",0,N],[13,"Overflow","","Source value is greater than the maximum value that the destination type can hold",0,N],[13,"Underflow","","Source value is smaller than the minimum value that the destination type can hold",0,N],[5,"f32","","Checked cast function",N,N],[5,"f64","","Checked cast function",N,N],[5,"i8","","Checked cast function",N,N],[5,"i16","","Checked cast function",N,N],[5,"i32","","Checked cast function",N,N],[5,"i64","","Checked cast function",N,N],[5,"isize","","Checked cast function",N,N],[5,"u8","","Checked cast function",N,N],[5,"u16","","Checked cast function",N,N],[5,"u32","","Checked cast function",N,N],[5,"u64","","Checked cast function",N,N],[5,"usize","","Checked cast function",N,N],[8,"From","","The \"cast from\" operation",N,N],[16,"Output","","The result of the cast operation: either `Self` or `Result<Self, Error>`",1,N],[10,"cast","","Checked cast from `Src` to `Self`",1,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"eq","","",0,[[["self"],["error"]],["bool"]]],[11,"clone","","",0,[[["self"]],["error"]]]],"paths":[[4,"Error"],[8,"From"]]};
searchIndex["generic_array"]={"doc":"This crate implements a structure that can be used as a generic array type.use Core Rust array types `[T; N]` can't be used generically with respect to `N`, so for example this:","items":[[3,"GenericArray","generic_array","Struct representing a generic array - `GenericArray<T, N>` works like [T; N]",N,N],[0,"arr","","Implementation for `arr!` macro.",N,N],[6,"Inc","generic_array::arr","Helper type for `arr!` macro",N,N],[8,"AddLength","","Helper trait for `arr!` macro",N,N],[16,"Output","","Resulting length",0,N],[0,"functional","generic_array","Functional programming with generic sequences",N,N],[6,"MappedSequence","generic_array::functional","Accessor type for a mapped generic sequence",N,N],[8,"MappedGenericSequence","","Defines the relationship between one generic sequence and another, for operations such as `map` and `zip`.",N,N],[16,"Mapped","","Mapped sequence type",1,N],[8,"FunctionalSequence","","Defines functional programming methods for generic sequences",N,N],[11,"map","","Maps a `GenericSequence` to another `GenericSequence`.",2,[[["self"],["f"]],["mappedsequence"]]],[11,"zip","","Combines two `GenericSequence` instances and iterates through both of them, initializing a new `GenericSequence` with the result of the zipped mapping function.",2,[[["self"],["rhs"],["f"]],["mappedsequence"]]],[11,"fold","","Folds (or reduces) a sequence of data into a single value.",2,[[["self"],["u"],["f"]],["u"]]],[0,"iter","generic_array","`GenericArray` iterator implementation.",N,N],[3,"GenericArrayIter","generic_array::iter","An iterator that moves out of a `GenericArray`",N,N],[11,"as_slice","","Returns the remaining items of this iterator as a slice",3,N],[11,"as_mut_slice","","Returns the remaining items of this iterator as a mutable slice",3,N],[0,"sequence","generic_array","Useful traits for manipulating sequences of data stored in `GenericArray`s",N,N],[6,"SequenceItem","generic_array::sequence","Accessor for `GenericSequence` item type, which is really `IntoIterator::Item`",N,N],[8,"GenericSequence","","Defines some sequence with an associated length and iteration capabilities.",N,N],[16,"Length","","`GenericArray` associated length",4,N],[16,"Sequence","","Concrete sequence type used in conjuction with reference implementations of `GenericSequence`",4,N],[10,"generate","","Initializes a new sequence instance using the given function.",4,N],[8,"Lengthen","","Defines any `GenericSequence` which can be lengthened or extended by appending or prepending an element to it.",N,N],[16,"Longer","","`GenericSequence` that has one more element than `Self`",5,N],[10,"append","","Returns a new array with the given element appended to the end of it.",5,N],[10,"prepend","","Returns a new array with the given element prepended to the front of it.",5,N],[8,"Shorten","","Defines a `GenericSequence` which can be shortened by removing the first or last element from it.",N,N],[16,"Shorter","","`GenericSequence` that has one less element than `Self`",6,N],[10,"pop_back","","Returns a new array without the last element, and the last element.",6,N],[10,"pop_front","","Returns a new array without the first element, and the first element. Example:",6,N],[8,"Split","","Defines a `GenericSequence` that can be split into two parts at a given pivot index.",N,N],[16,"First","","First part of the resulting split array",7,N],[16,"Second","","Second part of the resulting split array",7,N],[10,"split","","Splits an array at the given index, returning the separate parts of the array.",7,N],[8,"Concat","","Defines `GenericSequence`s which can be joined together, forming a larger array.",N,N],[16,"Rest","","Sequence to be concatenated with `self`",8,N],[16,"Output","","Resulting sequence formed by the concatenation.",8,N],[10,"concat","","Concatenate, or join, two sequences.",8,N],[8,"ArrayLength","generic_array","Trait making `GenericArray` work, marking types to be used as length of an array",N,N],[16,"ArrayType","","Associated type representing the array type for the number",9,N],[11,"as_slice","","Extracts a slice containing the entire array.",10,N],[11,"as_mut_slice","","Extracts a mutable slice containing the entire array.",10,N],[11,"from_slice","","Converts slice to a generic array reference with inferred length;",10,N],[11,"from_mut_slice","","Converts mutable slice to a mutable generic array reference",10,N],[11,"clone_from_slice","","Construct a `GenericArray` from a slice by cloning its content",10,N],[11,"from_exact_iter","","Creates a new `GenericArray` instance from an iterator with a known exact size.",10,[[["i"]],["option"]]],[14,"arr","","Macro allowing for easy generation of Generic Arrays. Example: `let test = arr![u32; 1, 2, 3];`",N,N],[11,"into_iter","","",10,[[["self"]],["i"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"into_iter","generic_array::iter","",3,[[["self"]],["i"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"map","generic_array","",10,[[["self"],["f"]],["mappedsequence"]]],[11,"zip","","",10,[[["self"],["rhs"],["f"]],["mappedsequence"]]],[11,"fold","","",10,[[["self"],["u"],["f"]],["u"]]],[11,"generate","","",10,[[["f"]],["genericarray"]]],[11,"append","","",10,N],[11,"prepend","","",10,N],[11,"pop_back","","",10,N],[11,"pop_front","","",10,N],[11,"split","","",10,N],[11,"concat","","",10,N],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","generic_array::iter","",3,[[["self"],["formatter"]],["result"]]],[11,"eq","generic_array","",10,[[["self"],["self"]],["bool"]]],[11,"cmp","","",10,[[["self"],["genericarray"]],["ordering"]]],[11,"partial_cmp","","",10,[[["self"],["genericarray"]],["option",["ordering"]]]],[11,"deref","","",10,N],[11,"deref_mut","","",10,N],[11,"drop","generic_array::iter","",3,[[["self"]]]],[11,"hash","generic_array","",10,[[["self"],["h"]]]],[11,"next_back","generic_array::iter","",3,[[["self"]],["option"]]],[11,"next","","",3,[[["self"]],["option"]]],[11,"size_hint","","",3,N],[11,"count","","",3,[[["self"]],["usize"]]],[11,"nth","","",3,[[["self"],["usize"]],["option"]]],[11,"last","","",3,[[["self"]],["option"]]],[11,"len","","",3,[[["self"]],["usize"]]],[11,"from_iter","generic_array","",10,[[["i"]],["genericarray"]]],[11,"into_iter","","",10,N],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"from","","",10,N],[11,"from","","",10,N],[11,"from","","",10,N],[11,"from","","",10,N],[11,"from","","",10,N],[11,"from","","",10,N],[11,"from","","",10,N],[11,"from","","",10,N],[11,"from","","",10,N],[11,"from","","",10,N],[11,"from","","",10,N],[11,"from","","",10,N],[11,"from","","",10,N],[11,"from","","",10,N],[11,"from","","",10,N],[11,"from","","",10,N],[11,"from","","",10,N],[11,"from","","",10,N],[11,"from","","",10,N],[11,"from","","",10,N],[11,"from","","",10,N],[11,"from","","",10,N],[11,"from","","",10,N],[11,"from","","",10,N],[11,"from","","",10,N],[11,"from","","",10,N],[11,"from","","",10,N],[11,"from","","",10,N],[11,"from","","",10,N],[11,"from","","",10,N],[11,"from","","",10,N],[11,"from","","",10,N],[11,"clone","","",10,[[["self"]],["genericarray"]]],[11,"clone","generic_array::iter","",3,[[["self"]],["self"]]],[11,"as_ref","generic_array","",10,N],[11,"default","","",10,[[],["self"]]],[11,"as_mut","","",10,N],[11,"borrow","","",10,N],[11,"borrow_mut","","",10,N]],"paths":[[8,"AddLength"],[8,"MappedGenericSequence"],[8,"FunctionalSequence"],[3,"GenericArrayIter"],[8,"GenericSequence"],[8,"Lengthen"],[8,"Shorten"],[8,"Split"],[8,"Concat"],[8,"ArrayLength"],[3,"GenericArray"]]};
searchIndex["hash32"]={"doc":"32-bit hashing machinery","items":[[3,"FnvHasher","hash32","32-bit Fowler-Noll-Vo hasher",N,N],[3,"Murmur3Hasher","","32-bit MurmurHash3 hasher",N,N],[3,"BuildHasherDefault","","See [`core::hash::BuildHasherDefault`][0] for details",N,N],[8,"BuildHasher","","See [`core::hash::BuildHasher`][0] for details",N,N],[16,"Hasher","","See [`core::hash::BuildHasher::Hasher`][0]",0,N],[10,"build_hasher","","See [`core::hash::BuildHasher.build_hasher`][0]",0,N],[8,"Hasher","","See [`core::hash::Hasher`][0] for details",N,N],[10,"finish","","See [`core::hash::Hasher.finish`][0]",1,[[["self"]],["u32"]]],[10,"write","","See [`core::hash::Hasher.write`][0]",1,N],[8,"Hash","","See [`core::hash::Hash`][0] for details",N,N],[10,"hash","","Feeds this value into the given `Hasher`.",2,[[["self"],["h"]]]],[11,"hash_slice","","Feeds a slice of this type into the given `Hasher`.",2,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"build_hasher","","",5,N],[11,"finish","","",3,[[["self"]],["u32"]]],[11,"write","","",3,N],[11,"finish","","",4,[[["self"]],["u32"]]],[11,"write","","",4,N],[11,"default","","",3,[[],["self"]]],[11,"default","","",4,[[],["self"]]],[11,"default","","",5,[[],["self"]]]],"paths":[[8,"BuildHasher"],[8,"Hasher"],[8,"Hash"],[3,"FnvHasher"],[3,"Murmur3Hasher"],[3,"BuildHasherDefault"]]};
searchIndex["hash32_derive"]={"doc":"","items":[[24,"Hash32","hash32_derive","",N,N]],"paths":[]};
searchIndex["jnet"]={"doc":"JNeT: japaric's network thingies","items":[[4,"Unknown","jnet","[Type State] Unknown",N,N],[4,"Valid","","[Type State] Valid checksum",N,N],[4,"Invalid","","[Type State] Invalid checksum",N,N],[0,"ether","","Ethernet II",N,N],[3,"Frame","jnet::ether","Layer 2 Ethernet frame",N,N],[4,"Type","","Ether Type",N,N],[13,"Ipv4","","IPv4",0,N],[13,"Arp","","ARP",0,N],[13,"Ipv6","","IPv6",0,N],[13,"Unknown","","Unknown",0,N],[17,"HEADER_SIZE","","Size of the MAC header",N,N],[11,"new","","Creates a new Ethernet frame from the given buffer",1,[[["b"]],["self"]]],[11,"parse","","Parses bytes into an Ethernet frame",1,[[["b"]],["result"]]],[11,"get_destination","","Returns the Destination field of the header",1,[[["self"]],["addr"]]],[11,"get_source","","Returns the Source field of the header",1,[[["self"]],["addr"]]],[11,"get_type","","Returns the Type field of the header",1,[[["self"]],["type"]]],[11,"payload","","View into the payload",1,N],[11,"as_bytes","","Returns the byte representation of this frame",1,N],[11,"free","","Frees the underlying buffer",1,[[["self"]],["b"]]],[11,"len","","Returns the length (header + data) of this frame",1,[[["self"]],["u16"]]],[11,"set_destination","","Sets the destination field of the header",1,[[["self"],["addr"]]]],[11,"set_source","","Sets the source field of the header",1,[[["self"],["addr"]]]],[11,"set_type","","Sets the type field of the header",1,[[["self"],["type"]]]],[11,"payload_mut","","Mutable view into the payload",1,N],[11,"into_payload","","Returns the payload of this frame",1,N],[11,"arp","","Fills the payload with an ARP packet",1,[[["self"],["f"]]]],[11,"ipv4","","Fills the payload with an IPv4 packet",1,[[["self"],["f"]]]],[11,"ipv6","","Fills the payload with an IPv6 packet",1,[[["self"],["f"]]]],[0,"ieee802154","jnet","IEEE 802.15.4",N,N],[3,"Frame","jnet::ieee802154","IEEE 802.15.4 MAC frame",N,N],[3,"PanId","","PAN identifier",N,N],[12,"0","","",2,N],[3,"ShortAddr","","Short (16-bit) address",N,N],[12,"0","","",3,N],[3,"ExtendedAddr","","Extended (64-bit) address",N,N],[12,"0","","",4,N],[4,"SrcDest","","Source and destination address",N,N],[13,"PanCoordToNode","","Source: PAN coordinator, Dest: some node in the PAN",5,N],[12,"pan_id","jnet::ieee802154::SrcDest","PAN identifier",5,N],[12,"dest_addr","","Address of the destination node",5,N],[13,"NodeToPanCoord","jnet::ieee802154","Source: some node, Dest: coordinator of the PAN the node belongs to",5,N],[12,"pan_id","jnet::ieee802154::SrcDest","PAN identifier",5,N],[12,"src_addr","","Address of the source node",5,N],[13,"IntraPan","jnet::ieee802154","Both nodes are in the same PAN",5,N],[12,"pan_id","jnet::ieee802154::SrcDest","PAN identifier",5,N],[12,"src_addr","","Address of the source node",5,N],[12,"dest_addr","","Address of the destination node",5,N],[13,"InterPan","jnet::ieee802154","Nodes are in different PANs",5,N],[12,"src_pan_id","jnet::ieee802154::SrcDest","Identifier of the PAN the source node is in",5,N],[12,"src_addr","","Address of the source node",5,N],[12,"dest_pan_id","","Identifier of the PAN the destination node is in",5,N],[12,"dest_addr","","Address of the destination node",5,N],[4,"Type","jnet::ieee802154","Frame type",N,N],[13,"Beacon","","Beacon frame",6,N],[13,"Data","","Data frame",6,N],[13,"Acknowledgment","","Acknowledgment frame",6,N],[13,"MacCommand","","MAC command frame",6,N],[13,"Unknown","","Unknown",6,N],[4,"AddrMode","","Address mode",N,N],[13,"None","","PAN identifier and address field are not present",7,N],[13,"Short","","Address field contains a 16 bit short addres",7,N],[13,"Extended","","Address field contains a 64 bit extended address",7,N],[4,"Addr","","An address, either short or extended",N,N],[13,"Short","","Short address",8,N],[13,"Extended","","Extended address",8,N],[11,"parse","","Parses bytes into an 802.15.4 frame",9,[[["b"]],["result"]]],[11,"get_type","","Reads the 'Frame type' field",9,[[["self"]],["type"]]],[11,"get_security_enabled","","Reads the 'Security enabled' field",9,[[["self"]],["bool"]]],[11,"get_frame_pending","","Reads the 'Frame pending' field",9,[[["self"]],["bool"]]],[11,"get_ack_request","","Reads the 'Ack. request' field",9,[[["self"]],["bool"]]],[11,"get_intra_pan","","Reads the 'Intra-PAN' field",9,[[["self"]],["bool"]]],[11,"get_dest_addr_mode","","Reads the 'Dest. addressing mode' field",9,[[["self"]],["addrmode"]]],[11,"get_src_addr_mode","","Reads the 'Source addressing mode' field",9,[[["self"]],["addrmode"]]],[11,"get_sequence_number","","Reads the 'Sequence number' field",9,[[["self"]],["u8"]]],[11,"get_dest_pan_id","","Reads the 'Destination PAN identifier' field",9,[[["self"]],["option",["panid"]]]],[11,"get_dest_addr","","Reads the 'Destination address' field",9,[[["self"]],["option",["addr"]]]],[11,"get_src_pan_id","","Reads the 'Source PAN identifier' field",9,[[["self"]],["option",["panid"]]]],[11,"get_src_addr","","Reads the 'Source address' field",9,[[["self"]],["option",["addr"]]]],[11,"header","","Returns an immutable view into the header",9,N],[11,"payload","","Returns an immutable view into the payload",9,N],[11,"as_bytes","","Returns the byte representation of this frame",9,N],[11,"free","","Frees the underlying buffer",9,[[["self"]],["b"]]],[11,"data","","Creates a new data frame from the given buffer",9,[[["b"],["srcdest"]],["self"]]],[11,"set_ack_request","","Sets the 'Ack. request' field to `ack`",9,[[["self"],["bool"]]]],[11,"set_sequence_number","","Sets the 'Sequence number' field to `seq`",9,[[["self"],["u8"]]]],[11,"payload_mut","","Returns a mutable view into the payload",9,N],[11,"set_payload","","Fills the payload with the given data and adjusts the length of the frame",9,N],[11,"echo_reply","","Fills the buffer with an 'Echo Reply' ICMPv6 message",9,[[["self"],["addr"],["addr"],["f"]]]],[11,"neighbor_advertisement","","Fills the payload with a 'Neighbor Advertisement' ICMPv6 message",9,[[["self"],["addr"],["addr"],["option",["extendedaddr"]],["f"]]]],[11,"udp","","Fills the payload with a UDP packet",9,[[["self"],["addr"],["u16"],["addr"],["u16"],["bool"],["f"]]]],[18,"BROADCAST","","Broadcast identifier",2,N],[11,"is_broadcast","","Is this the broadcast address?",2,[[["self"]],["bool"]]],[18,"BROADCAST","","Broadcast address",3,N],[11,"is_broadcast","","Is this the broadcast address?",3,[[["self"]],["bool"]]],[11,"ne_bytes","","Serializes the address into an array of bytes using network endianness",4,N],[11,"eui_64","","Converts the address into an Extended Unique Identifier (EUI-64)",4,N],[11,"into_link_local_address","","Converts this extended address into a link-local IPv6 address using the EUI-64 format (see RFC2464)",4,[[["self"]],["addr"]]],[0,"mac","jnet","MAC: Medium Access Control",N,N],[3,"Addr","jnet::mac","MAC address",N,N],[12,"0","","",10,N],[18,"BROADCAST","","Broadcast address",10,N],[11,"is_unicast","","Is this a unicast address?",10,[[["self"]],["bool"]]],[11,"is_broadcast","","Is this the broadcast address?",10,[[["self"]],["bool"]]],[11,"is_multicast","","Is this a multicast address?",10,[[["self"]],["bool"]]],[11,"is_ipv4_multicast","","Is this an IPv4 multicast address?",10,[[["self"]],["bool"]]],[11,"is_ipv6_multicast","","Is this an IPv6 multicast address?",10,[[["self"]],["bool"]]],[11,"into_link_local_address","","Converts this MAC address into a link-local IPv6 address using the EUI-64 format (see RFC2464)",10,[[["self"]],["addr"]]],[0,"arp","jnet","ARP: Address Resolution Protocol",N,N],[3,"Packet","jnet::arp","ARP packet",N,N],[4,"Ethernet","","[Type state] The Ethernet hardware type",N,N],[4,"Ipv4","","[Type state] The IPv4 protocol type",N,N],[4,"HardwareType","","Hardware type",N,N],[13,"Ethernet","","Ethernet",11,N],[13,"Unknown","","Unknown",11,N],[4,"Operation","","ARP operation",N,N],[13,"Request","","Request operation",12,N],[13,"Reply","","Reply operation",12,N],[13,"Unknown","","Unknown",12,N],[17,"HEADER_SIZE","","Size of the ARP header",N,N],[11,"new","","Transforms the given buffer into an ARP packet",13,[[["b"]],["self"]]],[11,"get_sha","","Returns the SHA (Sender Hardware Address) field of the payload",13,[[["self"]],["addr"]]],[11,"get_spa","","Returns the SPA (Sender Protocol Address) field of the payload",13,[[["self"]],["addr"]]],[11,"get_tha","","Returns the THA (Target Hardware Address) field of the payload",13,[[["self"]],["addr"]]],[11,"get_tpa","","Returns the TPA (Target Protocol Address) field of the payload",13,[[["self"]],["addr"]]],[11,"is_a_probe","","Is this an ARP probe?",13,[[["self"]],["bool"]]],[11,"set_sha","","Sets the SHA (Sender Hardware Address) field of the payload",13,[[["self"],["addr"]]]],[11,"set_spa","","Sets the SPA (Sender Protocol Address) field of the payload",13,[[["self"],["addr"]]]],[11,"set_tha","","Sets the THA (Target Hardware Address) field of the payload",13,[[["self"],["addr"]]]],[11,"set_tpa","","Sets the TPA (Target Protocol Address) field of the payload",13,[[["self"],["addr"]]]],[11,"announce","","ARP announcement",13,[[["self"],["addr"]]]],[11,"probe","","ARP probe",13,[[["self"],["addr"]]]],[11,"get_sha","","Returns the SHA (Sender Hardware Address) field of the payload",13,N],[11,"get_spa","","Returns the SPA (Sender Protocol Address) field of the payload",13,N],[11,"get_tha","","Returns the THA (Target Hardware Address) field of the payload",13,N],[11,"get_tpa","","Returns the TPA (Target Protocol Address) field of the payload",13,N],[11,"downcast","","Interprets this packet as `Packet<Ethernet, Ipv4>`",13,[[["self"]],["result",["packet"]]]],[11,"parse","","Parses bytes into an ARP packet",13,[[["b"]],["result"]]],[11,"set_htype","","Sets the HTYPE (Hardware TYPE) field of the header",13,[[["self"],["hardwaretype"]]]],[11,"set_ptype","","Sets the PTYPE (Protocol TYPE) field of the header",13,[[["self"],["type"]]]],[11,"get_htype","","Returns the HTYPE (Hardware TYPE) field of the header",13,[[["self"]],["hardwaretype"]]],[11,"get_ptype","","Returns the PTYPE (Protocol TYPE) field of the header",13,[[["self"]],["type"]]],[11,"get_hlen","","Returns the HLEN (Hardware LENgth) field of the header",13,[[["self"]],["u8"]]],[11,"get_plen","","Returns the PLEN (Protocol LENgth) field of the header",13,[[["self"]],["u8"]]],[11,"get_oper","","Returns the OPER (OPERation) field of the header",13,[[["self"]],["operation"]]],[11,"payload","","View into the payload",13,N],[11,"len","","Returns the canonical length of this packet",13,[[["self"]],["u8"]]],[11,"free","","Frees the underlying buffer",13,[[["self"]],["b"]]],[11,"set_oper","","Sets the OPER (OPERation) field of the header",13,[[["self"],["operation"]]]],[11,"payload_mut","","Mutable view into the payload",13,N],[0,"ipv4","jnet","IPv4: Internet Protocol v4",N,N],[3,"Packet","jnet::ipv4","IPv4 packet",N,N],[3,"Addr","","IPv4 address",N,N],[12,"0","","",14,N],[4,"Protocol","","IP protocol",N,N],[13,"Hopopt","","IPv6 Hop-by-Hop Option",15,N],[13,"Icmp","","ICMP",15,N],[13,"Igmp","","Internet Group Management Protocol",15,N],[13,"Ggp","","Gateway-to-Gateway Protocol",15,N],[13,"Ipv4","","IPv4 encapsulation",15,N],[13,"St","","Stream",15,N],[13,"Tcp","","Transmission Control Protocol",15,N],[13,"Cbt","","CBT",15,N],[13,"Egp","","Exterior Gateway Protocol",15,N],[13,"Igp","","Any private interior gateway",15,N],[13,"BbnRccMon","","BBN RCC Monitoring",15,N],[13,"NvpIi","","Network Voice Protocol",15,N],[13,"Pup","","PUP",15,N],[13,"Argus","","ARGUS (deprecated)",15,N],[13,"Emcon","","EMCON",15,N],[13,"Xnet","","Cross Net Debugger",15,N],[13,"Chaos","","Chaos",15,N],[13,"Udp","","UDP",15,N],[13,"Mux","","Multiplexing",15,N],[13,"DcnMeas","","DCN Measurement Subsystems",15,N],[13,"Hmp","","Host Monitoring",15,N],[13,"Prm","","Packet Radio Measurement",15,N],[13,"XnsIdp","","XEROX NS IDP",15,N],[13,"Trunk1","","Trunk-1",15,N],[13,"Trunk2","","Trunk-2",15,N],[13,"Leaf1","","Leaf-1",15,N],[13,"Leaf2","","Leaf-2",15,N],[13,"Rdp","","Reliable Data Protocol",15,N],[13,"Irtp","","Internet Reliable Transaction",15,N],[13,"IsoTp4","","ISO Transport Protocol Class 4",15,N],[13,"Netblt","","Bulk Data Transfer Protocol",15,N],[13,"MfeNsp","","MFE Network Services Protocol",15,N],[13,"MeritInp","","MERIT Internodal Protocol",15,N],[13,"Dccp","","Datagram Congestion Control Protocol",15,N],[13,"ThreePc","","Third Party Connect Protocol",15,N],[13,"Idpr","","Inter-Domain Policy Routing Protocol",15,N],[13,"Xtp","","Xpress Transport Protocol",15,N],[13,"Ddp","","Datagram Delivery Protocol",15,N],[13,"IdprCmtp","","IDPR Control Message Transport Proto",15,N],[13,"Tppp","","TP++ Transport Protocol",15,N],[13,"Il","","IL Transport Protocol",15,N],[13,"Ipv6","","IPv6 Encapsulation",15,N],[13,"Sdrp","","Source Demand Routing Protocol",15,N],[13,"Ipv6Route","","Routing Header for IPv6",15,N],[13,"Ipv6Frag","","Fragment Header for IPv6",15,N],[13,"Idrp","","Inter-Domain Routing Protocol",15,N],[13,"Rsvp","","Resource Protocol",15,N],[13,"Gres","","Generic Routing Encapsulation",15,N],[13,"Dsr","","Dynamic Source Routing Protocol",15,N],[13,"Bna","","BNA",15,N],[13,"Esp","","Encap Security Payload",15,N],[13,"Ah","","Authentication Header",15,N],[13,"INlsp","","Integrated Net Layer Security Protocol",15,N],[13,"Swipe","","IP with Encryption (deprecated)",15,N],[13,"Narp","","NBMA Address Resolution Protocol",15,N],[13,"Mobile","","IP Mobility",15,N],[13,"Tlsp","","Transport Layer Security Protocol using Kryptonet key management",15,N],[13,"Skip","","SKIP",15,N],[13,"Ipv6Icmp","","ICMP for IPv6",15,N],[13,"Ipv6NoNxt","","No Next Header for IPv6",15,N],[13,"Ipv6Opts","","Destination Options for IPv6",15,N],[13,"AnyHostInternalProtocol","","Any host internal protocol",15,N],[13,"Cftp","","CFTP",15,N],[13,"AnyLocalNetwork","","Any local network",15,N],[13,"SatExpak","","SATNET and Backroom EXPAK",15,N],[13,"Kryptolan","","Kryptolan",15,N],[13,"Rvd","","MIT Remote Virtual Disk Protocol",15,N],[13,"Ippc","","Internet Pluribus Packet Core",15,N],[13,"AnyDistributedFileSystem","","Any distributed file system",15,N],[13,"SatMon","","SATNET Monitoring",15,N],[13,"Visa","","VISA Protocol",15,N],[13,"Ipcu","","Internet Packet Core Utility",15,N],[13,"Cpnx","","Computer Protocol Network Executive",15,N],[13,"Cphb","","Computer Protocol Heart Beat",15,N],[13,"Wsn","","Wang Span Network",15,N],[13,"Pvp","","Packet Video Protocol",15,N],[13,"BrSatMon","","Backroom SATNET Monitoring",15,N],[13,"SunNd","","SUN ND PROTOCOL-Temporary",15,N],[13,"WbMon","","WIDEBAND Monitoring",15,N],[13,"WbExpak","","WIDEBAND EXPAK",15,N],[13,"IsoIp","","International Organization for Standardization Internet Protocol",15,N],[13,"Vmtp","","VMTP",15,N],[13,"SecureVmtp","","Secure-VMTP",15,N],[13,"Vines","","VINES",15,N],[13,"TtpIptm","","Transaction Transport Protocol || Internet Protocol Traffic Manager",15,N],[13,"NfsnetIgp","","NSFNET-IGP",15,N],[13,"Dgp","","Dissimilar Gateway Protocol",15,N],[13,"Tcf","","TCF",15,N],[13,"Eigrp","","EIGRP",15,N],[13,"Ospfigp","","OSPFIGP",15,N],[13,"SpriteRpc","","Sprite RPC Protocol",15,N],[13,"Larp","","Locus Address Resolution Protocol",15,N],[13,"Mtp","","Multicast Transport Protocol",15,N],[13,"Ax25","","AX.25 Frames",15,N],[13,"Ipip","","IP-within-IP Encapsulation Protocol",15,N],[13,"Micp","","Mobile Internetworking Control Pro. (deprecated)",15,N],[13,"SccSp","","Semaphore Communications Sec. Pro.",15,N],[13,"Etherip","","Ethernet-within-IP Encapsulation",15,N],[13,"Encap","","Encapsulation Header",15,N],[13,"AnyPrivateEncryptionScheme","","Any private encryption scheme",15,N],[13,"Gmtp","","GMTP",15,N],[13,"Ifmp","","Ipsilon Flow Management Protocol",15,N],[13,"Pnni","","PNNI over IP",15,N],[13,"Pim","","Protocol Independent Multicast",15,N],[13,"Aris","","ARIS",15,N],[13,"Scps","","SCPS",15,N],[13,"Qnx","","QNX",15,N],[13,"AN","","Active Networks",15,N],[13,"IpComp","","IP Payload Compression Protocol",15,N],[13,"Snp","","Sitara Networks Protocol",15,N],[13,"CompaqPeer","","Compaq Peer Protocol",15,N],[13,"IpxInIp","","IPX in IP",15,N],[13,"Vrrp","","Virtual Router Redundancy Protocol",15,N],[13,"Pgm","","PGM Reliable Transport Protocol",15,N],[13,"Any0HopProtocol","","any 0-hop protocol",15,N],[13,"L2tp","","Layer Two Tunneling Protocol",15,N],[13,"Ddx","","D-II Data Exchange (DDX)",15,N],[13,"Iatp","","Interactive Agent Transfer Protocol",15,N],[13,"Stp","","Schedule Transfer Protocol",15,N],[13,"Srp","","SpectraLink Radio Protocol",15,N],[13,"Uti","","UTI",15,N],[13,"Smp","","Simple Message Protocol",15,N],[13,"Sm","","Simple Multicast Protocol (deprecated)",15,N],[13,"Ptp","","Performance Transparency Protocol",15,N],[13,"IsisOverIpv4","","ISIS over IPv4",15,N],[13,"Fire","","FIRE",15,N],[13,"Crtp","","Combat Radio Transport Protocol",15,N],[13,"Crudp","","Combat Radio User Datagram",15,N],[13,"Sscopmce","","SSCOPMCE",15,N],[13,"Iplt","","IPLT",15,N],[13,"Sps","","Secure Packet Shield",15,N],[13,"Pipe","","Private IP Encapsulation within IP",15,N],[13,"Sctp","","Stream Control Transmission Protocol",15,N],[13,"Fc","","Fibre Channel",15,N],[13,"RsvpE2eIgnore","","RSVP-E2E-IGNORE",15,N],[13,"MobilityHeader","","Mobility Header",15,N],[13,"UdpLite","","UDPLite",15,N],[13,"MplsInIp","","MPLS-in-IP",15,N],[13,"Manet","","MANET Protocols",15,N],[13,"Hip","","Host Identity Protocol",15,N],[13,"Shim6","","Shim6 Protocol",15,N],[13,"Wesp","","Wrapped Encapsulating Security Payload",15,N],[13,"Rohc","","Robust Header Compression",15,N],[13,"Reserved","","Reserved",15,N],[13,"Unknown","","Unknown",15,N],[17,"MIN_HEADER_SIZE","","Minimum size of the IPv4 header",N,N],[11,"parse","","Parses bytes into an IPv4 packet",16,[[["b"]],["result"]]],[11,"get_version","","Returns the version field of the header",16,[[["self"]],["u8"]]],[11,"get_ihl","","Returns the IHL (Internet Header Length) field of the header",16,[[["self"]],["u8"]]],[11,"get_dscp","","Returns the DSCP (Differentiated Services Code Point) field of the header",16,[[["self"]],["u8"]]],[11,"get_ecn","","Returns the ECN (Explicit Congestion Notification) field of the header",16,[[["self"]],["u8"]]],[11,"get_total_length","","Returns the total length field of the header",16,[[["self"]],["u16"]]],[11,"len","","Returns the length (header + data) of this packet",16,[[["self"]],["u16"]]],[11,"get_identification","","Returns the identification field of the header",16,[[["self"]],["u16"]]],[11,"get_df","","Returns the DF (Don't Fragment) field of the header",16,[[["self"]],["bool"]]],[11,"get_mf","","Returns the MF (More Fragments) field of the header",16,[[["self"]],["bool"]]],[11,"get_fragment_offset","","Returns the Fragment Offset field of the header",16,[[["self"]],["u16"]]],[11,"get_ttl","","Returns the TTL (Time To Live) field of the header",16,[[["self"]],["u8"]]],[11,"get_protocol","","Returns the protocol field of the header",16,[[["self"]],["protocol"]]],[11,"get_source","","Returns the Source (IP address) field of the header",16,[[["self"]],["addr"]]],[11,"get_destination","","Returns the Destination (IP address) field of the header",16,[[["self"]],["addr"]]],[11,"header","","Immutable view into the header",16,N],[11,"payload","","Immutable view into the payload",16,N],[11,"as_bytes","","Returns the byte representation of this packet",16,N],[11,"payload_mut","","View into the payload",16,N],[11,"into_payload","","Returns the payload of this frame",16,N],[11,"new","","Transforms the given buffer into an IPv4 packet",16,[[["b"]],["self"]]],[11,"echo_request","","Fills the payload with an Echo Request ICMP message",16,[[["self"],["f"]]]],[11,"udp","","Fills the payload with an UDP packet",16,[[["self"],["f"]]]],[11,"truncate","","Truncates the payload to the specified length",16,[[["self"],["u16"]]]],[11,"truncate","","Truncates the payload to the specified length",16,[[["self"],["u16"]],["packet",["invalid"]]]],[11,"set_version","","Sets the version field of the header",16,[[["self"],["u8"]]]],[11,"set_dscp","","Sets the DSCP (Differentiated Services Code Point) field of the header",16,[[["self"],["u8"]]]],[11,"set_ecn","","Sets the ECN (Explicit Congestion Notification) field of the header",16,[[["self"],["u8"]]]],[11,"set_identification","","Sets the identification field of the header",16,[[["self"],["u16"]]]],[11,"set_df","","Sets the DF (Don't Fragment) field of the header",16,[[["self"],["bool"]]]],[11,"set_mf","","Sets the MF (More Fragments) field of the header",16,[[["self"],["bool"]]]],[11,"set_fragment_offset","","Sets the Fragment Offset field of the header",16,[[["self"],["u16"]]]],[11,"set_ttl","","Sets the TTL (Time To Live) field of the header",16,[[["self"],["u8"]]]],[11,"set_protocol","","Sets the Protocol field of the header",16,[[["self"],["protocol"]]]],[11,"set_source","","Sets the Source (IP address) field of the header",16,[[["self"],["addr"]]]],[11,"set_destination","","Sets the Destination (IP address) field of the header",16,[[["self"],["addr"]]]],[11,"update_checksum","","Updates the Checksum field of the header",16,[[["self"]],["packet",["valid"]]]],[11,"set_version","","Sets the version field of the header",16,[[["self"],["u8"]],["packet",["invalid"]]]],[11,"set_dscp","","Sets the DSCP (Differentiated Services Code Point) field of the header",16,[[["self"],["u8"]],["packet",["invalid"]]]],[11,"set_ecn","","Sets the ECN (Explicit Congestion Notification) field of the header",16,[[["self"],["u8"]],["packet",["invalid"]]]],[11,"set_identification","","Sets the identification field of the header",16,[[["self"],["u16"]],["packet",["invalid"]]]],[11,"set_df","","Sets the DF (Don't Fragment) field of the header",16,[[["self"],["bool"]],["packet",["invalid"]]]],[11,"set_mf","","Sets the MF (More Fragments) field of the header",16,[[["self"],["bool"]],["packet",["invalid"]]]],[11,"set_fragment_offset","","Sets the Fragment Offset field of the header",16,[[["self"],["u16"]],["packet",["invalid"]]]],[11,"set_ttl","","Sets the TTL (Time To Live) field of the header",16,[[["self"],["u8"]],["packet",["invalid"]]]],[11,"set_protocol","","Sets the Protocol field of the header",16,[[["self"],["protocol"]],["packet",["invalid"]]]],[11,"set_source","","Sets the Source (IP address) field of the header",16,[[["self"],["addr"]],["packet",["invalid"]]]],[11,"set_destination","","Sets the Destination (IP address) field of the header",16,[[["self"],["addr"]],["packet",["invalid"]]]],[18,"LOOPBACK","","Loopback address",14,N],[18,"UNSPECIFIED","","Unspecified address",14,N],[11,"is_ipv6_extension_header","","Is this an IPv6 extension header?",15,[[["self"]],["bool"]]],[0,"ipv6","jnet","IPv6: Internet Protocol v6",N,N],[3,"Packet","jnet::ipv6","IPv6 packet",N,N],[3,"Addr","","IPv6 address",N,N],[12,"0","","",17,N],[17,"HEADER_SIZE","","Fixed header size, in bytes",N,N],[11,"parse","","Parses bytes into an IPv6 packet",18,[[["b"]],["result"]]],[11,"get_version","","Reads the 'Version' field",18,[[["self"]],["u8"]]],[11,"get_traffic_class","","Reads the 'Traffic Class' field",18,[[["self"]],["u8"]]],[11,"get_flow_label","","Reads the 'Flow Label' field (20 bits)",18,[[["self"]],["u32"]]],[11,"get_length","","Reads the 'Payload length' field",18,[[["self"]],["u16"]]],[11,"get_next_header","","Reads the 'Next Header' field",18,[[["self"]],["nextheader"]]],[11,"get_hop_limit","","Reads the 'Hop Limit' field",18,[[["self"]],["u8"]]],[11,"get_source","","Reads the 'Source Address' field",18,[[["self"]],["addr"]]],[11,"get_destination","","Reads the 'Destination Address' field",18,[[["self"]],["addr"]]],[11,"payload","","Immutable view into the payload",18,N],[11,"as_bytes","","Returns the byte representation of this packet",18,N],[11,"new","","Transforms the given buffer into an IPv4 packet",18,[[["b"]],["self"]]],[11,"set_traffic_class","","Sets the 'Traffic class' field",18,[[["self"],["u8"]]]],[11,"set_flow_label","","Sets the 'Flow label' field",18,[[["self"],["u32"]]]],[11,"set_next_header","","Sets the 'Next Header' field",18,[[["self"],["nextheader"]]]],[11,"set_hop_limit","","Sets the 'Hop limit' field",18,[[["self"],["u8"]]]],[11,"set_source","","Sets the 'Source address' field",18,[[["self"],["addr"]]]],[11,"set_destination","","Sets the 'Destination address' field",18,[[["self"],["addr"]]]],[11,"payload_mut","","Immutable view into the payload",18,N],[11,"neighbor_advertisement","","Fills the payload with a Neighbor Advertisement ICMPv6 message",18,N],[11,"udp","","Fills the payload with a UDP packet",18,N],[11,"truncate","","Truncates the payload to the specified length",18,[[["self"],["u16"]]]],[18,"UNSPECIFIED","","Unspecified address",17,N],[18,"LOOPBACK","","Loopback address",17,N],[18,"ALL_NODES","","All link-local nodes multicast address",17,N],[18,"ALL_ROUTERS","","All link-local routers multicast address",17,N],[11,"is_link_local","","Is this a link local address?",17,[[["self"]],["bool"]]],[11,"is_loopback","","Is this the loopback address?",17,[[["self"]],["bool"]]],[11,"is_multicast","","Is this a multicast address?",17,[[["self"]],["bool"]]],[11,"is_solicited_node","","Is this a solicited node multicast address?",17,[[["self"]],["bool"]]],[11,"is_unspecified","","Is this the unspecified address?",17,[[["self"]],["bool"]]],[11,"into_solicited_node","","Turns this unicast or anycast address into a solicited node multicast address",17,[[["self"]],["self"]]],[0,"sixlowpan","jnet","6LoWPAN: IPv6 over Low-Power Wireless Personal Area Networks",N,N],[0,"iphc","jnet::sixlowpan","LOWPAN_IPHC encoding",N,N],[3,"Packet","jnet::sixlowpan::iphc","LOWPAN_IPHC compressed IPv6 packet",N,N],[3,"ElidedAddr","","Fully elided IPv6 address",N,N],[3,"Context","","IPHC encoding context",N,N],[12,"source","","Source link-layer address",19,N],[12,"destination","","Destination link-layer address",19,N],[4,"Addr","","Maybe IPHC compressed address",N,N],[13,"Complete","","Complete address",20,N],[13,"Elided","","Elided address",20,N],[11,"parse","","Parses the bytes as a LOWPAN_IPHC compressed IPv6 packet",21,[[["b"]],["result"]]],[11,"get_next_header","","Reads the 'Next header' field",21,[[["self"]],["option",["nextheader"]]]],[11,"get_hop_limit","","Reads the (potentially compressed) 'Hop limit' field",21,[[["self"]],["u8"]]],[11,"get_source","","Reads the (potentially compressed) 'Source Address' field",21,[[["self"]],["addr"]]],[11,"get_destination","","Reads the (potentially compressed) 'Destination Address' field",21,[[["self"]],["addr"]]],[11,"header","","Immutable view into the header",21,N],[11,"payload","","Immutable view into the payload",21,N],[11,"bytes","","Byte representation of this packet",21,N],[11,"get_tf","","Reads the 'Traffic class, Flow label' field",21,[[["self"]],["u8"]]],[11,"get_nh","","Reads the 'Next Header field",21,[[["self"]],["bool"]]],[11,"get_hlim","","Reads the 'Hop Limit' field",21,[[["self"]],["u8"]]],[11,"get_cid","","Reads the 'Context IDentifier extension' field",21,[[["self"]],["bool"]]],[11,"get_sac","","Reads the 'Source Address Compression' field",21,[[["self"]],["bool"]]],[11,"get_sam","","Reads the 'Source Address Mode' field",21,[[["self"]],["u8"]]],[11,"get_m","","Reads the 'Multicast compression' field",21,[[["self"]],["bool"]]],[11,"get_dac","","Reads the 'Destination Address Compression' field",21,[[["self"]],["bool"]]],[11,"get_dam","","Reads the 'Destination Address Mode' IPHC field",21,[[["self"]],["u8"]]],[11,"payload_mut","","Mutable view into the payload",21,N],[11,"set_payload","","Fills the payload with the given data and adjusts the length of the CoAP message",21,N],[11,"complete","","Complete this elided address using Link-layer information",22,[[["self"],["a"]],["addr"]]],[11,"empty","","No context",19,[[],["self"]]],[0,"nhc","jnet::sixlowpan","LOWPAN_NHC encoding",N,N],[3,"UdpPacket","jnet::sixlowpan::nhc","LOWPAN_NHC compressed UDP packet",N,N],[11,"parse","","Parses the bytes as a LOWPAN_IPHC compressed IPv6 packet",23,[[["b"]],["result"]]],[11,"get_source","","Reads the (potentially compressed) 'Source Port' field",23,[[["self"]],["u16"]]],[11,"get_destination","","Reads the (potentially compressed) 'Destination Port' field",23,[[["self"]],["u16"]]],[11,"get_checksum","","Reads the (potentially compressed) 'Checksum' field",23,[[["self"]],["option",["u16"]]]],[11,"payload","","Immutable view into the UDP payload",23,N],[11,"bytes","","Byte representation of this packet",23,N],[11,"get_c","","Reads the 'Checksum' NHC field",23,[[["self"]],["bool"]]],[11,"get_p","","Reads the 'Ports' NHC field",23,[[["self"]],["u8"]]],[11,"verify_ipv6_checksum","","Verifies the 'Checksum' field",23,[[["self"],["addr"],["addr"]],["bool"]]],[11,"payload_mut","","Mutable view into the payload",23,N],[11,"update_checksum","","Updates the checksum field, if not elided",23,[[["self"],["addr"],["addr"]]]],[11,"set_payload","","Fills the payload with the given data and adjusts the length of the CoAP message",23,N],[11,"coap","","Fills the payload with a CoAP message",23,[[["self"],["u8"],["f"]]]],[0,"icmp","jnet","ICMP: Internet Control Message Protocol",N,N],[3,"Message","jnet::icmp","ICMP Message",N,N],[4,"EchoReply","","[Type State] The Echo Reply type",N,N],[4,"EchoRequest","","[Type State] The Echo Request type",N,N],[4,"Type","","ICMP types",N,N],[13,"EchoReply","","Echo Reply",24,N],[13,"DestinationUnreachable","","Destination Unreachable",24,N],[13,"EchoRequest","","Echo Request",24,N],[13,"Unknown","","Unknown",24,N],[17,"HEADER_SIZE","","Size of the ICMP header",N,N],[11,"new","","Transforms the input buffer into a Echo Request ICMP packet",25,[[["b"]],["self"]]],[11,"get_identifier","","Returns the Identifier field of the header",25,[[["self"]],["u16"]]],[11,"get_sequence_number","","Returns the Identifier field of the header",25,[[["self"]],["u16"]]],[11,"set_identifier","","Returns the Identifier field of the header",25,[[["self"],["u16"]]]],[11,"set_sequence_number","","Returns the Identifier field of the header",25,[[["self"],["u16"]]]],[11,"parse","","Parses the input bytes into a",25,[[["b"]],["result"]]],[11,"set_type","","Sets the Type field of the header",25,[[["self"],["type"]]]],[11,"set_code","","Sets the Code field of the header",25,[[["self"],["u8"]]]],[11,"set_type","","Sets the Type field of the header",25,[[["self"],["type"]],["message",["unknown","invalid"]]]],[11,"set_code","","Sets the Code field of the header",25,[[["self"],["u8"]],["message",["unknown","invalid"]]]],[11,"downcast","","Downcasts this packet with unknown type into a specific type",25,[[["self"]],["result",["message"]]]],[11,"get_type","","Returns the Type field of the header",25,[[["self"]],["type"]]],[11,"get_code","","Returns the Type field of the header",25,[[["self"]],["u8"]]],[11,"payload","","View into the payload",25,N],[11,"len","","Returns the length (header + data) of this packet",25,[[["self"]],["u16"]]],[11,"as_bytes","","Returns the byte representation of this packet",25,N],[11,"payload_mut","","Mutable view into the payload",25,N],[11,"update_checksum","","Updates the Checksum field of the header",25,[[["self"]],["message",["valid"]]]],[0,"icmpv6","jnet","ICMPv6: Internet Control Message Protocol for IPv6",N,N],[3,"Message","jnet::icmpv6","ICMPv6 Message",N,N],[4,"NeighborSolicitation","","[Type state]",N,N],[4,"NeighborAdvertisement","","[Type state]",N,N],[4,"Type","","ICMPv6 types",N,N],[13,"EchoRequest","","Echo request",26,N],[13,"EchoReply","","Echo reply",26,N],[13,"RouterSolicitation","","Router solicitation",26,N],[13,"RouterAdvertisement","","Router advertisement",26,N],[13,"NeighborSolicitation","","Neighbor solicitation",26,N],[13,"NeighborAdvertisement","","Neighbor advertisement",26,N],[13,"Unknown","","Unknown",26,N],[17,"HEADER_SIZE","","Header size",N,N],[11,"get_type","","Reads the 'Type' field",27,[[["self"]],["type"]]],[11,"get_code","","Reads the 'Code' field",27,[[["self"]],["u8"]]],[11,"get_checksum","","Reads the 'Checksum' field",27,[[["self"]],["u16"]]],[11,"as_bytes","","Returns the byte representation of this frame",27,N],[11,"verify_checksum","","Verifies the 'Checksum' field",27,[[["self"],["addr"],["addr"]],["bool"]]],[11,"free","","Returns the underlying buffer",27,[[["self"]],["b"]]],[11,"update_checksum","","Recomputes and updates the 'Checksum' field",27,[[["self"],["addr"],["addr"]]]],[11,"parse","","Parses the bytes as an ICMPv6 message NOTE this function does not validate the message checksum",27,[[["b"]],["result"]]],[11,"downcast","","Downcasts this packet with unknown type into a specific type",27,[[["self"]],["result",["message","message"]]]],[11,"get_target","","Reads the 'Target Address' field",27,[[["self"]],["addr"]]],[11,"get_source_ll","","Reads the 'Source Link-layer address' option",27,[[["self"]],["option"]]],[11,"neighbor_advertisement","","Transforms the input buffer into a Neighbor Advertisement ICMPv6 message",27,[[["b"],["u8"]],["self"]]],[11,"get_router","","Reads the 'Router' flag",27,[[["self"]],["bool"]]],[11,"get_solicited","","Reads the 'Solicited' flag",27,[[["self"]],["bool"]]],[11,"get_override","","Reads the 'Override' flag",27,[[["self"]],["bool"]]],[11,"get_target","","Reads the 'Target Address' field",27,[[["self"]],["addr"]]],[11,"get_target_ll","","Reads the 'Target Link-layer Address' option",27,[[["self"]],["option"]]],[11,"set_router","","Sets the 'Router' flag",27,[[["self"],["bool"]]]],[11,"set_solicited","","Sets the 'Solicited' flag",27,[[["self"],["bool"]]]],[11,"set_override","","Sets the 'Override' flag",27,[[["self"],["bool"]]]],[11,"set_target","","Sets the 'Target Address' field",27,[[["self"],["addr"]]]],[11,"target_ll_mut","","Mutable view into the 'Target Link-layer address' option",27,[[["self"]],["option"]]],[11,"get_identifier","","Reads the 'Identifier' field",27,[[["self"]],["u16"]]],[11,"get_sequence_number","","Reads the 'Sequence number' field",27,[[["self"]],["u16"]]],[11,"payload","","Immutable view into the payload of this message",27,N],[11,"echo_reply","","Transforms the input buffer into a Echo Reply ICMPv6 message",27,[[["b"]],["self"]]],[11,"set_identifier","","Sets the 'Identifier' field",27,[[["self"],["u16"]]]],[11,"set_sequence_number","","Sets the 'Sequence number' field",27,[[["self"],["u16"]]]],[11,"set_payload","","Fills the payload with the given data and adjusts the length of the UDP packet",27,N],[0,"udp","jnet","UDP: User Datagram Protocol",N,N],[3,"Packet","jnet::udp","UDP packet",N,N],[17,"HEADER_SIZE","","Size of the UDP header",N,N],[11,"parse","","Parses the bytes as an UDP packet",28,[[["b"]],["result"]]],[11,"get_source","","Returns the Source (port) field of the header",28,[[["self"]],["u16"]]],[11,"get_destination","","Returns the Destination (port) field of the header",28,[[["self"]],["u16"]]],[11,"get_length","","Returns the Length field of the header",28,[[["self"]],["u16"]]],[11,"len","","Returns the length (header + data) of this packet",28,[[["self"]],["u16"]]],[11,"payload","","View into the payload",28,N],[11,"as_bytes","","Returns the byte representation of this UDP packet",28,N],[11,"verify_ipv6_checksum","","Verifies the 'Checksum' field",28,[[["self"],["addr"],["addr"]],["bool"]]],[11,"set_source","","Sets the Source (port) field of the header",28,[[["self"],["u16"]]]],[11,"set_destination","","Sets the Destination (port) field of the header",28,[[["self"],["u16"]]]],[11,"zero_checksum","","Zeroes the Checksum field of the header",28,[[["self"]]]],[11,"payload_mut","","Mutable view into the payload",28,N],[11,"update_ipv6_checksum","","Recomputes and updates the 'Checksum' field",28,[[["self"],["addr"],["addr"]]]],[11,"new","","Transforms the given buffer into an UDP packet",28,[[["b"]],["self"]]],[11,"set_payload","","Fills the payload with the given data and adjusts the length of the UDP packet",28,N],[11,"coap","","Fills the payload with a CoAP message",28,[[["self"],["u8"],["f"]]]],[11,"truncate","","Truncates the payload to the specified length",28,[[["self"],["u16"]]]],[0,"coap","jnet","CoAP: Constrained Application Protocol",N,N],[3,"Message","jnet::coap","CoAP (version 1) message",N,N],[3,"Option","","A CoAP option",N,N],[3,"Options","","Iterator over the options of a CoAP message",N,N],[3,"Code","","CoAP Code",N,N],[4,"Set","","Payload has been set",N,N],[4,"Unset","","Payload has not been set yet",N,N],[4,"Type","","CoAP Type",N,N],[13,"Confirmable","","Confirmable message",29,N],[13,"NonConfirmable","","Non-confirmable message",29,N],[13,"Acknowledgement","","Acknowledgement message",29,N],[13,"Reset","","Reset message",29,N],[4,"Method","","CoAP Method Codes",N,N],[13,"Get","","GET",30,N],[13,"Post","","POST",30,N],[13,"Put","","PUT",30,N],[13,"Delete","","DELETE",30,N],[4,"Response","","CoAP Response Codes",N,N],[13,"Created","","Created",31,N],[13,"Deleted","","Deleted",31,N],[13,"Valid","","Valid",31,N],[13,"Changed","","Changed",31,N],[13,"Content","","Content",31,N],[13,"BadRequest","","Bad Request",31,N],[13,"Unauthorized","","Unauthorized",31,N],[13,"BadOption","","Bad Option",31,N],[13,"Forbidden","","Forbidden",31,N],[13,"NotFound","","Not Found",31,N],[13,"MethodNotAllowed","","Method Not Allowed",31,N],[13,"NotAcceptable","","Not Acceptable",31,N],[13,"PreconditionFailed","","Precondition Failed",31,N],[13,"RequestEntityTooLarge","","Request Entity Too Large",31,N],[13,"UnsupportedContentFormat","","Unsupported Content-Format",31,N],[13,"InternalServerError","","Internal Server Error",31,N],[13,"NotImplemented","","Not Implemented",31,N],[13,"BadGateway","","Bad Gateway",31,N],[13,"ServiceUnavailable","","Service Unavailable",31,N],[13,"GatewayTimeout","","Gateway Timeout",31,N],[13,"ProxyingNotSupported","","Proxying Not Supported",31,N],[4,"OptionNumber","","CoAP Option Numbers",N,N],[13,"Reserved0","","Reserved",32,N],[13,"IfMatch","","If-Match",32,N],[13,"UriHost","","Uri-Host",32,N],[13,"ETag","","ETag",32,N],[13,"IfNoneMatch","","If-None-Patch",32,N],[13,"UriPort","","Uri-Port",32,N],[13,"LocationPath","","Location-Path",32,N],[13,"UriPath","","Uri-Path",32,N],[13,"ContentFormat","","Content-Format",32,N],[13,"MaxAge","","Max-Age",32,N],[13,"UriQuery","","Uri-Query",32,N],[13,"Accept","","Accept",32,N],[13,"LocationQuery","","Location-Query",32,N],[13,"ProxyUri","","Proxy-Uri",32,N],[13,"ProxyScheme","","Proxy-Scheme",32,N],[13,"Size1","","Size1",32,N],[13,"Reserved1","","Reserved",32,N],[13,"Reserved2","","Reserved",32,N],[13,"Reserved3","","Reserved",32,N],[13,"Reserved4","","Reserved",32,N],[13,"Unknown","","Unknown",32,N],[4,"ContentFormat","","CoAP Content-Formats",N,N],[13,"TextPlain","","text/plain; charset=utf-8",33,N],[13,"ApplicationLinkFormat","","application/link-format",33,N],[13,"ApplicationXml","","application/xml",33,N],[13,"ApplicationOctetStream","","application/octet-stream",33,N],[13,"ApplicationExi","","application/exi",33,N],[13,"ApplicationJson","","application/json",33,N],[13,"Unknown","","Unknown",33,N],[17,"PORT","","CoAP default UDP port",N,N],[17,"HEADER_SIZE","","Size of a CoAP header",N,N],[11,"get_version","","Returns the Version field of the header",34,[[["self"]],["u8"]]],[11,"get_type","","Returns the Type field of the header",34,[[["self"]],["type"]]],[11,"get_token_length","","Returns the Token Length (TKL) field of the header",34,[[["self"]],["u8"]]],[11,"get_code","","Returns the Code field of the header",34,[[["self"]],["code"]]],[11,"get_message_id","","Returns the Message ID field of the header",34,[[["self"]],["u16"]]],[11,"token","","View into the Token field of the header",34,N],[11,"as_bytes","","Returns the byte representation of this message",34,N],[11,"len","","Returns the length (header + data) of the CoAP message",34,[[["self"]],["u16"]]],[11,"options","","Returns an iterator over the options of this message",34,[[["self"]],["options"]]],[11,"set_code","","Sets the Code field of the header",34,[[["self"],["c"]]]],[11,"set_message_id","","Sets the Message ID field of the header",34,[[["self"],["u16"]]]],[11,"set_type","","Sets the Type field of the header",34,[[["self"],["type"]]]],[11,"token_mut","","Mutable view into the Token field",34,N],[11,"parse","","Parses bytes into a CoAP message",34,[[["b"]],["result"]]],[11,"payload","","View into the payload",34,N],[11,"payload_mut","","Mutable view into the payload",34,N],[11,"new","","Transforms the given buffer into a CoAP message",34,[[["b"],["u8"]],["self"]]],[11,"add_option","","Adds an option to this message",34,N],[11,"clear_options","","Removes all the options this message has",34,[[["self"]]]],[11,"set_payload","","Fills the payload with the given data and adjusts the length of the CoAP message",34,N],[11,"no_payload","","Finishing constructing this message by leaving the payload empty and truncating the message",34,[[["self"]],["message"]]],[11,"number","","Returns the number of this option",35,[[["self"]],["optionnumber"]]],[11,"value","","Returns the value of this option",35,N],[18,"EMPTY","","Empty message",36,N],[11,"class","","Returns the class of this code",36,[[["self"]],["u8"]]],[11,"detail","","Returns the detail of this code",36,[[["self"]],["u8"]]],[11,"is_request","","Checks if this is a request code",36,[[["self"]],["bool"]]],[11,"is_response","","Checks if this is a reponse code",36,[[["self"]],["bool"]]],[11,"is_critical","","Is this a critical option?",32,[[["self"]],["bool"]]],[11,"is_elective","","Is this an elective option?",32,[[["self"]],["bool"]]],[11,"is_unsafe","","Is this option UnSafe to forward?",32,[[["self"]],["bool"]]],[11,"try_from","jnet","",37,[[["u"]],["result"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"into","","",39,[[["self"]],["u"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"try_from","jnet::ether","",1,[[["u"]],["result"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"try_from","jnet::ieee802154","",9,[[["u"]],["result"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"try_from","jnet::mac","",10,[[["u"]],["result"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"try_from","jnet::arp","",13,[[["u"]],["result"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"into","","",41,[[["self"]],["u"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"try_from","jnet::ipv4","",16,[[["u"]],["result"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"try_from","jnet::ipv6","",18,[[["u"]],["result"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"try_from","jnet::sixlowpan::iphc","",21,[[["u"]],["result"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"try_from","jnet::sixlowpan::nhc","",23,[[["u"]],["result"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"try_from","jnet::icmp","",25,[[["u"]],["result"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"try_from","jnet::icmpv6","",27,[[["u"]],["result"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"into","","",45,[[["self"]],["u"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"try_from","jnet::udp","",28,[[["u"]],["result"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"try_from","jnet::coap","",34,[[["u"]],["result"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"into_iter","","",46,[[["self"]],["i"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"into","","",48,[[["self"]],["u"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"fmt","jnet::ether","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","jnet::ieee802154","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","jnet::mac","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","jnet::arp","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","jnet::ipv4","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","jnet::ipv6","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","jnet::sixlowpan::iphc","",21,[[["self"],["formatter"]],["result"]]],[11,"fmt","jnet::sixlowpan::nhc","",23,[[["self"],["formatter"]],["result"]]],[11,"fmt","jnet::icmp","",25,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",25,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","jnet::icmpv6","",27,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",27,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",27,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",27,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",26,[[["self"],["formatter"]],["result"]]],[11,"fmt","jnet::udp","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt","jnet::coap","",34,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",29,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",36,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",30,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",31,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",32,[[["self"],["formatter"]],["result"]]],[11,"fmt","jnet::ieee802154","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","jnet::mac","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","jnet::ipv4","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","jnet::ipv6","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","jnet::sixlowpan::iphc","",22,[[["self"],["formatter"]],["result"]]],[11,"fmt","jnet::coap","",36,[[["self"],["formatter"]],["result"]]],[11,"eq","jnet::ether","",0,[[["self"],["type"]],["bool"]]],[11,"ne","","",0,[[["self"],["type"]],["bool"]]],[11,"eq","jnet::ieee802154","",6,[[["self"],["type"]],["bool"]]],[11,"ne","","",6,[[["self"],["type"]],["bool"]]],[11,"eq","","",7,[[["self"],["addrmode"]],["bool"]]],[11,"eq","","",8,[[["self"],["addr"]],["bool"]]],[11,"ne","","",8,[[["self"],["addr"]],["bool"]]],[11,"eq","","",2,[[["self"],["panid"]],["bool"]]],[11,"ne","","",2,[[["self"],["panid"]],["bool"]]],[11,"eq","","",3,[[["self"],["shortaddr"]],["bool"]]],[11,"ne","","",3,[[["self"],["shortaddr"]],["bool"]]],[11,"eq","","",4,[[["self"],["extendedaddr"]],["bool"]]],[11,"ne","","",4,[[["self"],["extendedaddr"]],["bool"]]],[11,"eq","jnet::mac","",10,[[["self"],["addr"]],["bool"]]],[11,"ne","","",10,[[["self"],["addr"]],["bool"]]],[11,"eq","jnet::arp","",11,[[["self"],["hardwaretype"]],["bool"]]],[11,"ne","","",11,[[["self"],["hardwaretype"]],["bool"]]],[11,"eq","","",12,[[["self"],["operation"]],["bool"]]],[11,"ne","","",12,[[["self"],["operation"]],["bool"]]],[11,"eq","jnet::ipv4","",14,[[["self"],["addr"]],["bool"]]],[11,"ne","","",14,[[["self"],["addr"]],["bool"]]],[11,"eq","","",15,[[["self"],["protocol"]],["bool"]]],[11,"ne","","",15,[[["self"],["protocol"]],["bool"]]],[11,"eq","jnet::ipv6","",17,[[["self"],["addr"]],["bool"]]],[11,"ne","","",17,[[["self"],["addr"]],["bool"]]],[11,"eq","jnet::icmp","",24,[[["self"],["type"]],["bool"]]],[11,"ne","","",24,[[["self"],["type"]],["bool"]]],[11,"eq","jnet::icmpv6","",26,[[["self"],["type"]],["bool"]]],[11,"ne","","",26,[[["self"],["type"]],["bool"]]],[11,"eq","jnet::coap","",29,[[["self"],["type"]],["bool"]]],[11,"eq","","",36,[[["self"],["code"]],["bool"]]],[11,"ne","","",36,[[["self"],["code"]],["bool"]]],[11,"eq","","",30,[[["self"],["method"]],["bool"]]],[11,"eq","","",31,[[["self"],["response"]],["bool"]]],[11,"eq","","",32,[[["self"],["optionnumber"]],["bool"]]],[11,"ne","","",32,[[["self"],["optionnumber"]],["bool"]]],[11,"partial_cmp","","",32,[[["self"],["optionnumber"]],["option",["ordering"]]]],[11,"lt","","",32,[[["self"],["optionnumber"]],["bool"]]],[11,"le","","",32,[[["self"],["optionnumber"]],["bool"]]],[11,"gt","","",32,[[["self"],["optionnumber"]],["bool"]]],[11,"ge","","",32,[[["self"],["optionnumber"]],["bool"]]],[11,"next","","",46,[[["self"]],["coreoption",["option"]]]],[11,"from","jnet::ether","",0,[[["u16"]],["type"]]],[11,"from","jnet::ieee802154","",6,[[["u8"]],["type"]]],[11,"from","","",8,[[["shortaddr"]],["addr"]]],[11,"from","","",8,[[["extendedaddr"]],["addr"]]],[11,"from","jnet::arp","",11,[[["u16"]],["hardwaretype"]]],[11,"from","","",12,[[["u16"]],["operation"]]],[11,"from","jnet::ipv4","",15,[[["u8"]],["protocol"]]],[11,"from","jnet::icmp","",25,[[["message",["echorequest"]]],["self"]]],[11,"from","","",24,[[["u8"]],["type"]]],[11,"from","jnet::icmpv6","",27,[[["message",["echorequest"]]],["self"]]],[11,"from","","",26,[[["u8"]],["type"]]],[11,"from","jnet::coap","",36,[[["method"]],["code"]]],[11,"from","","",36,[[["response"]],["code"]]],[11,"from","","",32,[[["u16"]],["optionnumber"]]],[11,"from","","",33,[[["u16"]],["contentformat"]]],[11,"clone","jnet::ether","",1,[[["self"]],["frame"]]],[11,"clone","","",0,[[["self"]],["type"]]],[11,"clone","jnet::ieee802154","",9,[[["self"]],["frame"]]],[11,"clone","","",6,[[["self"]],["type"]]],[11,"clone","","",7,[[["self"]],["addrmode"]]],[11,"clone","","",8,[[["self"]],["addr"]]],[11,"clone","","",2,[[["self"]],["panid"]]],[11,"clone","","",3,[[["self"]],["shortaddr"]]],[11,"clone","","",4,[[["self"]],["extendedaddr"]]],[11,"clone","jnet::mac","",10,[[["self"]],["addr"]]],[11,"clone","jnet::arp","",13,[[["self"]],["self"]]],[11,"clone","","",11,[[["self"]],["hardwaretype"]]],[11,"clone","","",12,[[["self"]],["operation"]]],[11,"clone","jnet::ipv4","",14,[[["self"]],["addr"]]],[11,"clone","","",15,[[["self"]],["protocol"]]],[11,"clone","jnet::ipv6","",17,[[["self"]],["addr"]]],[11,"clone","jnet::sixlowpan::iphc","",21,[[["self"]],["packet"]]],[11,"clone","jnet::icmp","",25,[[["self"]],["self"]]],[11,"clone","","",24,[[["self"]],["type"]]],[11,"clone","jnet::icmpv6","",27,[[["self"]],["self"]]],[11,"clone","","",26,[[["self"]],["type"]]],[11,"clone","jnet::coap","",29,[[["self"]],["type"]]],[11,"clone","","",36,[[["self"]],["code"]]],[11,"clone","","",30,[[["self"]],["method"]]],[11,"clone","","",31,[[["self"]],["response"]]],[11,"clone","","",32,[[["self"]],["optionnumber"]]],[11,"into","","",29,[[["self"]],["u8"]]],[11,"hash","jnet::mac","",10,N],[11,"hash","jnet::ipv4","",14,N],[11,"hash","jnet::ipv6","",17,N]],"paths":[[4,"Type"],[3,"Frame"],[3,"PanId"],[3,"ShortAddr"],[3,"ExtendedAddr"],[4,"SrcDest"],[4,"Type"],[4,"AddrMode"],[4,"Addr"],[3,"Frame"],[3,"Addr"],[4,"HardwareType"],[4,"Operation"],[3,"Packet"],[3,"Addr"],[4,"Protocol"],[3,"Packet"],[3,"Addr"],[3,"Packet"],[3,"Context"],[4,"Addr"],[3,"Packet"],[3,"ElidedAddr"],[3,"UdpPacket"],[4,"Type"],[3,"Message"],[4,"Type"],[3,"Message"],[3,"Packet"],[4,"Type"],[4,"Method"],[4,"Response"],[4,"OptionNumber"],[4,"ContentFormat"],[3,"Message"],[3,"Option"],[3,"Code"],[4,"Unknown"],[4,"Valid"],[4,"Invalid"],[4,"Ethernet"],[4,"Ipv4"],[4,"EchoReply"],[4,"EchoRequest"],[4,"NeighborSolicitation"],[4,"NeighborAdvertisement"],[3,"Options"],[4,"Set"],[4,"Unset"]]};
searchIndex["owning_slice"]={"doc":"Slicing by value","items":[[3,"OwningSliceFrom","owning_slice","Owning slice of a `BUFFER` where `end == buffer.len()`",N,N],[3,"OwningSliceTo","","Owning slice of a `BUFFER` where `start == 0`",N,N],[3,"OwningSlice","","Owning slice of a `BUFFER`",N,N],[5,"OwningSliceFrom","","Equivalent to `buffer[start..]` but by value",N,[[["b"],["i"]],["owningslicefrom"]]],[5,"OwningSliceTo","","Equivalent to `buffer[..end]` but by value",N,[[["b"],["i"]],["owningsliceto"]]],[5,"OwningSlice","","Equivalent to `buffer[start..start+length]` but by value",N,[[["b"],["i"],["i"]],["owningslice"]]],[11,"unslice","","Destroys the owning slice and returns the original buffer",0,[[["self"]],["b"]]],[11,"unslice","","Destroys the owning slice and returns the original buffer",1,[[["self"]],["b"]]],[8,"IntoSlice","","`slice[start..end]` but by value",N,N],[16,"Slice","","The result of the slicing operation",2,N],[10,"into_slice","","`slice[start..end]` but by value",2,N],[8,"IntoSliceFrom","","`slice[start..]` but by value",N,N],[16,"SliceFrom","","The result of the slicing operation",3,N],[10,"into_slice_from","","`slice[start..]` but by value",3,N],[8,"IntoSliceTo","","`slice[..end]` but by value",N,N],[16,"SliceTo","","The result of the slicing operation",4,N],[10,"into_slice_to","","`slice[..end]` but by value",4,N],[8,"Truncate","","Truncate a slice in place",N,N],[10,"truncate","","Shortens the slice to the requested `length`",5,[[["self"],["i"]]]],[11,"unslice","","Destroys the owning slice and returns the original buffer",6,[[["self"]],["b"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"into_slice","","",0,N],[11,"into_slice","","",0,N],[11,"into_slice","","",0,N],[11,"into_slice","","",1,N],[11,"into_slice","","",1,N],[11,"into_slice","","",1,N],[11,"into_slice","","",6,N],[11,"into_slice","","",6,N],[11,"into_slice","","",6,N],[11,"into_slice_from","","",0,N],[11,"into_slice_from","","",0,N],[11,"into_slice_from","","",1,N],[11,"into_slice_from","","",1,N],[11,"into_slice_from","","",1,N],[11,"into_slice_from","","",6,N],[11,"into_slice_from","","",6,N],[11,"into_slice_from","","",6,N],[11,"into_slice_to","","",0,N],[11,"into_slice_to","","",0,N],[11,"into_slice_to","","",1,N],[11,"into_slice_to","","",1,N],[11,"into_slice_to","","",1,N],[11,"into_slice_to","","",6,N],[11,"into_slice_to","","",6,N],[11,"into_slice_to","","",6,N],[11,"truncate","","",1,[[["self"],["i"]]]],[11,"truncate","","",1,[[["self"],["u16"]]]],[11,"truncate","","",1,[[["self"],["u8"]]]],[11,"truncate","","",6,[[["self"],["i"]]]],[11,"truncate","","",6,[[["self"],["u16"]]]],[11,"truncate","","",6,[[["self"],["u8"]]]],[11,"deref","","",0,N],[11,"deref","","",1,N],[11,"deref","","",6,N],[11,"deref_mut","","",0,N],[11,"deref_mut","","",1,N],[11,"deref_mut","","",6,N],[11,"from","","",6,[[["owningslicefrom"]],["owningslice"]]],[11,"from","","",6,[[["owningsliceto"]],["owningslice"]]],[11,"clone","","",0,[[["self"]],["owningslicefrom"]]],[11,"clone","","",1,[[["self"]],["owningsliceto"]]],[11,"clone","","",6,[[["self"]],["owningslice"]]],[11,"as_slice","","",0,N],[11,"as_slice","","",1,N],[11,"as_slice","","",6,N],[11,"as_mut_slice","","",0,N],[11,"as_mut_slice","","",1,N],[11,"as_mut_slice","","",6,N]],"paths":[[3,"OwningSliceFrom"],[3,"OwningSliceTo"],[8,"IntoSlice"],[8,"IntoSliceFrom"],[8,"IntoSliceTo"],[8,"Truncate"],[3,"OwningSlice"]]};
searchIndex["proc_macro2"]={"doc":"A \"shim crate\" intended to multiplex the [`proc_macro`] API on to stable Rust.","items":[[3,"TokenStream","proc_macro2","",N,N],[3,"LexError","","",N,N],[3,"Span","","",N,N],[3,"Group","","",N,N],[3,"Op","","",N,N],[3,"Term","","",N,N],[3,"Literal","","",N,N],[4,"TokenTree","","",N,N],[13,"Group","","",0,N],[13,"Term","","",0,N],[13,"Op","","",0,N],[13,"Literal","","",0,N],[4,"Delimiter","","",N,N],[13,"Parenthesis","","",1,N],[13,"Brace","","",1,N],[13,"Bracket","","",1,N],[13,"None","","",1,N],[4,"Spacing","","",N,N],[13,"Alone","","",2,N],[13,"Joint","","",2,N],[0,"token_stream","","",N,N],[3,"IntoIter","proc_macro2::token_stream","",N,N],[11,"empty","proc_macro2","",3,[[],["tokenstream"]]],[11,"is_empty","","",3,[[["self"]],["bool"]]],[11,"call_site","","",4,[[],["span"]]],[11,"span","","",0,[[["self"]],["span"]]],[11,"set_span","","",0,[[["self"],["span"]]]],[11,"new","","",5,[[["delimiter"],["tokenstream"]],["group"]]],[11,"delimiter","","",5,[[["self"]],["delimiter"]]],[11,"stream","","",5,[[["self"]],["tokenstream"]]],[11,"span","","",5,[[["self"]],["span"]]],[11,"set_span","","",5,[[["self"],["span"]]]],[11,"new","","",6,[[["char"],["spacing"]],["op"]]],[11,"op","","",6,[[["self"]],["char"]]],[11,"spacing","","",6,[[["self"]],["spacing"]]],[11,"span","","",6,[[["self"]],["span"]]],[11,"set_span","","",6,[[["self"],["span"]]]],[11,"new","","",7,[[["str"],["span"]],["term"]]],[11,"as_str","","",7,[[["self"]],["str"]]],[11,"span","","",7,[[["self"]],["span"]]],[11,"set_span","","",7,[[["self"],["span"]]]],[11,"u8_suffixed","","",8,[[["u8"]],["literal"]]],[11,"u16_suffixed","","",8,[[["u16"]],["literal"]]],[11,"u32_suffixed","","",8,[[["u32"]],["literal"]]],[11,"u64_suffixed","","",8,[[["u64"]],["literal"]]],[11,"usize_suffixed","","",8,[[["usize"]],["literal"]]],[11,"i8_suffixed","","",8,[[["i8"]],["literal"]]],[11,"i16_suffixed","","",8,[[["i16"]],["literal"]]],[11,"i32_suffixed","","",8,[[["i32"]],["literal"]]],[11,"i64_suffixed","","",8,[[["i64"]],["literal"]]],[11,"isize_suffixed","","",8,[[["isize"]],["literal"]]],[11,"u8_unsuffixed","","",8,[[["u8"]],["literal"]]],[11,"u16_unsuffixed","","",8,[[["u16"]],["literal"]]],[11,"u32_unsuffixed","","",8,[[["u32"]],["literal"]]],[11,"u64_unsuffixed","","",8,[[["u64"]],["literal"]]],[11,"usize_unsuffixed","","",8,[[["usize"]],["literal"]]],[11,"i8_unsuffixed","","",8,[[["i8"]],["literal"]]],[11,"i16_unsuffixed","","",8,[[["i16"]],["literal"]]],[11,"i32_unsuffixed","","",8,[[["i32"]],["literal"]]],[11,"i64_unsuffixed","","",8,[[["i64"]],["literal"]]],[11,"isize_unsuffixed","","",8,[[["isize"]],["literal"]]],[11,"f64_unsuffixed","","",8,[[["f64"]],["literal"]]],[11,"f64_suffixed","","",8,[[["f64"]],["literal"]]],[11,"f32_unsuffixed","","",8,[[["f32"]],["literal"]]],[11,"f32_suffixed","","",8,[[["f32"]],["literal"]]],[11,"string","","",8,[[["str"]],["literal"]]],[11,"character","","",8,[[["char"]],["literal"]]],[11,"byte_string","","",8,N],[11,"span","","",8,[[["self"]],["span"]]],[11,"set_span","","",8,[[["self"],["span"]]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"into_iter","","",3,[[["self"]],["i"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_string","","",6,[[["self"]],["string"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_string","","",8,[[["self"]],["string"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"into","proc_macro2::token_stream","",10,[[["self"]],["u"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into_iter","","",10,[[["self"]],["i"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"next","","",10,[[["self"]],["option",["tokentree"]]]],[11,"eq","proc_macro2","",1,[[["self"],["delimiter"]],["bool"]]],[11,"eq","","",2,[[["self"],["spacing"]],["bool"]]],[11,"from","","",3,[[["tokenstream"]],["tokenstream"]]],[11,"from","","",0,[[["group"]],["tokentree"]]],[11,"from","","",0,[[["term"]],["tokentree"]]],[11,"from","","",0,[[["op"]],["tokentree"]]],[11,"from","","",0,[[["literal"]],["tokentree"]]],[11,"clone","","",3,[[["self"]],["tokenstream"]]],[11,"clone","","",4,[[["self"]],["span"]]],[11,"clone","","",0,[[["self"]],["tokentree"]]],[11,"clone","","",5,[[["self"]],["group"]]],[11,"clone","","",1,[[["self"]],["delimiter"]]],[11,"clone","","",6,[[["self"]],["op"]]],[11,"clone","","",2,[[["self"]],["spacing"]]],[11,"clone","","",7,[[["self"]],["term"]]],[11,"clone","","",8,[[["self"]],["literal"]]],[11,"into_iter","","",3,[[["self"]],["intoiter"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","proc_macro2::token_stream","",10,[[["self"],["formatter"]],["result"]]],[11,"from_iter","proc_macro2","",3,[[["i"]],["self"]]],[11,"from_str","","",3,[[["str"]],["result",["tokenstream","lexerror"]]]]],"paths":[[4,"TokenTree"],[4,"Delimiter"],[4,"Spacing"],[3,"TokenStream"],[3,"Span"],[3,"Group"],[3,"Op"],[3,"Term"],[3,"Literal"],[3,"LexError"],[3,"IntoIter"]]};
searchIndex["quote"]={"doc":"This crate provides the [`quote!`] macro for turning Rust syntax tree data structures into tokens of source code.","items":[[3,"Tokens","quote","Tokens produced by a [`quote!`] invocation.",N,N],[11,"new","","Empty tokens.",0,[[],["self"]]],[11,"append","","For use by `ToTokens` implementations.",0,[[["self"],["u"]]]],[11,"append_all","","For use by `ToTokens` implementations.",0,[[["self"],["i"]]]],[11,"append_separated","","For use by `ToTokens` implementations.",0,[[["self"],["i"],["u"]]]],[11,"append_terminated","","For use by `ToTokens` implementations.",0,[[["self"],["i"],["u"]]]],[8,"ToTokens","","Types that can be interpolated inside a [`quote!`] invocation.",N,N],[10,"to_tokens","","Write `self` to the given `Tokens`.",1,[[["self"],["tokens"]]]],[11,"into_tokens","","Convert `self` directly into a `Tokens` object.",1,[[["self"]],["tokens"]]],[14,"quote","","The whole point.",N,N],[14,"quote_spanned","","Same as `quote!`, but applies a given span to all tokens originating within the macro invocation.",N,N],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"into_iter","","",0,[[["self"]],["i"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"to_tokens","","",0,[[["self"],["tokens"]]]],[11,"into_tokens","","",0,[[["self"]],["tokens"]]],[11,"default","","",0,[[],["tokens"]]],[11,"eq","","",0,[[["self"],["self"]],["bool"]]],[11,"clone","","",0,[[["self"]],["tokens"]]],[11,"into_iter","","",0,N],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"hash","","",0,[[["self"],["h"]]]],[11,"into_tokens","","Convert `self` directly into a `Tokens` object.",1,[[["self"]],["tokens"]]]],"paths":[[3,"Tokens"],[8,"ToTokens"]]};
searchIndex["stable_deref_trait"]={"doc":"This module defines an unsafe marker trait, StableDeref, for container types that deref to a fixed address which is valid even when the containing type is moved. For example, Box, Vec, Rc, Arc and String implement this trait. Additionally, it defines CloneStableDeref for types like Rc where clones deref to the same address.","items":[[8,"StableDeref","stable_deref_trait","An unsafe marker trait for types that deref to a stable address, even when moved. For example, this is implemented by Box, Vec, Rc, Arc and String, among others. Even when a Box is moved, the underlying storage remains at a fixed location.",N,N],[8,"CloneStableDeref","","An unsafe marker trait for types where clones deref to the same address. This has all the requirements of StableDeref, and additionally requires that after calling clone(), both the old and new value deref to the same address. For example, Rc and Arc implement CloneStableDeref, but Box and Vec do not.",N,N]],"paths":[]};
searchIndex["syn"]={"doc":"Syn is a parsing library for parsing a stream of Rust tokens into a syntax tree of Rust source code.","items":[[3,"Attribute","syn","An attribute like `#[repr(transparent)]`.",N,N],[12,"pound_token","","",0,N],[12,"style","","",0,N],[12,"bracket_token","","",0,N],[12,"path","","",0,N],[12,"tts","","",0,N],[12,"is_sugared_doc","","",0,N],[3,"MetaList","","A structured list within an attribute, like `derive(Copy, Clone)`.",N,N],[12,"ident","","",1,N],[12,"paren_token","","",1,N],[12,"nested","","",1,N],[3,"MetaNameValue","","A name-value pair within an attribute, like `feature = \"nightly\"`.",N,N],[12,"ident","","",2,N],[12,"eq_token","","",2,N],[12,"lit","","",2,N],[3,"Field","","A field of a struct or enum variant.",N,N],[12,"attrs","","Attributes tagged on the field.",3,N],[12,"vis","","Visibility of the field.",3,N],[12,"ident","","Name of the field, if any.",3,N],[12,"colon_token","","",3,N],[12,"ty","","Type of the field.",3,N],[3,"FieldsNamed","","Named fields of a struct or struct variant such as `Point { x: f64, y: f64 }`.",N,N],[12,"brace_token","","",4,N],[12,"named","","",4,N],[3,"FieldsUnnamed","","Unnamed fields of a tuple struct or tuple variant such as `Some(T)`.",N,N],[12,"paren_token","","",5,N],[12,"unnamed","","",5,N],[3,"Variant","","An enum variant.",N,N],[12,"attrs","","Attributes tagged on the variant.",6,N],[12,"ident","","Name of the variant.",6,N],[12,"fields","","Content stored in the variant.",6,N],[12,"discriminant","","Explicit discriminant: `Variant = 1`",6,N],[3,"VisCrate","","A crate-level visibility: `crate`.",N,N],[12,"crate_token","","",7,N],[3,"VisPublic","","A public visibility level: `pub`.",N,N],[12,"pub_token","","",8,N],[3,"VisRestricted","","A visibility level restricted to some path: `pub(self)` or `pub(super)` or `pub(crate)` or `pub(in some::module)`.",N,N],[12,"pub_token","","",9,N],[12,"paren_token","","",9,N],[12,"in_token","","",9,N],[12,"path","","",9,N],[3,"ExprArray","","A slice literal expression: `[a, b, c, d]`.",N,N],[3,"ExprAssign","","An assignment expression: `a = compute()`.",N,N],[3,"ExprAssignOp","","A compound assignment expression: `counter += 1`.",N,N],[3,"ExprBinary","","A binary operation: `a + b`, `a * b`.",N,N],[12,"attrs","","",10,N],[12,"left","","",10,N],[12,"op","","",10,N],[12,"right","","",10,N],[3,"ExprBlock","","A blocked scope: `{ ... }`.",N,N],[3,"ExprBox","","A box expression: `box f`.",N,N],[3,"ExprBreak","","A `break`, with an optional label to break and an optional expression.",N,N],[3,"ExprCall","","A function call expression: `invoke(a, b)`.",N,N],[12,"attrs","","",11,N],[12,"func","","",11,N],[12,"paren_token","","",11,N],[12,"args","","",11,N],[3,"ExprCast","","A cast expression: `foo as f64`.",N,N],[12,"attrs","","",12,N],[12,"expr","","",12,N],[12,"as_token","","",12,N],[12,"ty","","",12,N],[3,"ExprCatch","","A catch expression: `do catch { ... }`.",N,N],[3,"ExprClosure","","A closure expression: `|a, b| a + b`.",N,N],[3,"ExprContinue","","A `continue`, with an optional label.",N,N],[3,"ExprField","","Access of a named struct field (`obj.k`) or unnamed tuple struct field (`obj.0`).",N,N],[3,"ExprForLoop","","A for loop: `for pat in expr { ... }`.",N,N],[3,"ExprGroup","","An expression contained within invisible delimiters.",N,N],[3,"ExprIf","","An `if` expression with an optional `else` block: `if expr { ... } else { ... }`.",N,N],[3,"ExprIfLet","","An `if let` expression with an optional `else` block: `if let pat = expr { ... } else { ... }`.",N,N],[3,"ExprInPlace","","A placement expression: `place <- value`.",N,N],[3,"ExprIndex","","A square bracketed indexing expression: `vector[2]`.",N,N],[12,"attrs","","",13,N],[12,"expr","","",13,N],[12,"bracket_token","","",13,N],[12,"index","","",13,N],[3,"ExprLit","","A literal in place of an expression: `1`, `\"foo\"`.",N,N],[12,"attrs","","",14,N],[12,"lit","","",14,N],[3,"ExprLoop","","Conditionless loop: `loop { ... }`.",N,N],[3,"ExprMacro","","A macro invocation expression: `format!(\"{}\", q)`.",N,N],[3,"ExprMatch","","A `match` expression: `match n { Some(n) => {}, None => {} }`.",N,N],[3,"ExprMethodCall","","A method call expression: `x.foo::<T>(a, b)`.",N,N],[3,"ExprParen","","A parenthesized expression: `(a + b)`.",N,N],[12,"attrs","","",15,N],[12,"paren_token","","",15,N],[12,"expr","","",15,N],[3,"ExprPath","","A path like `std::mem::replace` possibly containing generic parameters and a qualified self-type.",N,N],[12,"attrs","","",16,N],[12,"qself","","",16,N],[12,"path","","",16,N],[3,"ExprRange","","A range expression: `1..2`, `1..`, `..2`, `1..=2`, `..=2`.",N,N],[3,"ExprReference","","A referencing operation: `&a` or `&mut a`.",N,N],[3,"ExprRepeat","","An array literal constructed from one repeated element: `[0u8; N]`.",N,N],[3,"ExprReturn","","A `return`, with an optional value to be returned.",N,N],[3,"ExprStruct","","A struct literal expression: `Point { x: 1, y: 1 }`.",N,N],[3,"ExprTry","","A try-expression: `expr?`.",N,N],[3,"ExprTuple","","A tuple expression: `(a, b, c, d)`.",N,N],[3,"ExprType","","A type ascription expression: `foo: f64`.",N,N],[3,"ExprUnary","","A unary operation: `!x`, `*x`.",N,N],[12,"attrs","","",17,N],[12,"op","","",17,N],[12,"expr","","",17,N],[3,"ExprUnsafe","","An unsafe block: `unsafe { ... }`.",N,N],[3,"ExprVerbatim","","Tokens in expression position not interpreted by Syn.",N,N],[12,"tts","","",18,N],[3,"ExprWhile","","A while loop: `while expr { ... }`.",N,N],[3,"ExprWhileLet","","A while-let loop: `while let pat = expr { ... }`.",N,N],[3,"ExprYield","","A yield expression: `yield expr`.",N,N],[3,"Index","","The index of an unnamed tuple struct field.",N,N],[12,"index","","",19,N],[12,"span","","",19,N],[3,"BoundLifetimes","","A set of bound lifetimes: `for<'a, 'b, 'c>`.",N,N],[12,"for_token","","",20,N],[12,"lt_token","","",20,N],[12,"lifetimes","","",20,N],[12,"gt_token","","",20,N],[3,"ConstParam","","A const generic parameter: `const LENGTH: usize`.",N,N],[12,"attrs","","",21,N],[12,"const_token","","",21,N],[12,"ident","","",21,N],[12,"colon_token","","",21,N],[12,"ty","","",21,N],[12,"eq_token","","",21,N],[12,"default","","",21,N],[3,"Generics","","Lifetimes and type parameters attached to a declaration of a function, enum, trait, etc.",N,N],[12,"lt_token","","",22,N],[12,"params","","",22,N],[12,"gt_token","","",22,N],[12,"where_clause","","",22,N],[3,"LifetimeDef","","A lifetime definition: `'a: 'b + 'c + 'd`.",N,N],[12,"attrs","","",23,N],[12,"lifetime","","",23,N],[12,"colon_token","","",23,N],[12,"bounds","","",23,N],[3,"PredicateEq","","An equality predicate in a `where` clause (unsupported).",N,N],[12,"lhs_ty","","",24,N],[12,"eq_token","","",24,N],[12,"rhs_ty","","",24,N],[3,"PredicateLifetime","","A lifetime predicate in a `where` clause: `'a: 'b + 'c`.",N,N],[12,"lifetime","","",25,N],[12,"colon_token","","",25,N],[12,"bounds","","",25,N],[3,"PredicateType","","A type predicate in a `where` clause: `for<'c> Foo<'c>: Trait<'c>`.",N,N],[12,"lifetimes","","Any lifetimes from a `for` binding",26,N],[12,"bounded_ty","","The type being bounded",26,N],[12,"colon_token","","",26,N],[12,"bounds","","Trait and lifetime bounds (`Clone+Send+'static`)",26,N],[3,"TraitBound","","A trait used as a bound on a type parameter.",N,N],[12,"paren_token","","",27,N],[12,"modifier","","",27,N],[12,"lifetimes","","The `for<'a>` in `for<'a> Foo<&'a T>`",27,N],[12,"path","","The `Foo<&'a T>` in `for<'a> Foo<&'a T>`",27,N],[3,"TypeParam","","A generic type parameter: `T: Into<String>`.",N,N],[12,"attrs","","",28,N],[12,"ident","","",28,N],[12,"colon_token","","",28,N],[12,"bounds","","",28,N],[12,"eq_token","","",28,N],[12,"default","","",28,N],[3,"WhereClause","","A `where` clause in a definition: `where T: Deserialize<'de>, D: 'static`.",N,N],[12,"where_token","","",29,N],[12,"predicates","","",29,N],[3,"ImplGenerics","","Returned by `Generics::split_for_impl`.",N,N],[3,"Turbofish","","Returned by `TypeGenerics::as_turbofish`.",N,N],[3,"TypeGenerics","","Returned by `Generics::split_for_impl`.",N,N],[3,"Ident","","A word of Rust code, which may be a keyword or legal variable name.",N,N],[3,"Lifetime","","A Rust lifetime: `'a`.",N,N],[3,"LitBool","","A boolean literal: `true` or `false`.",N,N],[12,"value","","",30,N],[12,"span","","",30,N],[3,"LitByte","","A byte literal: `b'f'`.",N,N],[3,"LitByteStr","","A byte string literal: `b\"foo\"`.",N,N],[3,"LitChar","","A character literal: `'a'`.",N,N],[3,"LitFloat","","A floating point literal: `1f64` or `1.0e10f64`.",N,N],[3,"LitInt","","An integer literal: `1` or `1u16`.",N,N],[3,"LitStr","","A UTF-8 string literal: `\"foo\"`.",N,N],[3,"LitVerbatim","","A raw token literal not interpreted by Syn, possibly because it represents an integer larger than 64 bits.",N,N],[12,"token","","",31,N],[3,"Macro","","A macro invocation: `println!(\"{}\", mac)`.",N,N],[12,"path","","",32,N],[12,"bang_token","","",32,N],[12,"delimiter","","",32,N],[12,"tts","","",32,N],[3,"DataEnum","","An enum input to a `proc_macro_derive` macro.",N,N],[12,"enum_token","","",33,N],[12,"brace_token","","",33,N],[12,"variants","","",33,N],[3,"DataStruct","","A struct input to a `proc_macro_derive` macro.",N,N],[12,"struct_token","","",34,N],[12,"fields","","",34,N],[12,"semi_token","","",34,N],[3,"DataUnion","","A tagged union input to a `proc_macro_derive` macro.",N,N],[12,"union_token","","",35,N],[12,"fields","","",35,N],[3,"DeriveInput","","Data structure sent to a `proc_macro_derive` macro.",N,N],[12,"attrs","","Attributes tagged on the whole struct or enum.",36,N],[12,"vis","","Visibility of the struct or enum.",36,N],[12,"ident","","Name of the struct or enum.",36,N],[12,"generics","","Generics required to complete the definition.",36,N],[12,"data","","Data within the struct or enum.",36,N],[3,"Abi","","The binary interface of a function: `extern \"C\"`.",N,N],[12,"extern_token","","",37,N],[12,"name","","",37,N],[3,"BareFnArg","","An argument in a function type: the `usize` in `fn(usize) -> bool`.",N,N],[12,"name","","",38,N],[12,"ty","","",38,N],[3,"TypeArray","","A fixed size array type: `[T; n]`.",N,N],[12,"bracket_token","","",39,N],[12,"elem","","",39,N],[12,"semi_token","","",39,N],[12,"len","","",39,N],[3,"TypeBareFn","","A bare function type: `fn(usize) -> bool`.",N,N],[12,"unsafety","","",40,N],[12,"abi","","",40,N],[12,"fn_token","","",40,N],[12,"lifetimes","","",40,N],[12,"paren_token","","",40,N],[12,"inputs","","",40,N],[12,"variadic","","",40,N],[12,"output","","",40,N],[3,"TypeGroup","","A type contained within invisible delimiters.",N,N],[12,"group_token","","",41,N],[12,"elem","","",41,N],[3,"TypeImplTrait","","An `impl Bound1 + Bound2 + Bound3` type where `Bound` is a trait or a lifetime.",N,N],[12,"impl_token","","",42,N],[12,"bounds","","",42,N],[3,"TypeInfer","","Indication that a type should be inferred by the compiler: `_`.",N,N],[12,"underscore_token","","",43,N],[3,"TypeMacro","","A macro in the type position.",N,N],[12,"mac","","",44,N],[3,"TypeNever","","The never type: `!`.",N,N],[12,"bang_token","","",45,N],[3,"TypeParen","","A parenthesized type equivalent to the inner type.",N,N],[12,"paren_token","","",46,N],[12,"elem","","",46,N],[3,"TypePath","","A path like `std::slice::Iter`, optionally qualified with a self-type as in `<Vec<T> as SomeTrait>::Associated`.",N,N],[12,"qself","","",47,N],[12,"path","","",47,N],[3,"TypePtr","","A raw pointer type: `*const T` or `*mut T`.",N,N],[12,"star_token","","",48,N],[12,"const_token","","",48,N],[12,"mutability","","",48,N],[12,"elem","","",48,N],[3,"TypeReference","","A reference type: `&'a T` or `&'a mut T`.",N,N],[12,"and_token","","",49,N],[12,"lifetime","","",49,N],[12,"mutability","","",49,N],[12,"elem","","",49,N],[3,"TypeSlice","","A dynamically sized slice type: `[T]`.",N,N],[12,"bracket_token","","",50,N],[12,"elem","","",50,N],[3,"TypeTraitObject","","A trait object type `Bound1 + Bound2 + Bound3` where `Bound` is a trait or a lifetime.",N,N],[12,"dyn_token","","",51,N],[12,"bounds","","",51,N],[3,"TypeTuple","","A tuple type: `(A, B, C, String)`.",N,N],[12,"paren_token","","",52,N],[12,"elems","","",52,N],[3,"TypeVerbatim","","Tokens in type position not interpreted by Syn.",N,N],[12,"tts","","",53,N],[3,"PathTokens","","A helper for printing a self-type qualified path as tokens.",N,N],[12,"0","","",54,N],[12,"1","","",54,N],[3,"AngleBracketedGenericArguments","","Angle bracketed arguments of a path segment: the `<K, V>` in `HashMap<K, V>`.",N,N],[12,"colon2_token","","",55,N],[12,"lt_token","","",55,N],[12,"args","","",55,N],[12,"gt_token","","",55,N],[3,"Binding","","A binding (equality constraint) on an associated type: `Item = u8`.",N,N],[12,"ident","","",56,N],[12,"eq_token","","",56,N],[12,"ty","","",56,N],[3,"ParenthesizedGenericArguments","","Arguments of a function path segment: the `(A, B) -> C` in `Fn(A,B) -> C`.",N,N],[12,"paren_token","","",57,N],[12,"inputs","","`(A, B)`",57,N],[12,"output","","`C`",57,N],[3,"Path","","A path at which a named item is exported: `std::collections::HashMap`.",N,N],[12,"leading_colon","","",58,N],[12,"segments","","",58,N],[3,"PathSegment","","A segment of a path together with any path arguments on that segment.",N,N],[12,"ident","","",59,N],[12,"arguments","","",59,N],[3,"QSelf","","The explicit Self type in a qualified path: the `T` in `<T as Display>::fmt`.",N,N],[12,"lt_token","","",60,N],[12,"ty","","",60,N],[12,"position","","",60,N],[12,"as_token","","",60,N],[12,"gt_token","","",60,N],[4,"AttrStyle","","Distinguishes between attributes that decorate an item and attributes that are contained within an item.",N,N],[13,"Outer","","",61,N],[13,"Inner","","",61,N],[4,"Meta","","Content of a compile-time structured attribute.",N,N],[13,"Word","","",62,N],[13,"List","","A structured list within an attribute, like `derive(Copy, Clone)`.",62,N],[13,"NameValue","","A name-value pair within an attribute, like `feature = \"nightly\"`.",62,N],[4,"NestedMeta","","Element of a compile-time attribute list.",N,N],[13,"Meta","","A structured meta item, like the `Copy` in `#[derive(Copy)]` which would be a nested `Meta::Word`.",63,N],[13,"Literal","","A Rust literal, like the `\"new_name\"` in `#[rename(\"new_name\")]`.",63,N],[4,"Fields","","Data stored within an enum variant or struct.",N,N],[13,"Named","","Named fields of a struct or struct variant such as `Point { x: f64, y: f64 }`.",64,N],[13,"Unnamed","","Unnamed fields of a tuple struct or tuple variant such as `Some(T)`.",64,N],[13,"Unit","","Unit struct or unit variant such as `None`.",64,N],[4,"Visibility","","The visibility level of an item: inherited or `pub` or `pub(restricted)`.",N,N],[13,"Public","","A public visibility level: `pub`.",65,N],[13,"Crate","","A crate-level visibility: `crate`.",65,N],[13,"Restricted","","A visibility level restricted to some path: `pub(self)` or `pub(super)` or `pub(crate)` or `pub(in some::module)`.",65,N],[13,"Inherited","","An inherited visibility, which usually means private.",65,N],[4,"Expr","","A Rust expression.",N,N],[13,"Box","","A box expression: `box f`.",66,N],[13,"InPlace","","A placement expression: `place <- value`.",66,N],[13,"Array","","A slice literal expression: `[a, b, c, d]`.",66,N],[13,"Call","","A function call expression: `invoke(a, b)`.",66,N],[13,"MethodCall","","A method call expression: `x.foo::<T>(a, b)`.",66,N],[13,"Tuple","","A tuple expression: `(a, b, c, d)`.",66,N],[13,"Binary","","A binary operation: `a + b`, `a * b`.",66,N],[13,"Unary","","A unary operation: `!x`, `*x`.",66,N],[13,"Lit","","A literal in place of an expression: `1`, `\"foo\"`.",66,N],[13,"Cast","","A cast expression: `foo as f64`.",66,N],[13,"Type","","A type ascription expression: `foo: f64`.",66,N],[13,"If","","An `if` expression with an optional `else` block: `if expr { ... } else { ... }`.",66,N],[13,"IfLet","","An `if let` expression with an optional `else` block: `if let pat = expr { ... } else { ... }`.",66,N],[13,"While","","A while loop: `while expr { ... }`.",66,N],[13,"WhileLet","","A while-let loop: `while let pat = expr { ... }`.",66,N],[13,"ForLoop","","A for loop: `for pat in expr { ... }`.",66,N],[13,"Loop","","Conditionless loop: `loop { ... }`.",66,N],[13,"Match","","A `match` expression: `match n { Some(n) => {}, None => {} }`.",66,N],[13,"Closure","","A closure expression: `|a, b| a + b`.",66,N],[13,"Unsafe","","An unsafe block: `unsafe { ... }`.",66,N],[13,"Block","","A blocked scope: `{ ... }`.",66,N],[13,"Assign","","An assignment expression: `a = compute()`.",66,N],[13,"AssignOp","","A compound assignment expression: `counter += 1`.",66,N],[13,"Field","","Access of a named struct field (`obj.k`) or unnamed tuple struct field (`obj.0`).",66,N],[13,"Index","","A square bracketed indexing expression: `vector[2]`.",66,N],[13,"Range","","A range expression: `1..2`, `1..`, `..2`, `1..=2`, `..=2`.",66,N],[13,"Path","","A path like `std::mem::replace` possibly containing generic parameters and a qualified self-type.",66,N],[13,"Reference","","A referencing operation: `&a` or `&mut a`.",66,N],[13,"Break","","A `break`, with an optional label to break and an optional expression.",66,N],[13,"Continue","","A `continue`, with an optional label.",66,N],[13,"Return","","A `return`, with an optional value to be returned.",66,N],[13,"Macro","","A macro invocation expression: `format!(\"{}\", q)`.",66,N],[13,"Struct","","A struct literal expression: `Point { x: 1, y: 1 }`.",66,N],[13,"Repeat","","An array literal constructed from one repeated element: `[0u8; N]`.",66,N],[13,"Paren","","A parenthesized expression: `(a + b)`.",66,N],[13,"Group","","An expression contained within invisible delimiters.",66,N],[13,"Try","","A try-expression: `expr?`.",66,N],[13,"Catch","","A catch expression: `do catch { ... }`.",66,N],[13,"Yield","","A yield expression: `yield expr`.",66,N],[13,"Verbatim","","Tokens in expression position not interpreted by Syn.",66,N],[4,"Member","","A struct or tuple struct field accessed in a struct literal or field expression.",N,N],[13,"Named","","A named field like `self.x`.",67,N],[13,"Unnamed","","An unnamed field like `self.0`.",67,N],[4,"GenericParam","","A generic type parameter, lifetime, or const generic: `T: Into<String>`, `'a: 'b`, `const LEN: usize`.",N,N],[13,"Type","","A generic type parameter: `T: Into<String>`.",68,N],[13,"Lifetime","","A lifetime definition: `'a: 'b + 'c + 'd`.",68,N],[13,"Const","","A const generic parameter: `const LENGTH: usize`.",68,N],[4,"TraitBoundModifier","","A modifier on a trait bound, currently only used for the `?` in `?Sized`.",N,N],[13,"None","","",69,N],[13,"Maybe","","",69,N],[4,"TypeParamBound","","A trait or lifetime used as a bound on a type parameter.",N,N],[13,"Trait","","",70,N],[13,"Lifetime","","",70,N],[4,"WherePredicate","","A single predicate in a `where` clause: `T: Deserialize<'de>`.",N,N],[13,"Type","","A type predicate in a `where` clause: `for<'c> Foo<'c>: Trait<'c>`.",71,N],[13,"Lifetime","","A lifetime predicate in a `where` clause: `'a: 'b + 'c`.",71,N],[13,"Eq","","An equality predicate in a `where` clause (unsupported).",71,N],[4,"FloatSuffix","","The suffix on a floating point literal if any, like the `f32` in `1.0f32`.",N,N],[13,"F32","","",72,N],[13,"F64","","",72,N],[13,"None","","",72,N],[4,"IntSuffix","","The suffix on an integer literal if any, like the `u8` in `127u8`.",N,N],[13,"I8","","",73,N],[13,"I16","","",73,N],[13,"I32","","",73,N],[13,"I64","","",73,N],[13,"I128","","",73,N],[13,"Isize","","",73,N],[13,"U8","","",73,N],[13,"U16","","",73,N],[13,"U32","","",73,N],[13,"U64","","",73,N],[13,"U128","","",73,N],[13,"Usize","","",73,N],[13,"None","","",73,N],[4,"Lit","","A Rust literal such as a string or integer or boolean.",N,N],[13,"Str","","A UTF-8 string literal: `\"foo\"`.",74,N],[13,"ByteStr","","A byte string literal: `b\"foo\"`.",74,N],[13,"Byte","","A byte literal: `b'f'`.",74,N],[13,"Char","","A character literal: `'a'`.",74,N],[13,"Int","","An integer literal: `1` or `1u16`.",74,N],[13,"Float","","A floating point literal: `1f64` or `1.0e10f64`.",74,N],[13,"Bool","","A boolean literal: `true` or `false`.",74,N],[13,"Verbatim","","A raw token literal not interpreted by Syn, possibly because it represents an integer larger than 64 bits.",74,N],[4,"StrStyle","","The style of a string literal, either plain quoted or a raw string like `r##\"data\"##`.",N,N],[13,"Cooked","","An ordinary string like `\"data\"`.",75,N],[13,"Raw","","A raw string like `r##\"data\"##`.",75,N],[4,"MacroDelimiter","","A grouping token that surrounds a macro body: `m!(...)` or `m!{...}` or `m![...]`.",N,N],[13,"Paren","","",76,N],[13,"Brace","","",76,N],[13,"Bracket","","",76,N],[4,"Data","","The storage of a struct, enum or union data structure.",N,N],[13,"Struct","","A struct input to a `proc_macro_derive` macro.",77,N],[13,"Enum","","An enum input to a `proc_macro_derive` macro.",77,N],[13,"Union","","A tagged union input to a `proc_macro_derive` macro.",77,N],[4,"BinOp","","A binary operator: `+`, `+=`, `&`.",N,N],[13,"Add","","The `+` operator (addition)",78,N],[13,"Sub","","The `-` operator (subtraction)",78,N],[13,"Mul","","The `*` operator (multiplication)",78,N],[13,"Div","","The `/` operator (division)",78,N],[13,"Rem","","The `%` operator (modulus)",78,N],[13,"And","","The `&&` operator (logical and)",78,N],[13,"Or","","The `||` operator (logical or)",78,N],[13,"BitXor","","The `^` operator (bitwise xor)",78,N],[13,"BitAnd","","The `&` operator (bitwise and)",78,N],[13,"BitOr","","The `|` operator (bitwise or)",78,N],[13,"Shl","","The `<<` operator (shift left)",78,N],[13,"Shr","","The `>>` operator (shift right)",78,N],[13,"Eq","","The `==` operator (equality)",78,N],[13,"Lt","","The `<` operator (less than)",78,N],[13,"Le","","The `<=` operator (less than or equal to)",78,N],[13,"Ne","","The `!=` operator (not equal to)",78,N],[13,"Ge","","The `>=` operator (greater than or equal to)",78,N],[13,"Gt","","The `>` operator (greater than)",78,N],[13,"AddEq","","The `+=` operator",78,N],[13,"SubEq","","The `-=` operator",78,N],[13,"MulEq","","The `*=` operator",78,N],[13,"DivEq","","The `/=` operator",78,N],[13,"RemEq","","The `%=` operator",78,N],[13,"BitXorEq","","The `^=` operator",78,N],[13,"BitAndEq","","The `&=` operator",78,N],[13,"BitOrEq","","The `|=` operator",78,N],[13,"ShlEq","","The `<<=` operator",78,N],[13,"ShrEq","","The `>>=` operator",78,N],[4,"UnOp","","A unary operator: `*`, `!`, `-`.",N,N],[13,"Deref","","The `*` operator for dereferencing",79,N],[13,"Not","","The `!` operator for logical inversion",79,N],[13,"Neg","","The `-` operator for negation",79,N],[4,"BareFnArgName","","Name of an argument in a function type: the `n` in `fn(n: usize)`.",N,N],[13,"Named","","Argument given a name.",80,N],[13,"Wild","","Argument not given a name, matched with `_`.",80,N],[4,"ReturnType","","Return type of a function signature.",N,N],[13,"Default","","Return type is not specified.",81,N],[13,"Type","","A particular type is returned.",81,N],[4,"Type","","The possible types that a Rust value could have.",N,N],[13,"Slice","","A dynamically sized slice type: `[T]`.",82,N],[13,"Array","","A fixed size array type: `[T; n]`.",82,N],[13,"Ptr","","A raw pointer type: `*const T` or `*mut T`.",82,N],[13,"Reference","","A reference type: `&'a T` or `&'a mut T`.",82,N],[13,"BareFn","","A bare function type: `fn(usize) -> bool`.",82,N],[13,"Never","","The never type: `!`.",82,N],[13,"Tuple","","A tuple type: `(A, B, C, String)`.",82,N],[13,"Path","","A path like `std::slice::Iter`, optionally qualified with a self-type as in `<Vec<T> as SomeTrait>::Associated`.",82,N],[13,"TraitObject","","A trait object type `Bound1 + Bound2 + Bound3` where `Bound` is a trait or a lifetime.",82,N],[13,"ImplTrait","","An `impl Bound1 + Bound2 + Bound3` type where `Bound` is a trait or a lifetime.",82,N],[13,"Paren","","A parenthesized type equivalent to the inner type.",82,N],[13,"Group","","A type contained within invisible delimiters.",82,N],[13,"Infer","","Indication that a type should be inferred by the compiler: `_`.",82,N],[13,"Macro","","A macro in the type position.",82,N],[13,"Verbatim","","Tokens in type position not interpreted by Syn.",82,N],[4,"GenericArgument","","An individual generic argument, like `'a`, `T`, or `Item = T`.",N,N],[13,"Lifetime","","A lifetime argument.",83,N],[13,"Type","","A type argument.",83,N],[13,"Binding","","A binding (equality constraint) on an associated type: the `Item = u8` in `Iterator<Item = u8>`.",83,N],[13,"Const","","A const expression. Must be inside of a block.",83,N],[4,"PathArguments","","Angle bracketed or parenthesized arguments of a path segment.",N,N],[13,"None","","",84,N],[13,"AngleBracketed","","The `<'a, T>` in `std::slice::iter<'a, T>`.",84,N],[13,"Parenthesized","","The `(A, B) -> C` in `Fn(A, B) -> C`.",84,N],[5,"parse","","Parse tokens of source code into the chosen syntax tree node.",N,[[["tokenstream"]],["result",["parseerror"]]]],[5,"parse2","","Parse a proc-macro2 token stream into the chosen syntax tree node.",N,[[["tokenstream"]],["result",["parseerror"]]]],[5,"parse_str","","Parse a string of Rust code into the chosen syntax tree node.",N,[[["str"]],["result",["parseerror"]]]],[0,"token","","Tokens representing Rust punctuation, keywords, and delimiters.",N,N],[3,"Underscore","syn::token","`_`",N,N],[12,"0","","",85,N],[3,"Add","","`+`",N,N],[12,"0","","",86,N],[3,"AddEq","","`+=`",N,N],[12,"0","","",87,N],[3,"And","","`&`",N,N],[12,"0","","",88,N],[3,"AndAnd","","`&&`",N,N],[12,"0","","",89,N],[3,"AndEq","","`&=`",N,N],[12,"0","","",90,N],[3,"At","","`@`",N,N],[12,"0","","",91,N],[3,"Bang","","`!`",N,N],[12,"0","","",92,N],[3,"Caret","","`^`",N,N],[12,"0","","",93,N],[3,"CaretEq","","`^=`",N,N],[12,"0","","",94,N],[3,"Colon","","`:`",N,N],[12,"0","","",95,N],[3,"Colon2","","`::`",N,N],[12,"0","","",96,N],[3,"Comma","","`,`",N,N],[12,"0","","",97,N],[3,"Div","","`/`",N,N],[12,"0","","",98,N],[3,"DivEq","","`/=`",N,N],[12,"0","","",99,N],[3,"Dollar","","`$`",N,N],[12,"0","","",100,N],[3,"Dot","","`.`",N,N],[12,"0","","",101,N],[3,"Dot2","","`..`",N,N],[12,"0","","",102,N],[3,"Dot3","","`...`",N,N],[12,"0","","",103,N],[3,"DotDotEq","","`..=`",N,N],[12,"0","","",104,N],[3,"Eq","","`=`",N,N],[12,"0","","",105,N],[3,"EqEq","","`==`",N,N],[12,"0","","",106,N],[3,"Ge","","`>=`",N,N],[12,"0","","",107,N],[3,"Gt","","`>`",N,N],[12,"0","","",108,N],[3,"Le","","`<=`",N,N],[12,"0","","",109,N],[3,"Lt","","`<`",N,N],[12,"0","","",110,N],[3,"MulEq","","`*=`",N,N],[12,"0","","",111,N],[3,"Ne","","`!=`",N,N],[12,"0","","",112,N],[3,"Or","","`|`",N,N],[12,"0","","",113,N],[3,"OrEq","","`|=`",N,N],[12,"0","","",114,N],[3,"OrOr","","`||`",N,N],[12,"0","","",115,N],[3,"Pound","","`#`",N,N],[12,"0","","",116,N],[3,"Question","","`?`",N,N],[12,"0","","",117,N],[3,"RArrow","","`->`",N,N],[12,"0","","",118,N],[3,"LArrow","","`<-`",N,N],[12,"0","","",119,N],[3,"Rem","","`%`",N,N],[12,"0","","",120,N],[3,"RemEq","","`%=`",N,N],[12,"0","","",121,N],[3,"FatArrow","","`=>`",N,N],[12,"0","","",122,N],[3,"Semi","","`;`",N,N],[12,"0","","",123,N],[3,"Shl","","`<<`",N,N],[12,"0","","",124,N],[3,"ShlEq","","`<<=`",N,N],[12,"0","","",125,N],[3,"Shr","","`>>`",N,N],[12,"0","","",126,N],[3,"ShrEq","","`>>=`",N,N],[12,"0","","",127,N],[3,"Star","","`*`",N,N],[12,"0","","",128,N],[3,"Sub","","`-`",N,N],[12,"0","","",129,N],[3,"SubEq","","`-=`",N,N],[12,"0","","",130,N],[3,"Brace","","`{...}`",N,N],[12,"0","","",131,N],[3,"Bracket","","`[...]`",N,N],[12,"0","","",132,N],[3,"Paren","","`(...)`",N,N],[12,"0","","",133,N],[3,"Group","","None-delimited group",N,N],[12,"0","","",134,N],[3,"As","","`as`",N,N],[12,"0","","",135,N],[3,"Auto","","`auto`",N,N],[12,"0","","",136,N],[3,"Box","","`box`",N,N],[12,"0","","",137,N],[3,"Break","","`break`",N,N],[12,"0","","",138,N],[3,"CapSelf","","`Self`",N,N],[12,"0","","",139,N],[3,"Catch","","`catch`",N,N],[12,"0","","",140,N],[3,"Const","","`const`",N,N],[12,"0","","",141,N],[3,"Continue","","`continue`",N,N],[12,"0","","",142,N],[3,"Crate","","`crate`",N,N],[12,"0","","",143,N],[3,"Default","","`default`",N,N],[12,"0","","",144,N],[3,"Do","","`do`",N,N],[12,"0","","",145,N],[3,"Dyn","","`dyn`",N,N],[12,"0","","",146,N],[3,"Else","","`else`",N,N],[12,"0","","",147,N],[3,"Enum","","`enum`",N,N],[12,"0","","",148,N],[3,"Extern","","`extern`",N,N],[12,"0","","",149,N],[3,"Fn","","`fn`",N,N],[12,"0","","",150,N],[3,"For","","`for`",N,N],[12,"0","","",151,N],[3,"If","","`if`",N,N],[12,"0","","",152,N],[3,"Impl","","`impl`",N,N],[12,"0","","",153,N],[3,"In","","`in`",N,N],[12,"0","","",154,N],[3,"Let","","`let`",N,N],[12,"0","","",155,N],[3,"Loop","","`loop`",N,N],[12,"0","","",156,N],[3,"Macro","","`macro`",N,N],[12,"0","","",157,N],[3,"Match","","`match`",N,N],[12,"0","","",158,N],[3,"Mod","","`mod`",N,N],[12,"0","","",159,N],[3,"Move","","`move`",N,N],[12,"0","","",160,N],[3,"Mut","","`mut`",N,N],[12,"0","","",161,N],[3,"Pub","","`pub`",N,N],[12,"0","","",162,N],[3,"Ref","","`ref`",N,N],[12,"0","","",163,N],[3,"Return","","`return`",N,N],[12,"0","","",164,N],[3,"Self_","","`self`",N,N],[12,"0","","",165,N],[3,"Static","","`static`",N,N],[12,"0","","",166,N],[3,"Struct","","`struct`",N,N],[12,"0","","",167,N],[3,"Super","","`super`",N,N],[12,"0","","",168,N],[3,"Trait","","`trait`",N,N],[12,"0","","",169,N],[3,"Type","","`type`",N,N],[12,"0","","",170,N],[3,"Union","","`union`",N,N],[12,"0","","",171,N],[3,"Unsafe","","`unsafe`",N,N],[12,"0","","",172,N],[3,"Use","","`use`",N,N],[12,"0","","",173,N],[3,"Where","","`where`",N,N],[12,"0","","",174,N],[3,"While","","`while`",N,N],[12,"0","","",175,N],[3,"Yield","","`yield`",N,N],[12,"0","","",176,N],[11,"new","","",85,[[["span"]],["self"]]],[11,"new","","",86,[[["span"]],["self"]]],[11,"new","","",87,[[["span"]],["self"]]],[11,"new","","",88,[[["span"]],["self"]]],[11,"new","","",89,[[["span"]],["self"]]],[11,"new","","",90,[[["span"]],["self"]]],[11,"new","","",91,[[["span"]],["self"]]],[11,"new","","",92,[[["span"]],["self"]]],[11,"new","","",93,[[["span"]],["self"]]],[11,"new","","",94,[[["span"]],["self"]]],[11,"new","","",95,[[["span"]],["self"]]],[11,"new","","",96,[[["span"]],["self"]]],[11,"new","","",97,[[["span"]],["self"]]],[11,"new","","",98,[[["span"]],["self"]]],[11,"new","","",99,[[["span"]],["self"]]],[11,"new","","",100,[[["span"]],["self"]]],[11,"new","","",101,[[["span"]],["self"]]],[11,"new","","",102,[[["span"]],["self"]]],[11,"new","","",103,[[["span"]],["self"]]],[11,"new","","",104,[[["span"]],["self"]]],[11,"new","","",105,[[["span"]],["self"]]],[11,"new","","",106,[[["span"]],["self"]]],[11,"new","","",107,[[["span"]],["self"]]],[11,"new","","",108,[[["span"]],["self"]]],[11,"new","","",109,[[["span"]],["self"]]],[11,"new","","",110,[[["span"]],["self"]]],[11,"new","","",111,[[["span"]],["self"]]],[11,"new","","",112,[[["span"]],["self"]]],[11,"new","","",113,[[["span"]],["self"]]],[11,"new","","",114,[[["span"]],["self"]]],[11,"new","","",115,[[["span"]],["self"]]],[11,"new","","",116,[[["span"]],["self"]]],[11,"new","","",117,[[["span"]],["self"]]],[11,"new","","",118,[[["span"]],["self"]]],[11,"new","","",119,[[["span"]],["self"]]],[11,"new","","",120,[[["span"]],["self"]]],[11,"new","","",121,[[["span"]],["self"]]],[11,"new","","",122,[[["span"]],["self"]]],[11,"new","","",123,[[["span"]],["self"]]],[11,"new","","",124,[[["span"]],["self"]]],[11,"new","","",125,[[["span"]],["self"]]],[11,"new","","",126,[[["span"]],["self"]]],[11,"new","","",127,[[["span"]],["self"]]],[11,"new","","",128,[[["span"]],["self"]]],[11,"new","","",129,[[["span"]],["self"]]],[11,"new","","",130,[[["span"]],["self"]]],[11,"surround","","",131,[[["self"],["tokens"],["f"]]]],[11,"parse","","",131,[[["cursor"],["f"]],["presult"]]],[11,"surround","","",132,[[["self"],["tokens"],["f"]]]],[11,"parse","","",132,[[["cursor"],["f"]],["presult"]]],[11,"surround","","",133,[[["self"],["tokens"],["f"]]]],[11,"parse","","",133,[[["cursor"],["f"]],["presult"]]],[11,"surround","","",134,[[["self"],["tokens"],["f"]]]],[11,"parse","","",134,[[["cursor"],["f"]],["presult"]]],[11,"parse_inner","syn","",0,[[["cursor"]],["presult"]]],[11,"parse_outer","","",0,[[["cursor"]],["presult"]]],[11,"interpret_meta","","Parses the tokens after the path as a `Meta` if possible.",0,[[["self"]],["option",["meta"]]]],[11,"name","","Returns the identifier that begins this structured meta item.",62,[[["self"]],["ident"]]],[11,"parse_named","","",3,[[["cursor"]],["presult"]]],[11,"parse_unnamed","","",3,[[["cursor"]],["presult"]]],[11,"iter","","Get an iterator over the [`Field`] items in this object. This iterator can be used to iterate over a named or unnamed struct or variant's fields uniformly.",64,[[["self"]],["iter",["field"]]]],[11,"type_params","","Returns an Iterator<Item = &TypeParam> over the type parameters in `self.params`.",22,[[["self"]],["typeparams"]]],[11,"type_params_mut","","Returns an Iterator<Item = &mut TypeParam> over the type parameters in `self.params`.",22,[[["self"]],["typeparamsmut"]]],[11,"lifetimes","","Returns an Iterator<Item = &LifetimeDef> over the lifetime parameters in `self.params`.",22,[[["self"]],["lifetimes"]]],[11,"lifetimes_mut","","Returns an Iterator<Item = &mut LifetimeDef> over the lifetime parameters in `self.params`.",22,[[["self"]],["lifetimesmut"]]],[11,"const_params","","Returns an Iterator<Item = &ConstParam> over the constant parameters in `self.params`.",22,[[["self"]],["constparams"]]],[11,"const_params_mut","","Returns an Iterator<Item = &mut ConstParam> over the constant parameters in `self.params`.",22,[[["self"]],["constparamsmut"]]],[11,"make_where_clause","","Initializes an empty `where`-clause if there is not one present already.",22,[[["self"]],["whereclause"]]],[11,"split_for_impl","","Split a type's generics into the pieces required for impl'ing a trait for that type.",22,N],[11,"as_turbofish","","Turn a type's generics like `<X, Y>` into a turbofish like `::<X, Y>`.",177,[[["self"]],["turbofish"]]],[11,"new","","",23,[[["lifetime"]],["self"]]],[11,"parse_any","","Parses any identifier",178,[[["cursor"]],["presult"]]],[11,"new","","Creates an ident with the given string representation.",178,[[["str"],["span"]],["self"]]],[11,"span","","",178,[[["self"]],["span"]]],[11,"set_span","","",178,[[["self"],["span"]]]],[11,"new","","",179,[[["str"],["span"]],["self"]]],[11,"span","","",179,[[["self"]],["span"]]],[11,"set_span","","",179,[[["self"],["span"]]]],[11,"new","","Interpret a Syn literal from a proc-macro2 literal.",74,[[["literal"]],["self"]]],[11,"new","","",180,[[["str"],["span"]],["self"]]],[11,"value","","",180,[[["self"]],["string"]]],[11,"parse","","Parse a syntax tree node from the content of this string literal.",180,[[["self"]],["result",["parseerror"]]]],[11,"span","","",180,[[["self"]],["span"]]],[11,"set_span","","",180,[[["self"],["span"]]]],[11,"new","","",181,N],[11,"value","","",181,[[["self"]],["vec",["u8"]]]],[11,"span","","",181,[[["self"]],["span"]]],[11,"set_span","","",181,[[["self"],["span"]]]],[11,"new","","",182,[[["u8"],["span"]],["self"]]],[11,"value","","",182,[[["self"]],["u8"]]],[11,"span","","",182,[[["self"]],["span"]]],[11,"set_span","","",182,[[["self"],["span"]]]],[11,"new","","",183,[[["char"],["span"]],["self"]]],[11,"value","","",183,[[["self"]],["char"]]],[11,"span","","",183,[[["self"]],["span"]]],[11,"set_span","","",183,[[["self"],["span"]]]],[11,"new","","",184,[[["u64"],["intsuffix"],["span"]],["self"]]],[11,"value","","",184,[[["self"]],["u64"]]],[11,"suffix","","",184,[[["self"]],["intsuffix"]]],[11,"span","","",184,[[["self"]],["span"]]],[11,"set_span","","",184,[[["self"],["span"]]]],[11,"new","","",185,[[["f64"],["floatsuffix"],["span"]],["self"]]],[11,"value","","",185,[[["self"]],["f64"]]],[11,"suffix","","",185,[[["self"]],["floatsuffix"]]],[11,"span","","",185,[[["self"]],["span"]]],[11,"set_span","","",185,[[["self"],["span"]]]],[11,"span","","",31,[[["self"]],["span"]]],[11,"set_span","","",31,[[["self"],["span"]]]],[11,"parse_binop","","",78,[[["cursor"]],["presult"]]],[11,"without_plus","","",82,[[["cursor"]],["presult"]]],[11,"without_plus","","",81,[[["cursor"]],["presult"]]],[11,"without_plus","","",51,[[["cursor"]],["presult"]]],[11,"parse_mod_style","","",58,[[["cursor"]],["presult"]]],[11,"global","","",58,[[["self"]],["bool"]]],[11,"is_empty","","",84,[[["self"]],["bool"]]],[0,"buffer","","A stably addressed token buffer supporting efficient traversal based on a cheaply copyable cursor.",N,N],[3,"TokenBuffer","syn::buffer","A buffer that can be efficiently traversed multiple times, unlike `TokenStream` which requires a deep copy in order to traverse more than once.",N,N],[3,"Cursor","","A cheaply copyable cursor into a `TokenBuffer`.",N,N],[11,"new","","Creates a `TokenBuffer` containing all the tokens from the input `TokenStream`.",186,[[["tokenstream"]],["tokenbuffer"]]],[11,"new2","","Creates a `TokenBuffer` containing all the tokens from the input `TokenStream`.",186,[[["tokenstream"]],["tokenbuffer"]]],[11,"begin","","Creates a cursor referencing the first token in the buffer and able to traverse until the end of the buffer.",186,[[["self"]],["cursor"]]],[11,"empty","","Creates a cursor referencing a static empty TokenStream.",187,[[],["self"]]],[11,"eof","","Checks whether the cursor is currently pointing at the end of its valid scope.",187,[[["self"]],["bool"]]],[11,"group","","If the cursor is pointing at a `Group` with the given delimiter, returns a cursor into that group and one pointing to the next `TokenTree`.",187,[[["self"],["delimiter"]],["option"]]],[11,"term","","If the cursor is pointing at a `Term`, returns it along with a cursor pointing at the next `TokenTree`.",187,[[["self"]],["option"]]],[11,"op","","If the cursor is pointing at an `Op`, returns it along with a cursor pointing at the next `TokenTree`.",187,[[["self"]],["option"]]],[11,"literal","","If the cursor is pointing at a `Literal`, return it along with a cursor pointing at the next `TokenTree`.",187,[[["self"]],["option"]]],[11,"token_stream","","Copies all remaining tokens visible from this cursor into a `TokenStream`.",187,[[["self"]],["tokenstream"]]],[11,"token_tree","","If the cursor is pointing at a `TokenTree`, returns it along with a cursor pointing at the next `TokenTree`.",187,[[["self"]],["option"]]],[11,"span","","Returns the `Span` of the current token, or `Span::call_site()` if this cursor points to eof.",187,[[["self"]],["span"]]],[0,"punctuated","syn","A punctuated sequence of syntax tree nodes separated by punctuation.",N,N],[3,"Punctuated","syn::punctuated","A punctuated sequence of syntax tree nodes of type `T` separated by punctuation of type `P`.",N,N],[3,"Pairs","","An iterator over borrowed pairs of type `Pair<&T, &P>`.",N,N],[3,"PairsMut","","An iterator over mutably borrowed pairs of type `Pair<&mut T, &mut P>`.",N,N],[3,"IntoPairs","","An iterator over owned pairs of type `Pair<T, P>`.",N,N],[3,"IntoIter","","An iterator over owned values of type `T`.",N,N],[3,"Iter","","An iterator over borrowed values of type `&T`.",N,N],[3,"IterMut","","An iterator over mutably borrowed values of type `&mut T`.",N,N],[4,"Pair","","A single syntax tree node of type `T` followed by its trailing punctuation of type `P` if any.",N,N],[13,"Punctuated","","",188,N],[13,"End","","",188,N],[11,"new","","Creates an empty punctuated sequence.",189,[[],["punctuated"]]],[11,"is_empty","","Determines whether this punctuated sequence is empty, meaning it contains no syntax tree nodes or punctuation.",189,[[["self"]],["bool"]]],[11,"len","","Returns the number of syntax tree nodes in this punctuated sequence.",189,[[["self"]],["usize"]]],[11,"first","","Borrows the first punctuated pair in this sequence.",189,[[["self"]],["option",["pair"]]]],[11,"last","","Borrows the last punctuated pair in this sequence.",189,[[["self"]],["option",["pair"]]]],[11,"last_mut","","Mutably borrows the last punctuated pair in this sequence.",189,[[["self"]],["option",["pair"]]]],[11,"iter","","Returns an iterator over borrowed syntax tree nodes of type `&T`.",189,[[["self"]],["iter"]]],[11,"iter_mut","","Returns an iterator over mutably borrowed syntax tree nodes of type `&mut T`.",189,[[["self"]],["itermut"]]],[11,"pairs","","Returns an iterator over the contents of this sequence as borrowed punctuated pairs.",189,[[["self"]],["pairs"]]],[11,"pairs_mut","","Returns an iterator over the contents of this sequence as mutably borrowed punctuated pairs.",189,[[["self"]],["pairsmut"]]],[11,"into_pairs","","Returns an iterator over the contents of this sequence as owned punctuated pairs.",189,[[["self"]],["intopairs"]]],[11,"push_value","","Appends a syntax tree node onto the end of this punctuated sequence. The sequence must previously have a trailing punctuation.",189,[[["self"],["t"]]]],[11,"push_punct","","Appends a trailing punctuation onto the end of this punctuated sequence. The sequence must be non-empty and must not already have trailing punctuation.",189,[[["self"],["p"]]]],[11,"pop","","Removes the last punctuated pair from this sequence, or `None` if the sequence is empty.",189,[[["self"]],["option",["pair"]]]],[11,"trailing_punct","","Determines whether this punctuated sequence ends with a trailing punctuation.",189,[[["self"]],["bool"]]],[11,"empty_or_trailing","","Returns true if either this `Punctuated` is empty, or it has a trailing punctuation.",189,[[["self"]],["bool"]]],[11,"push","","Appends a syntax tree node onto the end of this punctuated sequence.",189,[[["self"],["t"]]]],[11,"insert","","Inserts an element at position `index`.",189,[[["self"],["usize"],["t"]]]],[11,"into_value","","Extracts the syntax tree node from this punctuated pair, discarding the following punctuation.",188,[[["self"]],["t"]]],[11,"value","","Borrows the syntax tree node from this punctuated pair.",188,[[["self"]],["t"]]],[11,"value_mut","","Mutably borrows the syntax tree node from this punctuated pair.",188,[[["self"]],["t"]]],[11,"punct","","Borrows the punctuation from this punctuated pair, unless this pair is the final one and there is no trailing punctuation.",188,[[["self"]],["option"]]],[11,"new","","Creates a punctuated pair out of a syntax tree node and an optional following punctuation.",188,[[["t"],["option"]],["self"]]],[11,"into_tuple","","Produces this punctuated pair as a tuple of syntax tree node and optional following punctuation.",188,N],[11,"parse_separated","","Parse zero or more syntax tree nodes with punctuation in between and no trailing punctuation.",189,[[["cursor"]],["presult"]]],[11,"parse_separated_nonempty","","Parse one or more syntax tree nodes with punctuation in bewteen and no trailing punctuation. allowing trailing punctuation.",189,[[["cursor"]],["presult"]]],[11,"parse_terminated","","Parse zero or more syntax tree nodes with punctuation in between and optional trailing punctuation.",189,[[["cursor"]],["presult"]]],[11,"parse_terminated_nonempty","","Parse one or more syntax tree nodes with punctuation in between and optional trailing punctuation.",189,[[["cursor"]],["presult"]]],[11,"parse_separated_with","","Parse zero or more syntax tree nodes using the given parser with punctuation in between and no trailing punctuation.",189,N],[11,"parse_separated_nonempty_with","","Parse one or more syntax tree nodes using the given parser with punctuation in between and no trailing punctuation.",189,N],[11,"parse_terminated_with","","Parse zero or more syntax tree nodes using the given parser with punctuation in between and optional trailing punctuation.",189,N],[11,"parse_terminated_nonempty_with","","Parse one or more syntax tree nodes using the given parser with punctuation in between and optional trailing punctuation.",189,N],[0,"synom","syn","Parsing interface for parsing a token stream into a syntax tree node.",N,N],[3,"ParseError","syn::synom","Error returned when a `Synom` parser cannot parse the input tokens.",N,N],[6,"PResult","","The result of a `Synom` parser.",N,N],[8,"Synom","","Parsing interface implemented by all types that can be parsed in a default way from a token stream.",N,N],[10,"parse","","",190,[[["cursor"]],["presult"]]],[11,"description","","A short name of the type being parsed.",190,[[],["option",["str"]]]],[8,"Parser","","Parser that can parse Rust tokens into a particular syntax tree node.",N,N],[16,"Output","","",191,N],[10,"parse2","","Parse a proc-macro2 token stream into the chosen syntax tree node.",191,[[["self"],["tokenstream"]],["result",["parseerror"]]]],[11,"parse","","Parse tokens of source code into the chosen syntax tree node.",191,[[["self"],["tokenstream"]],["result",["parseerror"]]]],[11,"parse_str","","Parse a string of Rust code into the chosen syntax tree node.",191,[[["self"],["str"]],["result",["parseerror"]]]],[0,"spanned","syn","A trait that can provide the `Span` of the complete contents of a syntax tree node.",N,N],[8,"Spanned","syn::spanned","A trait that can provide the `Span` of the complete contents of a syntax tree node.",N,N],[10,"span","","Returns a `Span` covering the complete contents of this syntax tree node, or [`Span::call_site()`] if this node is empty.",192,[[["self"]],["span"]]],[14,"named","syn","Define a parser function with the signature expected by syn parser combinators.",N,N],[14,"call","","Invoke the given parser function with zero or more arguments.",N,N],[14,"map","","Transform the result of a parser by applying a function or closure.",N,N],[14,"not","","Invert the result of a parser by parsing successfully if the given parser fails to parse and vice versa.",N,N],[14,"cond","","Execute a parser only if a condition is met, otherwise return None.",N,N],[14,"cond_reduce","","Execute a parser only if a condition is met, otherwise fail to parse.",N,N],[14,"many0","","Parse zero or more values using the given parser.",N,N],[14,"switch","","Pattern-match the result of a parser to select which other parser to run.",N,N],[14,"value","","Produce the given value without parsing anything.",N,N],[14,"reject","","Unconditionally fail to parse anything.",N,N],[14,"tuple","","Run a series of parsers and produce all of the results in a tuple.",N,N],[14,"alt","","Run a series of parsers, returning the result of the first one which succeeds.",N,N],[14,"do_parse","","Run a series of parsers, optionally naming each intermediate result, followed by a step to combine the intermediate results.",N,N],[14,"input_end","","Parse nothing and succeed only if the end of the enclosing block has been reached.",N,N],[14,"option","","Turn a failed parse into `None` and a successful parse into `Some`.",N,N],[14,"epsilon","","Parses nothing and always succeeds.",N,N],[14,"syn","","Parse any type that implements the `Synom` trait.",N,N],[14,"custom_keyword","","Parse the given word as a keyword.",N,N],[14,"parens","","Parse inside of `(` `)` parentheses.",N,N],[14,"brackets","","Parse inside of `[` `]` square brackets.",N,N],[14,"braces","","Parse inside of `{` `}` curly braces.",N,N],[14,"Token","","A type-macro that expands to the name of the Rust type representation of a given token.",N,N],[14,"punct","","Parse a single Rust punctuation token.",N,N],[14,"keyword","","Parse a single Rust keyword token.",N,N],[14,"parse_quote","","Quasi-quotation macro that accepts input like the [`quote!`] macro but uses type inference to figure out a return type for those tokens.",N,N],[11,"span","","",0,[[["self"]],["span"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"span","","",1,[[["self"]],["span"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"span","","",2,[[["self"]],["span"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"span","","",3,[[["self"]],["span"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"span","","",4,[[["self"]],["span"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"span","","",5,[[["self"]],["span"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"span","","",6,[[["self"]],["span"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"span","","",7,[[["self"]],["span"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"span","","",8,[[["self"]],["span"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"span","","",9,[[["self"]],["span"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"into","","",193,[[["self"]],["u"]]],[11,"to_owned","","",193,[[["self"]],["t"]]],[11,"clone_into","","",193,N],[11,"from","","",193,[[["t"]],["t"]]],[11,"try_from","","",193,[[["u"]],["result"]]],[11,"borrow","","",193,[[["self"]],["t"]]],[11,"get_type_id","","",193,[[["self"]],["typeid"]]],[11,"try_into","","",193,[[["self"]],["result"]]],[11,"borrow_mut","","",193,[[["self"]],["t"]]],[11,"into","","",194,[[["self"]],["u"]]],[11,"to_owned","","",194,[[["self"]],["t"]]],[11,"clone_into","","",194,N],[11,"from","","",194,[[["t"]],["t"]]],[11,"try_from","","",194,[[["u"]],["result"]]],[11,"borrow","","",194,[[["self"]],["t"]]],[11,"get_type_id","","",194,[[["self"]],["typeid"]]],[11,"try_into","","",194,[[["self"]],["result"]]],[11,"borrow_mut","","",194,[[["self"]],["t"]]],[11,"into","","",195,[[["self"]],["u"]]],[11,"to_owned","","",195,[[["self"]],["t"]]],[11,"clone_into","","",195,N],[11,"from","","",195,[[["t"]],["t"]]],[11,"try_from","","",195,[[["u"]],["result"]]],[11,"borrow","","",195,[[["self"]],["t"]]],[11,"get_type_id","","",195,[[["self"]],["typeid"]]],[11,"try_into","","",195,[[["self"]],["result"]]],[11,"borrow_mut","","",195,[[["self"]],["t"]]],[11,"span","","",10,[[["self"]],["span"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"into","","",196,[[["self"]],["u"]]],[11,"to_owned","","",196,[[["self"]],["t"]]],[11,"clone_into","","",196,N],[11,"from","","",196,[[["t"]],["t"]]],[11,"try_from","","",196,[[["u"]],["result"]]],[11,"borrow","","",196,[[["self"]],["t"]]],[11,"get_type_id","","",196,[[["self"]],["typeid"]]],[11,"try_into","","",196,[[["self"]],["result"]]],[11,"borrow_mut","","",196,[[["self"]],["t"]]],[11,"into","","",197,[[["self"]],["u"]]],[11,"to_owned","","",197,[[["self"]],["t"]]],[11,"clone_into","","",197,N],[11,"from","","",197,[[["t"]],["t"]]],[11,"try_from","","",197,[[["u"]],["result"]]],[11,"borrow","","",197,[[["self"]],["t"]]],[11,"get_type_id","","",197,[[["self"]],["typeid"]]],[11,"try_into","","",197,[[["self"]],["result"]]],[11,"borrow_mut","","",197,[[["self"]],["t"]]],[11,"into","","",198,[[["self"]],["u"]]],[11,"to_owned","","",198,[[["self"]],["t"]]],[11,"clone_into","","",198,N],[11,"from","","",198,[[["t"]],["t"]]],[11,"try_from","","",198,[[["u"]],["result"]]],[11,"borrow","","",198,[[["self"]],["t"]]],[11,"get_type_id","","",198,[[["self"]],["typeid"]]],[11,"try_into","","",198,[[["self"]],["result"]]],[11,"borrow_mut","","",198,[[["self"]],["t"]]],[11,"span","","",11,[[["self"]],["span"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"span","","",12,[[["self"]],["span"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"into","","",199,[[["self"]],["u"]]],[11,"to_owned","","",199,[[["self"]],["t"]]],[11,"clone_into","","",199,N],[11,"from","","",199,[[["t"]],["t"]]],[11,"try_from","","",199,[[["u"]],["result"]]],[11,"borrow","","",199,[[["self"]],["t"]]],[11,"get_type_id","","",199,[[["self"]],["typeid"]]],[11,"try_into","","",199,[[["self"]],["result"]]],[11,"borrow_mut","","",199,[[["self"]],["t"]]],[11,"into","","",200,[[["self"]],["u"]]],[11,"to_owned","","",200,[[["self"]],["t"]]],[11,"clone_into","","",200,N],[11,"from","","",200,[[["t"]],["t"]]],[11,"try_from","","",200,[[["u"]],["result"]]],[11,"borrow","","",200,[[["self"]],["t"]]],[11,"get_type_id","","",200,[[["self"]],["typeid"]]],[11,"try_into","","",200,[[["self"]],["result"]]],[11,"borrow_mut","","",200,[[["self"]],["t"]]],[11,"into","","",201,[[["self"]],["u"]]],[11,"to_owned","","",201,[[["self"]],["t"]]],[11,"clone_into","","",201,N],[11,"from","","",201,[[["t"]],["t"]]],[11,"try_from","","",201,[[["u"]],["result"]]],[11,"borrow","","",201,[[["self"]],["t"]]],[11,"get_type_id","","",201,[[["self"]],["typeid"]]],[11,"try_into","","",201,[[["self"]],["result"]]],[11,"borrow_mut","","",201,[[["self"]],["t"]]],[11,"into","","",202,[[["self"]],["u"]]],[11,"to_owned","","",202,[[["self"]],["t"]]],[11,"clone_into","","",202,N],[11,"from","","",202,[[["t"]],["t"]]],[11,"try_from","","",202,[[["u"]],["result"]]],[11,"borrow","","",202,[[["self"]],["t"]]],[11,"get_type_id","","",202,[[["self"]],["typeid"]]],[11,"try_into","","",202,[[["self"]],["result"]]],[11,"borrow_mut","","",202,[[["self"]],["t"]]],[11,"into","","",203,[[["self"]],["u"]]],[11,"to_owned","","",203,[[["self"]],["t"]]],[11,"clone_into","","",203,N],[11,"from","","",203,[[["t"]],["t"]]],[11,"try_from","","",203,[[["u"]],["result"]]],[11,"borrow","","",203,[[["self"]],["t"]]],[11,"get_type_id","","",203,[[["self"]],["typeid"]]],[11,"try_into","","",203,[[["self"]],["result"]]],[11,"borrow_mut","","",203,[[["self"]],["t"]]],[11,"into","","",204,[[["self"]],["u"]]],[11,"to_owned","","",204,[[["self"]],["t"]]],[11,"clone_into","","",204,N],[11,"from","","",204,[[["t"]],["t"]]],[11,"try_from","","",204,[[["u"]],["result"]]],[11,"borrow","","",204,[[["self"]],["t"]]],[11,"get_type_id","","",204,[[["self"]],["typeid"]]],[11,"try_into","","",204,[[["self"]],["result"]]],[11,"borrow_mut","","",204,[[["self"]],["t"]]],[11,"into","","",205,[[["self"]],["u"]]],[11,"to_owned","","",205,[[["self"]],["t"]]],[11,"clone_into","","",205,N],[11,"from","","",205,[[["t"]],["t"]]],[11,"try_from","","",205,[[["u"]],["result"]]],[11,"borrow","","",205,[[["self"]],["t"]]],[11,"get_type_id","","",205,[[["self"]],["typeid"]]],[11,"try_into","","",205,[[["self"]],["result"]]],[11,"borrow_mut","","",205,[[["self"]],["t"]]],[11,"into","","",206,[[["self"]],["u"]]],[11,"to_owned","","",206,[[["self"]],["t"]]],[11,"clone_into","","",206,N],[11,"from","","",206,[[["t"]],["t"]]],[11,"try_from","","",206,[[["u"]],["result"]]],[11,"borrow","","",206,[[["self"]],["t"]]],[11,"get_type_id","","",206,[[["self"]],["typeid"]]],[11,"try_into","","",206,[[["self"]],["result"]]],[11,"borrow_mut","","",206,[[["self"]],["t"]]],[11,"into","","",207,[[["self"]],["u"]]],[11,"to_owned","","",207,[[["self"]],["t"]]],[11,"clone_into","","",207,N],[11,"from","","",207,[[["t"]],["t"]]],[11,"try_from","","",207,[[["u"]],["result"]]],[11,"borrow","","",207,[[["self"]],["t"]]],[11,"get_type_id","","",207,[[["self"]],["typeid"]]],[11,"try_into","","",207,[[["self"]],["result"]]],[11,"borrow_mut","","",207,[[["self"]],["t"]]],[11,"span","","",13,[[["self"]],["span"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"span","","",14,[[["self"]],["span"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,N],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"into","","",208,[[["self"]],["u"]]],[11,"to_owned","","",208,[[["self"]],["t"]]],[11,"clone_into","","",208,N],[11,"from","","",208,[[["t"]],["t"]]],[11,"try_from","","",208,[[["u"]],["result"]]],[11,"borrow","","",208,[[["self"]],["t"]]],[11,"get_type_id","","",208,[[["self"]],["typeid"]]],[11,"try_into","","",208,[[["self"]],["result"]]],[11,"borrow_mut","","",208,[[["self"]],["t"]]],[11,"into","","",209,[[["self"]],["u"]]],[11,"to_owned","","",209,[[["self"]],["t"]]],[11,"clone_into","","",209,N],[11,"from","","",209,[[["t"]],["t"]]],[11,"try_from","","",209,[[["u"]],["result"]]],[11,"borrow","","",209,[[["self"]],["t"]]],[11,"get_type_id","","",209,[[["self"]],["typeid"]]],[11,"try_into","","",209,[[["self"]],["result"]]],[11,"borrow_mut","","",209,[[["self"]],["t"]]],[11,"into","","",210,[[["self"]],["u"]]],[11,"to_owned","","",210,[[["self"]],["t"]]],[11,"clone_into","","",210,N],[11,"from","","",210,[[["t"]],["t"]]],[11,"try_from","","",210,[[["u"]],["result"]]],[11,"borrow","","",210,[[["self"]],["t"]]],[11,"get_type_id","","",210,[[["self"]],["typeid"]]],[11,"try_into","","",210,[[["self"]],["result"]]],[11,"borrow_mut","","",210,[[["self"]],["t"]]],[11,"into","","",211,[[["self"]],["u"]]],[11,"to_owned","","",211,[[["self"]],["t"]]],[11,"clone_into","","",211,N],[11,"from","","",211,[[["t"]],["t"]]],[11,"try_from","","",211,[[["u"]],["result"]]],[11,"borrow","","",211,[[["self"]],["t"]]],[11,"get_type_id","","",211,[[["self"]],["typeid"]]],[11,"try_into","","",211,[[["self"]],["result"]]],[11,"borrow_mut","","",211,[[["self"]],["t"]]],[11,"span","","",15,[[["self"]],["span"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,N],[11,"from","","",15,[[["t"]],["t"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"span","","",16,[[["self"]],["span"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"from","","",16,[[["t"]],["t"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"into","","",212,[[["self"]],["u"]]],[11,"to_owned","","",212,[[["self"]],["t"]]],[11,"clone_into","","",212,N],[11,"from","","",212,[[["t"]],["t"]]],[11,"try_from","","",212,[[["u"]],["result"]]],[11,"borrow","","",212,[[["self"]],["t"]]],[11,"get_type_id","","",212,[[["self"]],["typeid"]]],[11,"try_into","","",212,[[["self"]],["result"]]],[11,"borrow_mut","","",212,[[["self"]],["t"]]],[11,"into","","",213,[[["self"]],["u"]]],[11,"to_owned","","",213,[[["self"]],["t"]]],[11,"clone_into","","",213,N],[11,"from","","",213,[[["t"]],["t"]]],[11,"try_from","","",213,[[["u"]],["result"]]],[11,"borrow","","",213,[[["self"]],["t"]]],[11,"get_type_id","","",213,[[["self"]],["typeid"]]],[11,"try_into","","",213,[[["self"]],["result"]]],[11,"borrow_mut","","",213,[[["self"]],["t"]]],[11,"into","","",214,[[["self"]],["u"]]],[11,"to_owned","","",214,[[["self"]],["t"]]],[11,"clone_into","","",214,N],[11,"from","","",214,[[["t"]],["t"]]],[11,"try_from","","",214,[[["u"]],["result"]]],[11,"borrow","","",214,[[["self"]],["t"]]],[11,"get_type_id","","",214,[[["self"]],["typeid"]]],[11,"try_into","","",214,[[["self"]],["result"]]],[11,"borrow_mut","","",214,[[["self"]],["t"]]],[11,"into","","",215,[[["self"]],["u"]]],[11,"to_owned","","",215,[[["self"]],["t"]]],[11,"clone_into","","",215,N],[11,"from","","",215,[[["t"]],["t"]]],[11,"try_from","","",215,[[["u"]],["result"]]],[11,"borrow","","",215,[[["self"]],["t"]]],[11,"get_type_id","","",215,[[["self"]],["typeid"]]],[11,"try_into","","",215,[[["self"]],["result"]]],[11,"borrow_mut","","",215,[[["self"]],["t"]]],[11,"into","","",216,[[["self"]],["u"]]],[11,"to_owned","","",216,[[["self"]],["t"]]],[11,"clone_into","","",216,N],[11,"from","","",216,[[["t"]],["t"]]],[11,"try_from","","",216,[[["u"]],["result"]]],[11,"borrow","","",216,[[["self"]],["t"]]],[11,"get_type_id","","",216,[[["self"]],["typeid"]]],[11,"try_into","","",216,[[["self"]],["result"]]],[11,"borrow_mut","","",216,[[["self"]],["t"]]],[11,"into","","",217,[[["self"]],["u"]]],[11,"to_owned","","",217,[[["self"]],["t"]]],[11,"clone_into","","",217,N],[11,"from","","",217,[[["t"]],["t"]]],[11,"try_from","","",217,[[["u"]],["result"]]],[11,"borrow","","",217,[[["self"]],["t"]]],[11,"get_type_id","","",217,[[["self"]],["typeid"]]],[11,"try_into","","",217,[[["self"]],["result"]]],[11,"borrow_mut","","",217,[[["self"]],["t"]]],[11,"into","","",218,[[["self"]],["u"]]],[11,"to_owned","","",218,[[["self"]],["t"]]],[11,"clone_into","","",218,N],[11,"from","","",218,[[["t"]],["t"]]],[11,"try_from","","",218,[[["u"]],["result"]]],[11,"borrow","","",218,[[["self"]],["t"]]],[11,"get_type_id","","",218,[[["self"]],["typeid"]]],[11,"try_into","","",218,[[["self"]],["result"]]],[11,"borrow_mut","","",218,[[["self"]],["t"]]],[11,"into","","",219,[[["self"]],["u"]]],[11,"to_owned","","",219,[[["self"]],["t"]]],[11,"clone_into","","",219,N],[11,"from","","",219,[[["t"]],["t"]]],[11,"try_from","","",219,[[["u"]],["result"]]],[11,"borrow","","",219,[[["self"]],["t"]]],[11,"get_type_id","","",219,[[["self"]],["typeid"]]],[11,"try_into","","",219,[[["self"]],["result"]]],[11,"borrow_mut","","",219,[[["self"]],["t"]]],[11,"span","","",17,[[["self"]],["span"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,N],[11,"from","","",17,[[["t"]],["t"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"into","","",220,[[["self"]],["u"]]],[11,"to_owned","","",220,[[["self"]],["t"]]],[11,"clone_into","","",220,N],[11,"from","","",220,[[["t"]],["t"]]],[11,"try_from","","",220,[[["u"]],["result"]]],[11,"borrow","","",220,[[["self"]],["t"]]],[11,"get_type_id","","",220,[[["self"]],["typeid"]]],[11,"try_into","","",220,[[["self"]],["result"]]],[11,"borrow_mut","","",220,[[["self"]],["t"]]],[11,"span","","",18,[[["self"]],["span"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,N],[11,"from","","",18,[[["t"]],["t"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"into","","",221,[[["self"]],["u"]]],[11,"to_owned","","",221,[[["self"]],["t"]]],[11,"clone_into","","",221,N],[11,"from","","",221,[[["t"]],["t"]]],[11,"try_from","","",221,[[["u"]],["result"]]],[11,"borrow","","",221,[[["self"]],["t"]]],[11,"get_type_id","","",221,[[["self"]],["typeid"]]],[11,"try_into","","",221,[[["self"]],["result"]]],[11,"borrow_mut","","",221,[[["self"]],["t"]]],[11,"into","","",222,[[["self"]],["u"]]],[11,"to_owned","","",222,[[["self"]],["t"]]],[11,"clone_into","","",222,N],[11,"from","","",222,[[["t"]],["t"]]],[11,"try_from","","",222,[[["u"]],["result"]]],[11,"borrow","","",222,[[["self"]],["t"]]],[11,"get_type_id","","",222,[[["self"]],["typeid"]]],[11,"try_into","","",222,[[["self"]],["result"]]],[11,"borrow_mut","","",222,[[["self"]],["t"]]],[11,"into","","",223,[[["self"]],["u"]]],[11,"to_owned","","",223,[[["self"]],["t"]]],[11,"clone_into","","",223,N],[11,"from","","",223,[[["t"]],["t"]]],[11,"try_from","","",223,[[["u"]],["result"]]],[11,"borrow","","",223,[[["self"]],["t"]]],[11,"get_type_id","","",223,[[["self"]],["typeid"]]],[11,"try_into","","",223,[[["self"]],["result"]]],[11,"borrow_mut","","",223,[[["self"]],["t"]]],[11,"span","","",19,[[["self"]],["span"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,N],[11,"from","","",19,[[["t"]],["t"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"span","","",20,[[["self"]],["span"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,N],[11,"from","","",20,[[["t"]],["t"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"span","","",21,[[["self"]],["span"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,N],[11,"from","","",21,[[["t"]],["t"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"span","","",22,[[["self"]],["span"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,N],[11,"from","","",22,[[["t"]],["t"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"span","","",23,[[["self"]],["span"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,N],[11,"from","","",23,[[["t"]],["t"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"span","","",24,[[["self"]],["span"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,N],[11,"from","","",24,[[["t"]],["t"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"span","","",25,[[["self"]],["span"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,N],[11,"from","","",25,[[["t"]],["t"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"span","","",26,[[["self"]],["span"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,N],[11,"from","","",26,[[["t"]],["t"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"span","","",27,[[["self"]],["span"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,N],[11,"from","","",27,[[["t"]],["t"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"span","","",28,[[["self"]],["span"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,N],[11,"from","","",28,[[["t"]],["t"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"span","","",29,[[["self"]],["span"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,N],[11,"from","","",29,[[["t"]],["t"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"span","","",224,[[["self"]],["span"]]],[11,"into","","",224,[[["self"]],["u"]]],[11,"to_owned","","",224,[[["self"]],["t"]]],[11,"clone_into","","",224,N],[11,"from","","",224,[[["t"]],["t"]]],[11,"try_from","","",224,[[["u"]],["result"]]],[11,"borrow","","",224,[[["self"]],["t"]]],[11,"get_type_id","","",224,[[["self"]],["typeid"]]],[11,"try_into","","",224,[[["self"]],["result"]]],[11,"borrow_mut","","",224,[[["self"]],["t"]]],[11,"span","","",225,[[["self"]],["span"]]],[11,"into","","",225,[[["self"]],["u"]]],[11,"to_owned","","",225,[[["self"]],["t"]]],[11,"clone_into","","",225,N],[11,"from","","",225,[[["t"]],["t"]]],[11,"try_from","","",225,[[["u"]],["result"]]],[11,"borrow","","",225,[[["self"]],["t"]]],[11,"get_type_id","","",225,[[["self"]],["typeid"]]],[11,"try_into","","",225,[[["self"]],["result"]]],[11,"borrow_mut","","",225,[[["self"]],["t"]]],[11,"span","","",177,[[["self"]],["span"]]],[11,"into","","",177,[[["self"]],["u"]]],[11,"to_owned","","",177,[[["self"]],["t"]]],[11,"clone_into","","",177,N],[11,"from","","",177,[[["t"]],["t"]]],[11,"try_from","","",177,[[["u"]],["result"]]],[11,"borrow","","",177,[[["self"]],["t"]]],[11,"get_type_id","","",177,[[["self"]],["typeid"]]],[11,"try_into","","",177,[[["self"]],["result"]]],[11,"borrow_mut","","",177,[[["self"]],["t"]]],[11,"span","","",178,[[["self"]],["span"]]],[11,"into","","",178,[[["self"]],["u"]]],[11,"to_string","","",178,[[["self"]],["string"]]],[11,"to_owned","","",178,[[["self"]],["t"]]],[11,"clone_into","","",178,N],[11,"from","","",178,[[["t"]],["t"]]],[11,"try_from","","",178,[[["u"]],["result"]]],[11,"borrow","","",178,[[["self"]],["t"]]],[11,"get_type_id","","",178,[[["self"]],["typeid"]]],[11,"try_into","","",178,[[["self"]],["result"]]],[11,"borrow_mut","","",178,[[["self"]],["t"]]],[11,"span","","",179,[[["self"]],["span"]]],[11,"into","","",179,[[["self"]],["u"]]],[11,"to_string","","",179,[[["self"]],["string"]]],[11,"to_owned","","",179,[[["self"]],["t"]]],[11,"clone_into","","",179,N],[11,"from","","",179,[[["t"]],["t"]]],[11,"try_from","","",179,[[["u"]],["result"]]],[11,"borrow","","",179,[[["self"]],["t"]]],[11,"get_type_id","","",179,[[["self"]],["typeid"]]],[11,"try_into","","",179,[[["self"]],["result"]]],[11,"borrow_mut","","",179,[[["self"]],["t"]]],[11,"span","","",30,[[["self"]],["span"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,N],[11,"from","","",30,[[["t"]],["t"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"span","","",182,[[["self"]],["span"]]],[11,"into","","",182,[[["self"]],["u"]]],[11,"to_owned","","",182,[[["self"]],["t"]]],[11,"clone_into","","",182,N],[11,"from","","",182,[[["t"]],["t"]]],[11,"try_from","","",182,[[["u"]],["result"]]],[11,"borrow","","",182,[[["self"]],["t"]]],[11,"get_type_id","","",182,[[["self"]],["typeid"]]],[11,"try_into","","",182,[[["self"]],["result"]]],[11,"borrow_mut","","",182,[[["self"]],["t"]]],[11,"span","","",181,[[["self"]],["span"]]],[11,"into","","",181,[[["self"]],["u"]]],[11,"to_owned","","",181,[[["self"]],["t"]]],[11,"clone_into","","",181,N],[11,"from","","",181,[[["t"]],["t"]]],[11,"try_from","","",181,[[["u"]],["result"]]],[11,"borrow","","",181,[[["self"]],["t"]]],[11,"get_type_id","","",181,[[["self"]],["typeid"]]],[11,"try_into","","",181,[[["self"]],["result"]]],[11,"borrow_mut","","",181,[[["self"]],["t"]]],[11,"span","","",183,[[["self"]],["span"]]],[11,"into","","",183,[[["self"]],["u"]]],[11,"to_owned","","",183,[[["self"]],["t"]]],[11,"clone_into","","",183,N],[11,"from","","",183,[[["t"]],["t"]]],[11,"try_from","","",183,[[["u"]],["result"]]],[11,"borrow","","",183,[[["self"]],["t"]]],[11,"get_type_id","","",183,[[["self"]],["typeid"]]],[11,"try_into","","",183,[[["self"]],["result"]]],[11,"borrow_mut","","",183,[[["self"]],["t"]]],[11,"span","","",185,[[["self"]],["span"]]],[11,"into","","",185,[[["self"]],["u"]]],[11,"to_owned","","",185,[[["self"]],["t"]]],[11,"clone_into","","",185,N],[11,"from","","",185,[[["t"]],["t"]]],[11,"try_from","","",185,[[["u"]],["result"]]],[11,"borrow","","",185,[[["self"]],["t"]]],[11,"get_type_id","","",185,[[["self"]],["typeid"]]],[11,"try_into","","",185,[[["self"]],["result"]]],[11,"borrow_mut","","",185,[[["self"]],["t"]]],[11,"span","","",184,[[["self"]],["span"]]],[11,"into","","",184,[[["self"]],["u"]]],[11,"to_owned","","",184,[[["self"]],["t"]]],[11,"clone_into","","",184,N],[11,"from","","",184,[[["t"]],["t"]]],[11,"try_from","","",184,[[["u"]],["result"]]],[11,"borrow","","",184,[[["self"]],["t"]]],[11,"get_type_id","","",184,[[["self"]],["typeid"]]],[11,"try_into","","",184,[[["self"]],["result"]]],[11,"borrow_mut","","",184,[[["self"]],["t"]]],[11,"span","","",180,[[["self"]],["span"]]],[11,"into","","",180,[[["self"]],["u"]]],[11,"to_owned","","",180,[[["self"]],["t"]]],[11,"clone_into","","",180,N],[11,"from","","",180,[[["t"]],["t"]]],[11,"try_from","","",180,[[["u"]],["result"]]],[11,"borrow","","",180,[[["self"]],["t"]]],[11,"get_type_id","","",180,[[["self"]],["typeid"]]],[11,"try_into","","",180,[[["self"]],["result"]]],[11,"borrow_mut","","",180,[[["self"]],["t"]]],[11,"span","","",31,[[["self"]],["span"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,N],[11,"from","","",31,[[["t"]],["t"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"span","","",32,[[["self"]],["span"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,N],[11,"from","","",32,[[["t"]],["t"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,N],[11,"from","","",33,[[["t"]],["t"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,N],[11,"from","","",34,[[["t"]],["t"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,N],[11,"from","","",35,[[["t"]],["t"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"span","","",36,[[["self"]],["span"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,N],[11,"from","","",36,[[["t"]],["t"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"span","","",37,[[["self"]],["span"]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,N],[11,"from","","",37,[[["t"]],["t"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"span","","",38,[[["self"]],["span"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,N],[11,"from","","",38,[[["t"]],["t"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"span","","",39,[[["self"]],["span"]]],[11,"into","","",39,[[["self"]],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,N],[11,"from","","",39,[[["t"]],["t"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"span","","",40,[[["self"]],["span"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,N],[11,"from","","",40,[[["t"]],["t"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"span","","",41,[[["self"]],["span"]]],[11,"into","","",41,[[["self"]],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,N],[11,"from","","",41,[[["t"]],["t"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"span","","",42,[[["self"]],["span"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,N],[11,"from","","",42,[[["t"]],["t"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"span","","",43,[[["self"]],["span"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,N],[11,"from","","",43,[[["t"]],["t"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"span","","",44,[[["self"]],["span"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,N],[11,"from","","",44,[[["t"]],["t"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"span","","",45,[[["self"]],["span"]]],[11,"into","","",45,[[["self"]],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,N],[11,"from","","",45,[[["t"]],["t"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"span","","",46,[[["self"]],["span"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,N],[11,"from","","",46,[[["t"]],["t"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"span","","",47,[[["self"]],["span"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,N],[11,"from","","",47,[[["t"]],["t"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"span","","",48,[[["self"]],["span"]]],[11,"into","","",48,[[["self"]],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,N],[11,"from","","",48,[[["t"]],["t"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"span","","",49,[[["self"]],["span"]]],[11,"into","","",49,[[["self"]],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,N],[11,"from","","",49,[[["t"]],["t"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"try_into","","",49,[[["self"]],["result"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"span","","",50,[[["self"]],["span"]]],[11,"into","","",50,[[["self"]],["u"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,N],[11,"from","","",50,[[["t"]],["t"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"get_type_id","","",50,[[["self"]],["typeid"]]],[11,"try_into","","",50,[[["self"]],["result"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"span","","",51,[[["self"]],["span"]]],[11,"into","","",51,[[["self"]],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,N],[11,"from","","",51,[[["t"]],["t"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"get_type_id","","",51,[[["self"]],["typeid"]]],[11,"try_into","","",51,[[["self"]],["result"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"span","","",52,[[["self"]],["span"]]],[11,"into","","",52,[[["self"]],["u"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,N],[11,"from","","",52,[[["t"]],["t"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"get_type_id","","",52,[[["self"]],["typeid"]]],[11,"try_into","","",52,[[["self"]],["result"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"span","","",53,[[["self"]],["span"]]],[11,"into","","",53,[[["self"]],["u"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,N],[11,"from","","",53,[[["t"]],["t"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"get_type_id","","",53,[[["self"]],["typeid"]]],[11,"try_into","","",53,[[["self"]],["result"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"span","","",54,[[["self"]],["span"]]],[11,"into","","",54,[[["self"]],["u"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,N],[11,"from","","",54,[[["t"]],["t"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"get_type_id","","",54,[[["self"]],["typeid"]]],[11,"try_into","","",54,[[["self"]],["result"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"span","","",55,[[["self"]],["span"]]],[11,"into","","",55,[[["self"]],["u"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,N],[11,"from","","",55,[[["t"]],["t"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"get_type_id","","",55,[[["self"]],["typeid"]]],[11,"try_into","","",55,[[["self"]],["result"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"span","","",56,[[["self"]],["span"]]],[11,"into","","",56,[[["self"]],["u"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,N],[11,"from","","",56,[[["t"]],["t"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"get_type_id","","",56,[[["self"]],["typeid"]]],[11,"try_into","","",56,[[["self"]],["result"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"span","","",57,[[["self"]],["span"]]],[11,"into","","",57,[[["self"]],["u"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,N],[11,"from","","",57,[[["t"]],["t"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"get_type_id","","",57,[[["self"]],["typeid"]]],[11,"try_into","","",57,[[["self"]],["result"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"span","","",58,[[["self"]],["span"]]],[11,"into","","",58,[[["self"]],["u"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,N],[11,"from","","",58,[[["t"]],["t"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"get_type_id","","",58,[[["self"]],["typeid"]]],[11,"try_into","","",58,[[["self"]],["result"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"span","","",59,[[["self"]],["span"]]],[11,"into","","",59,[[["self"]],["u"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,N],[11,"from","","",59,[[["t"]],["t"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"get_type_id","","",59,[[["self"]],["typeid"]]],[11,"try_into","","",59,[[["self"]],["result"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"into","","",60,[[["self"]],["u"]]],[11,"to_owned","","",60,[[["self"]],["t"]]],[11,"clone_into","","",60,N],[11,"from","","",60,[[["t"]],["t"]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"get_type_id","","",60,[[["self"]],["typeid"]]],[11,"try_into","","",60,[[["self"]],["result"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"into","","",61,[[["self"]],["u"]]],[11,"to_owned","","",61,[[["self"]],["t"]]],[11,"clone_into","","",61,N],[11,"from","","",61,[[["t"]],["t"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"get_type_id","","",61,[[["self"]],["typeid"]]],[11,"try_into","","",61,[[["self"]],["result"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"span","","",62,[[["self"]],["span"]]],[11,"into","","",62,[[["self"]],["u"]]],[11,"to_owned","","",62,[[["self"]],["t"]]],[11,"clone_into","","",62,N],[11,"from","","",62,[[["t"]],["t"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"get_type_id","","",62,[[["self"]],["typeid"]]],[11,"try_into","","",62,[[["self"]],["result"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"span","","",63,[[["self"]],["span"]]],[11,"into","","",63,[[["self"]],["u"]]],[11,"to_owned","","",63,[[["self"]],["t"]]],[11,"clone_into","","",63,N],[11,"from","","",63,[[["t"]],["t"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"get_type_id","","",63,[[["self"]],["typeid"]]],[11,"try_into","","",63,[[["self"]],["result"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"span","","",64,[[["self"]],["span"]]],[11,"into","","",64,[[["self"]],["u"]]],[11,"to_owned","","",64,[[["self"]],["t"]]],[11,"clone_into","","",64,N],[11,"from","","",64,[[["t"]],["t"]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"get_type_id","","",64,[[["self"]],["typeid"]]],[11,"try_into","","",64,[[["self"]],["result"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"span","","",65,[[["self"]],["span"]]],[11,"into","","",65,[[["self"]],["u"]]],[11,"to_owned","","",65,[[["self"]],["t"]]],[11,"clone_into","","",65,N],[11,"from","","",65,[[["t"]],["t"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"get_type_id","","",65,[[["self"]],["typeid"]]],[11,"try_into","","",65,[[["self"]],["result"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"span","","",66,[[["self"]],["span"]]],[11,"into","","",66,[[["self"]],["u"]]],[11,"to_owned","","",66,[[["self"]],["t"]]],[11,"clone_into","","",66,N],[11,"from","","",66,[[["t"]],["t"]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"get_type_id","","",66,[[["self"]],["typeid"]]],[11,"try_into","","",66,[[["self"]],["result"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"span","","",67,[[["self"]],["span"]]],[11,"into","","",67,[[["self"]],["u"]]],[11,"to_owned","","",67,[[["self"]],["t"]]],[11,"clone_into","","",67,N],[11,"from","","",67,[[["t"]],["t"]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"get_type_id","","",67,[[["self"]],["typeid"]]],[11,"try_into","","",67,[[["self"]],["result"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"span","","",68,[[["self"]],["span"]]],[11,"into","","",68,[[["self"]],["u"]]],[11,"to_owned","","",68,[[["self"]],["t"]]],[11,"clone_into","","",68,N],[11,"from","","",68,[[["t"]],["t"]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"get_type_id","","",68,[[["self"]],["typeid"]]],[11,"try_into","","",68,[[["self"]],["result"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"span","","",69,[[["self"]],["span"]]],[11,"into","","",69,[[["self"]],["u"]]],[11,"to_owned","","",69,[[["self"]],["t"]]],[11,"clone_into","","",69,N],[11,"from","","",69,[[["t"]],["t"]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"get_type_id","","",69,[[["self"]],["typeid"]]],[11,"try_into","","",69,[[["self"]],["result"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"span","","",70,[[["self"]],["span"]]],[11,"into","","",70,[[["self"]],["u"]]],[11,"to_owned","","",70,[[["self"]],["t"]]],[11,"clone_into","","",70,N],[11,"from","","",70,[[["t"]],["t"]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"get_type_id","","",70,[[["self"]],["typeid"]]],[11,"try_into","","",70,[[["self"]],["result"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"span","","",71,[[["self"]],["span"]]],[11,"into","","",71,[[["self"]],["u"]]],[11,"to_owned","","",71,[[["self"]],["t"]]],[11,"clone_into","","",71,N],[11,"from","","",71,[[["t"]],["t"]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"get_type_id","","",71,[[["self"]],["typeid"]]],[11,"try_into","","",71,[[["self"]],["result"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"into","","",72,[[["self"]],["u"]]],[11,"to_owned","","",72,[[["self"]],["t"]]],[11,"clone_into","","",72,N],[11,"from","","",72,[[["t"]],["t"]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"get_type_id","","",72,[[["self"]],["typeid"]]],[11,"try_into","","",72,[[["self"]],["result"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"into","","",73,[[["self"]],["u"]]],[11,"to_owned","","",73,[[["self"]],["t"]]],[11,"clone_into","","",73,N],[11,"from","","",73,[[["t"]],["t"]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"get_type_id","","",73,[[["self"]],["typeid"]]],[11,"try_into","","",73,[[["self"]],["result"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"span","","",74,[[["self"]],["span"]]],[11,"into","","",74,[[["self"]],["u"]]],[11,"to_owned","","",74,[[["self"]],["t"]]],[11,"clone_into","","",74,N],[11,"from","","",74,[[["t"]],["t"]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"get_type_id","","",74,[[["self"]],["typeid"]]],[11,"try_into","","",74,[[["self"]],["result"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"into","","",75,[[["self"]],["u"]]],[11,"to_owned","","",75,[[["self"]],["t"]]],[11,"clone_into","","",75,N],[11,"from","","",75,[[["t"]],["t"]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"get_type_id","","",75,[[["self"]],["typeid"]]],[11,"try_into","","",75,[[["self"]],["result"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"into","","",76,[[["self"]],["u"]]],[11,"to_owned","","",76,[[["self"]],["t"]]],[11,"clone_into","","",76,N],[11,"from","","",76,[[["t"]],["t"]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"get_type_id","","",76,[[["self"]],["typeid"]]],[11,"try_into","","",76,[[["self"]],["result"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"into","","",77,[[["self"]],["u"]]],[11,"to_owned","","",77,[[["self"]],["t"]]],[11,"clone_into","","",77,N],[11,"from","","",77,[[["t"]],["t"]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"get_type_id","","",77,[[["self"]],["typeid"]]],[11,"try_into","","",77,[[["self"]],["result"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"span","","",78,[[["self"]],["span"]]],[11,"into","","",78,[[["self"]],["u"]]],[11,"to_owned","","",78,[[["self"]],["t"]]],[11,"clone_into","","",78,N],[11,"from","","",78,[[["t"]],["t"]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"get_type_id","","",78,[[["self"]],["typeid"]]],[11,"try_into","","",78,[[["self"]],["result"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"span","","",79,[[["self"]],["span"]]],[11,"into","","",79,[[["self"]],["u"]]],[11,"to_owned","","",79,[[["self"]],["t"]]],[11,"clone_into","","",79,N],[11,"from","","",79,[[["t"]],["t"]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"get_type_id","","",79,[[["self"]],["typeid"]]],[11,"try_into","","",79,[[["self"]],["result"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"span","","",80,[[["self"]],["span"]]],[11,"into","","",80,[[["self"]],["u"]]],[11,"to_owned","","",80,[[["self"]],["t"]]],[11,"clone_into","","",80,N],[11,"from","","",80,[[["t"]],["t"]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"get_type_id","","",80,[[["self"]],["typeid"]]],[11,"try_into","","",80,[[["self"]],["result"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"span","","",81,[[["self"]],["span"]]],[11,"into","","",81,[[["self"]],["u"]]],[11,"to_owned","","",81,[[["self"]],["t"]]],[11,"clone_into","","",81,N],[11,"from","","",81,[[["t"]],["t"]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"get_type_id","","",81,[[["self"]],["typeid"]]],[11,"try_into","","",81,[[["self"]],["result"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"span","","",82,[[["self"]],["span"]]],[11,"into","","",82,[[["self"]],["u"]]],[11,"to_owned","","",82,[[["self"]],["t"]]],[11,"clone_into","","",82,N],[11,"from","","",82,[[["t"]],["t"]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"get_type_id","","",82,[[["self"]],["typeid"]]],[11,"try_into","","",82,[[["self"]],["result"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"span","","",83,[[["self"]],["span"]]],[11,"into","","",83,[[["self"]],["u"]]],[11,"to_owned","","",83,[[["self"]],["t"]]],[11,"clone_into","","",83,N],[11,"from","","",83,[[["t"]],["t"]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"get_type_id","","",83,[[["self"]],["typeid"]]],[11,"try_into","","",83,[[["self"]],["result"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"span","","",84,[[["self"]],["span"]]],[11,"into","","",84,[[["self"]],["u"]]],[11,"to_owned","","",84,[[["self"]],["t"]]],[11,"clone_into","","",84,N],[11,"from","","",84,[[["t"]],["t"]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"get_type_id","","",84,[[["self"]],["typeid"]]],[11,"try_into","","",84,[[["self"]],["result"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"span","syn::token","",85,[[["self"]],["span"]]],[11,"into","","",85,[[["self"]],["u"]]],[11,"to_owned","","",85,[[["self"]],["t"]]],[11,"clone_into","","",85,N],[11,"from","","",85,[[["t"]],["t"]]],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"get_type_id","","",85,[[["self"]],["typeid"]]],[11,"try_into","","",85,[[["self"]],["result"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"span","","",86,[[["self"]],["span"]]],[11,"into","","",86,[[["self"]],["u"]]],[11,"to_owned","","",86,[[["self"]],["t"]]],[11,"clone_into","","",86,N],[11,"from","","",86,[[["t"]],["t"]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"get_type_id","","",86,[[["self"]],["typeid"]]],[11,"try_into","","",86,[[["self"]],["result"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"span","","",87,[[["self"]],["span"]]],[11,"into","","",87,[[["self"]],["u"]]],[11,"to_owned","","",87,[[["self"]],["t"]]],[11,"clone_into","","",87,N],[11,"from","","",87,[[["t"]],["t"]]],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"get_type_id","","",87,[[["self"]],["typeid"]]],[11,"try_into","","",87,[[["self"]],["result"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"span","","",88,[[["self"]],["span"]]],[11,"into","","",88,[[["self"]],["u"]]],[11,"to_owned","","",88,[[["self"]],["t"]]],[11,"clone_into","","",88,N],[11,"from","","",88,[[["t"]],["t"]]],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"get_type_id","","",88,[[["self"]],["typeid"]]],[11,"try_into","","",88,[[["self"]],["result"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"span","","",89,[[["self"]],["span"]]],[11,"into","","",89,[[["self"]],["u"]]],[11,"to_owned","","",89,[[["self"]],["t"]]],[11,"clone_into","","",89,N],[11,"from","","",89,[[["t"]],["t"]]],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"get_type_id","","",89,[[["self"]],["typeid"]]],[11,"try_into","","",89,[[["self"]],["result"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"span","","",90,[[["self"]],["span"]]],[11,"into","","",90,[[["self"]],["u"]]],[11,"to_owned","","",90,[[["self"]],["t"]]],[11,"clone_into","","",90,N],[11,"from","","",90,[[["t"]],["t"]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"get_type_id","","",90,[[["self"]],["typeid"]]],[11,"try_into","","",90,[[["self"]],["result"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"span","","",91,[[["self"]],["span"]]],[11,"into","","",91,[[["self"]],["u"]]],[11,"to_owned","","",91,[[["self"]],["t"]]],[11,"clone_into","","",91,N],[11,"from","","",91,[[["t"]],["t"]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"get_type_id","","",91,[[["self"]],["typeid"]]],[11,"try_into","","",91,[[["self"]],["result"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"span","","",92,[[["self"]],["span"]]],[11,"into","","",92,[[["self"]],["u"]]],[11,"to_owned","","",92,[[["self"]],["t"]]],[11,"clone_into","","",92,N],[11,"from","","",92,[[["t"]],["t"]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"get_type_id","","",92,[[["self"]],["typeid"]]],[11,"try_into","","",92,[[["self"]],["result"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"span","","",93,[[["self"]],["span"]]],[11,"into","","",93,[[["self"]],["u"]]],[11,"to_owned","","",93,[[["self"]],["t"]]],[11,"clone_into","","",93,N],[11,"from","","",93,[[["t"]],["t"]]],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"get_type_id","","",93,[[["self"]],["typeid"]]],[11,"try_into","","",93,[[["self"]],["result"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"span","","",94,[[["self"]],["span"]]],[11,"into","","",94,[[["self"]],["u"]]],[11,"to_owned","","",94,[[["self"]],["t"]]],[11,"clone_into","","",94,N],[11,"from","","",94,[[["t"]],["t"]]],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"get_type_id","","",94,[[["self"]],["typeid"]]],[11,"try_into","","",94,[[["self"]],["result"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"span","","",95,[[["self"]],["span"]]],[11,"into","","",95,[[["self"]],["u"]]],[11,"to_owned","","",95,[[["self"]],["t"]]],[11,"clone_into","","",95,N],[11,"from","","",95,[[["t"]],["t"]]],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"get_type_id","","",95,[[["self"]],["typeid"]]],[11,"try_into","","",95,[[["self"]],["result"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"span","","",96,[[["self"]],["span"]]],[11,"into","","",96,[[["self"]],["u"]]],[11,"to_owned","","",96,[[["self"]],["t"]]],[11,"clone_into","","",96,N],[11,"from","","",96,[[["t"]],["t"]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"get_type_id","","",96,[[["self"]],["typeid"]]],[11,"try_into","","",96,[[["self"]],["result"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"span","","",97,[[["self"]],["span"]]],[11,"into","","",97,[[["self"]],["u"]]],[11,"to_owned","","",97,[[["self"]],["t"]]],[11,"clone_into","","",97,N],[11,"from","","",97,[[["t"]],["t"]]],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"get_type_id","","",97,[[["self"]],["typeid"]]],[11,"try_into","","",97,[[["self"]],["result"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"span","","",98,[[["self"]],["span"]]],[11,"into","","",98,[[["self"]],["u"]]],[11,"to_owned","","",98,[[["self"]],["t"]]],[11,"clone_into","","",98,N],[11,"from","","",98,[[["t"]],["t"]]],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"get_type_id","","",98,[[["self"]],["typeid"]]],[11,"try_into","","",98,[[["self"]],["result"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"span","","",99,[[["self"]],["span"]]],[11,"into","","",99,[[["self"]],["u"]]],[11,"to_owned","","",99,[[["self"]],["t"]]],[11,"clone_into","","",99,N],[11,"from","","",99,[[["t"]],["t"]]],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"get_type_id","","",99,[[["self"]],["typeid"]]],[11,"try_into","","",99,[[["self"]],["result"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"span","","",100,[[["self"]],["span"]]],[11,"into","","",100,[[["self"]],["u"]]],[11,"to_owned","","",100,[[["self"]],["t"]]],[11,"clone_into","","",100,N],[11,"from","","",100,[[["t"]],["t"]]],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"get_type_id","","",100,[[["self"]],["typeid"]]],[11,"try_into","","",100,[[["self"]],["result"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"span","","",101,[[["self"]],["span"]]],[11,"into","","",101,[[["self"]],["u"]]],[11,"to_owned","","",101,[[["self"]],["t"]]],[11,"clone_into","","",101,N],[11,"from","","",101,[[["t"]],["t"]]],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"get_type_id","","",101,[[["self"]],["typeid"]]],[11,"try_into","","",101,[[["self"]],["result"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"span","","",102,[[["self"]],["span"]]],[11,"into","","",102,[[["self"]],["u"]]],[11,"to_owned","","",102,[[["self"]],["t"]]],[11,"clone_into","","",102,N],[11,"from","","",102,[[["t"]],["t"]]],[11,"try_from","","",102,[[["u"]],["result"]]],[11,"borrow","","",102,[[["self"]],["t"]]],[11,"get_type_id","","",102,[[["self"]],["typeid"]]],[11,"try_into","","",102,[[["self"]],["result"]]],[11,"borrow_mut","","",102,[[["self"]],["t"]]],[11,"span","","",103,[[["self"]],["span"]]],[11,"into","","",103,[[["self"]],["u"]]],[11,"to_owned","","",103,[[["self"]],["t"]]],[11,"clone_into","","",103,N],[11,"from","","",103,[[["t"]],["t"]]],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"get_type_id","","",103,[[["self"]],["typeid"]]],[11,"try_into","","",103,[[["self"]],["result"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"span","","",104,[[["self"]],["span"]]],[11,"into","","",104,[[["self"]],["u"]]],[11,"to_owned","","",104,[[["self"]],["t"]]],[11,"clone_into","","",104,N],[11,"from","","",104,[[["t"]],["t"]]],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"get_type_id","","",104,[[["self"]],["typeid"]]],[11,"try_into","","",104,[[["self"]],["result"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"span","","",105,[[["self"]],["span"]]],[11,"into","","",105,[[["self"]],["u"]]],[11,"to_owned","","",105,[[["self"]],["t"]]],[11,"clone_into","","",105,N],[11,"from","","",105,[[["t"]],["t"]]],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"get_type_id","","",105,[[["self"]],["typeid"]]],[11,"try_into","","",105,[[["self"]],["result"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"span","","",106,[[["self"]],["span"]]],[11,"into","","",106,[[["self"]],["u"]]],[11,"to_owned","","",106,[[["self"]],["t"]]],[11,"clone_into","","",106,N],[11,"from","","",106,[[["t"]],["t"]]],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"get_type_id","","",106,[[["self"]],["typeid"]]],[11,"try_into","","",106,[[["self"]],["result"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"span","","",107,[[["self"]],["span"]]],[11,"into","","",107,[[["self"]],["u"]]],[11,"to_owned","","",107,[[["self"]],["t"]]],[11,"clone_into","","",107,N],[11,"from","","",107,[[["t"]],["t"]]],[11,"try_from","","",107,[[["u"]],["result"]]],[11,"borrow","","",107,[[["self"]],["t"]]],[11,"get_type_id","","",107,[[["self"]],["typeid"]]],[11,"try_into","","",107,[[["self"]],["result"]]],[11,"borrow_mut","","",107,[[["self"]],["t"]]],[11,"span","","",108,[[["self"]],["span"]]],[11,"into","","",108,[[["self"]],["u"]]],[11,"to_owned","","",108,[[["self"]],["t"]]],[11,"clone_into","","",108,N],[11,"from","","",108,[[["t"]],["t"]]],[11,"try_from","","",108,[[["u"]],["result"]]],[11,"borrow","","",108,[[["self"]],["t"]]],[11,"get_type_id","","",108,[[["self"]],["typeid"]]],[11,"try_into","","",108,[[["self"]],["result"]]],[11,"borrow_mut","","",108,[[["self"]],["t"]]],[11,"span","","",109,[[["self"]],["span"]]],[11,"into","","",109,[[["self"]],["u"]]],[11,"to_owned","","",109,[[["self"]],["t"]]],[11,"clone_into","","",109,N],[11,"from","","",109,[[["t"]],["t"]]],[11,"try_from","","",109,[[["u"]],["result"]]],[11,"borrow","","",109,[[["self"]],["t"]]],[11,"get_type_id","","",109,[[["self"]],["typeid"]]],[11,"try_into","","",109,[[["self"]],["result"]]],[11,"borrow_mut","","",109,[[["self"]],["t"]]],[11,"span","","",110,[[["self"]],["span"]]],[11,"into","","",110,[[["self"]],["u"]]],[11,"to_owned","","",110,[[["self"]],["t"]]],[11,"clone_into","","",110,N],[11,"from","","",110,[[["t"]],["t"]]],[11,"try_from","","",110,[[["u"]],["result"]]],[11,"borrow","","",110,[[["self"]],["t"]]],[11,"get_type_id","","",110,[[["self"]],["typeid"]]],[11,"try_into","","",110,[[["self"]],["result"]]],[11,"borrow_mut","","",110,[[["self"]],["t"]]],[11,"span","","",111,[[["self"]],["span"]]],[11,"into","","",111,[[["self"]],["u"]]],[11,"to_owned","","",111,[[["self"]],["t"]]],[11,"clone_into","","",111,N],[11,"from","","",111,[[["t"]],["t"]]],[11,"try_from","","",111,[[["u"]],["result"]]],[11,"borrow","","",111,[[["self"]],["t"]]],[11,"get_type_id","","",111,[[["self"]],["typeid"]]],[11,"try_into","","",111,[[["self"]],["result"]]],[11,"borrow_mut","","",111,[[["self"]],["t"]]],[11,"span","","",112,[[["self"]],["span"]]],[11,"into","","",112,[[["self"]],["u"]]],[11,"to_owned","","",112,[[["self"]],["t"]]],[11,"clone_into","","",112,N],[11,"from","","",112,[[["t"]],["t"]]],[11,"try_from","","",112,[[["u"]],["result"]]],[11,"borrow","","",112,[[["self"]],["t"]]],[11,"get_type_id","","",112,[[["self"]],["typeid"]]],[11,"try_into","","",112,[[["self"]],["result"]]],[11,"borrow_mut","","",112,[[["self"]],["t"]]],[11,"span","","",113,[[["self"]],["span"]]],[11,"into","","",113,[[["self"]],["u"]]],[11,"to_owned","","",113,[[["self"]],["t"]]],[11,"clone_into","","",113,N],[11,"from","","",113,[[["t"]],["t"]]],[11,"try_from","","",113,[[["u"]],["result"]]],[11,"borrow","","",113,[[["self"]],["t"]]],[11,"get_type_id","","",113,[[["self"]],["typeid"]]],[11,"try_into","","",113,[[["self"]],["result"]]],[11,"borrow_mut","","",113,[[["self"]],["t"]]],[11,"span","","",114,[[["self"]],["span"]]],[11,"into","","",114,[[["self"]],["u"]]],[11,"to_owned","","",114,[[["self"]],["t"]]],[11,"clone_into","","",114,N],[11,"from","","",114,[[["t"]],["t"]]],[11,"try_from","","",114,[[["u"]],["result"]]],[11,"borrow","","",114,[[["self"]],["t"]]],[11,"get_type_id","","",114,[[["self"]],["typeid"]]],[11,"try_into","","",114,[[["self"]],["result"]]],[11,"borrow_mut","","",114,[[["self"]],["t"]]],[11,"span","","",115,[[["self"]],["span"]]],[11,"into","","",115,[[["self"]],["u"]]],[11,"to_owned","","",115,[[["self"]],["t"]]],[11,"clone_into","","",115,N],[11,"from","","",115,[[["t"]],["t"]]],[11,"try_from","","",115,[[["u"]],["result"]]],[11,"borrow","","",115,[[["self"]],["t"]]],[11,"get_type_id","","",115,[[["self"]],["typeid"]]],[11,"try_into","","",115,[[["self"]],["result"]]],[11,"borrow_mut","","",115,[[["self"]],["t"]]],[11,"span","","",116,[[["self"]],["span"]]],[11,"into","","",116,[[["self"]],["u"]]],[11,"to_owned","","",116,[[["self"]],["t"]]],[11,"clone_into","","",116,N],[11,"from","","",116,[[["t"]],["t"]]],[11,"try_from","","",116,[[["u"]],["result"]]],[11,"borrow","","",116,[[["self"]],["t"]]],[11,"get_type_id","","",116,[[["self"]],["typeid"]]],[11,"try_into","","",116,[[["self"]],["result"]]],[11,"borrow_mut","","",116,[[["self"]],["t"]]],[11,"span","","",117,[[["self"]],["span"]]],[11,"into","","",117,[[["self"]],["u"]]],[11,"to_owned","","",117,[[["self"]],["t"]]],[11,"clone_into","","",117,N],[11,"from","","",117,[[["t"]],["t"]]],[11,"try_from","","",117,[[["u"]],["result"]]],[11,"borrow","","",117,[[["self"]],["t"]]],[11,"get_type_id","","",117,[[["self"]],["typeid"]]],[11,"try_into","","",117,[[["self"]],["result"]]],[11,"borrow_mut","","",117,[[["self"]],["t"]]],[11,"span","","",118,[[["self"]],["span"]]],[11,"into","","",118,[[["self"]],["u"]]],[11,"to_owned","","",118,[[["self"]],["t"]]],[11,"clone_into","","",118,N],[11,"from","","",118,[[["t"]],["t"]]],[11,"try_from","","",118,[[["u"]],["result"]]],[11,"borrow","","",118,[[["self"]],["t"]]],[11,"get_type_id","","",118,[[["self"]],["typeid"]]],[11,"try_into","","",118,[[["self"]],["result"]]],[11,"borrow_mut","","",118,[[["self"]],["t"]]],[11,"span","","",119,[[["self"]],["span"]]],[11,"into","","",119,[[["self"]],["u"]]],[11,"to_owned","","",119,[[["self"]],["t"]]],[11,"clone_into","","",119,N],[11,"from","","",119,[[["t"]],["t"]]],[11,"try_from","","",119,[[["u"]],["result"]]],[11,"borrow","","",119,[[["self"]],["t"]]],[11,"get_type_id","","",119,[[["self"]],["typeid"]]],[11,"try_into","","",119,[[["self"]],["result"]]],[11,"borrow_mut","","",119,[[["self"]],["t"]]],[11,"span","","",120,[[["self"]],["span"]]],[11,"into","","",120,[[["self"]],["u"]]],[11,"to_owned","","",120,[[["self"]],["t"]]],[11,"clone_into","","",120,N],[11,"from","","",120,[[["t"]],["t"]]],[11,"try_from","","",120,[[["u"]],["result"]]],[11,"borrow","","",120,[[["self"]],["t"]]],[11,"get_type_id","","",120,[[["self"]],["typeid"]]],[11,"try_into","","",120,[[["self"]],["result"]]],[11,"borrow_mut","","",120,[[["self"]],["t"]]],[11,"span","","",121,[[["self"]],["span"]]],[11,"into","","",121,[[["self"]],["u"]]],[11,"to_owned","","",121,[[["self"]],["t"]]],[11,"clone_into","","",121,N],[11,"from","","",121,[[["t"]],["t"]]],[11,"try_from","","",121,[[["u"]],["result"]]],[11,"borrow","","",121,[[["self"]],["t"]]],[11,"get_type_id","","",121,[[["self"]],["typeid"]]],[11,"try_into","","",121,[[["self"]],["result"]]],[11,"borrow_mut","","",121,[[["self"]],["t"]]],[11,"span","","",122,[[["self"]],["span"]]],[11,"into","","",122,[[["self"]],["u"]]],[11,"to_owned","","",122,[[["self"]],["t"]]],[11,"clone_into","","",122,N],[11,"from","","",122,[[["t"]],["t"]]],[11,"try_from","","",122,[[["u"]],["result"]]],[11,"borrow","","",122,[[["self"]],["t"]]],[11,"get_type_id","","",122,[[["self"]],["typeid"]]],[11,"try_into","","",122,[[["self"]],["result"]]],[11,"borrow_mut","","",122,[[["self"]],["t"]]],[11,"span","","",123,[[["self"]],["span"]]],[11,"into","","",123,[[["self"]],["u"]]],[11,"to_owned","","",123,[[["self"]],["t"]]],[11,"clone_into","","",123,N],[11,"from","","",123,[[["t"]],["t"]]],[11,"try_from","","",123,[[["u"]],["result"]]],[11,"borrow","","",123,[[["self"]],["t"]]],[11,"get_type_id","","",123,[[["self"]],["typeid"]]],[11,"try_into","","",123,[[["self"]],["result"]]],[11,"borrow_mut","","",123,[[["self"]],["t"]]],[11,"span","","",124,[[["self"]],["span"]]],[11,"into","","",124,[[["self"]],["u"]]],[11,"to_owned","","",124,[[["self"]],["t"]]],[11,"clone_into","","",124,N],[11,"from","","",124,[[["t"]],["t"]]],[11,"try_from","","",124,[[["u"]],["result"]]],[11,"borrow","","",124,[[["self"]],["t"]]],[11,"get_type_id","","",124,[[["self"]],["typeid"]]],[11,"try_into","","",124,[[["self"]],["result"]]],[11,"borrow_mut","","",124,[[["self"]],["t"]]],[11,"span","","",125,[[["self"]],["span"]]],[11,"into","","",125,[[["self"]],["u"]]],[11,"to_owned","","",125,[[["self"]],["t"]]],[11,"clone_into","","",125,N],[11,"from","","",125,[[["t"]],["t"]]],[11,"try_from","","",125,[[["u"]],["result"]]],[11,"borrow","","",125,[[["self"]],["t"]]],[11,"get_type_id","","",125,[[["self"]],["typeid"]]],[11,"try_into","","",125,[[["self"]],["result"]]],[11,"borrow_mut","","",125,[[["self"]],["t"]]],[11,"span","","",126,[[["self"]],["span"]]],[11,"into","","",126,[[["self"]],["u"]]],[11,"to_owned","","",126,[[["self"]],["t"]]],[11,"clone_into","","",126,N],[11,"from","","",126,[[["t"]],["t"]]],[11,"try_from","","",126,[[["u"]],["result"]]],[11,"borrow","","",126,[[["self"]],["t"]]],[11,"get_type_id","","",126,[[["self"]],["typeid"]]],[11,"try_into","","",126,[[["self"]],["result"]]],[11,"borrow_mut","","",126,[[["self"]],["t"]]],[11,"span","","",127,[[["self"]],["span"]]],[11,"into","","",127,[[["self"]],["u"]]],[11,"to_owned","","",127,[[["self"]],["t"]]],[11,"clone_into","","",127,N],[11,"from","","",127,[[["t"]],["t"]]],[11,"try_from","","",127,[[["u"]],["result"]]],[11,"borrow","","",127,[[["self"]],["t"]]],[11,"get_type_id","","",127,[[["self"]],["typeid"]]],[11,"try_into","","",127,[[["self"]],["result"]]],[11,"borrow_mut","","",127,[[["self"]],["t"]]],[11,"span","","",128,[[["self"]],["span"]]],[11,"into","","",128,[[["self"]],["u"]]],[11,"to_owned","","",128,[[["self"]],["t"]]],[11,"clone_into","","",128,N],[11,"from","","",128,[[["t"]],["t"]]],[11,"try_from","","",128,[[["u"]],["result"]]],[11,"borrow","","",128,[[["self"]],["t"]]],[11,"get_type_id","","",128,[[["self"]],["typeid"]]],[11,"try_into","","",128,[[["self"]],["result"]]],[11,"borrow_mut","","",128,[[["self"]],["t"]]],[11,"span","","",129,[[["self"]],["span"]]],[11,"into","","",129,[[["self"]],["u"]]],[11,"to_owned","","",129,[[["self"]],["t"]]],[11,"clone_into","","",129,N],[11,"from","","",129,[[["t"]],["t"]]],[11,"try_from","","",129,[[["u"]],["result"]]],[11,"borrow","","",129,[[["self"]],["t"]]],[11,"get_type_id","","",129,[[["self"]],["typeid"]]],[11,"try_into","","",129,[[["self"]],["result"]]],[11,"borrow_mut","","",129,[[["self"]],["t"]]],[11,"span","","",130,[[["self"]],["span"]]],[11,"into","","",130,[[["self"]],["u"]]],[11,"to_owned","","",130,[[["self"]],["t"]]],[11,"clone_into","","",130,N],[11,"from","","",130,[[["t"]],["t"]]],[11,"try_from","","",130,[[["u"]],["result"]]],[11,"borrow","","",130,[[["self"]],["t"]]],[11,"get_type_id","","",130,[[["self"]],["typeid"]]],[11,"try_into","","",130,[[["self"]],["result"]]],[11,"borrow_mut","","",130,[[["self"]],["t"]]],[11,"into","","",131,[[["self"]],["u"]]],[11,"to_owned","","",131,[[["self"]],["t"]]],[11,"clone_into","","",131,N],[11,"from","","",131,[[["t"]],["t"]]],[11,"try_from","","",131,[[["u"]],["result"]]],[11,"borrow","","",131,[[["self"]],["t"]]],[11,"get_type_id","","",131,[[["self"]],["typeid"]]],[11,"try_into","","",131,[[["self"]],["result"]]],[11,"borrow_mut","","",131,[[["self"]],["t"]]],[11,"into","","",132,[[["self"]],["u"]]],[11,"to_owned","","",132,[[["self"]],["t"]]],[11,"clone_into","","",132,N],[11,"from","","",132,[[["t"]],["t"]]],[11,"try_from","","",132,[[["u"]],["result"]]],[11,"borrow","","",132,[[["self"]],["t"]]],[11,"get_type_id","","",132,[[["self"]],["typeid"]]],[11,"try_into","","",132,[[["self"]],["result"]]],[11,"borrow_mut","","",132,[[["self"]],["t"]]],[11,"into","","",133,[[["self"]],["u"]]],[11,"to_owned","","",133,[[["self"]],["t"]]],[11,"clone_into","","",133,N],[11,"from","","",133,[[["t"]],["t"]]],[11,"try_from","","",133,[[["u"]],["result"]]],[11,"borrow","","",133,[[["self"]],["t"]]],[11,"get_type_id","","",133,[[["self"]],["typeid"]]],[11,"try_into","","",133,[[["self"]],["result"]]],[11,"borrow_mut","","",133,[[["self"]],["t"]]],[11,"into","","",134,[[["self"]],["u"]]],[11,"to_owned","","",134,[[["self"]],["t"]]],[11,"clone_into","","",134,N],[11,"from","","",134,[[["t"]],["t"]]],[11,"try_from","","",134,[[["u"]],["result"]]],[11,"borrow","","",134,[[["self"]],["t"]]],[11,"get_type_id","","",134,[[["self"]],["typeid"]]],[11,"try_into","","",134,[[["self"]],["result"]]],[11,"borrow_mut","","",134,[[["self"]],["t"]]],[11,"span","","",135,[[["self"]],["span"]]],[11,"into","","",135,[[["self"]],["u"]]],[11,"to_owned","","",135,[[["self"]],["t"]]],[11,"clone_into","","",135,N],[11,"from","","",135,[[["t"]],["t"]]],[11,"try_from","","",135,[[["u"]],["result"]]],[11,"borrow","","",135,[[["self"]],["t"]]],[11,"get_type_id","","",135,[[["self"]],["typeid"]]],[11,"try_into","","",135,[[["self"]],["result"]]],[11,"borrow_mut","","",135,[[["self"]],["t"]]],[11,"span","","",136,[[["self"]],["span"]]],[11,"into","","",136,[[["self"]],["u"]]],[11,"to_owned","","",136,[[["self"]],["t"]]],[11,"clone_into","","",136,N],[11,"from","","",136,[[["t"]],["t"]]],[11,"try_from","","",136,[[["u"]],["result"]]],[11,"borrow","","",136,[[["self"]],["t"]]],[11,"get_type_id","","",136,[[["self"]],["typeid"]]],[11,"try_into","","",136,[[["self"]],["result"]]],[11,"borrow_mut","","",136,[[["self"]],["t"]]],[11,"span","","",137,[[["self"]],["span"]]],[11,"into","","",137,[[["self"]],["u"]]],[11,"to_owned","","",137,[[["self"]],["t"]]],[11,"clone_into","","",137,N],[11,"from","","",137,[[["t"]],["t"]]],[11,"try_from","","",137,[[["u"]],["result"]]],[11,"borrow","","",137,[[["self"]],["t"]]],[11,"get_type_id","","",137,[[["self"]],["typeid"]]],[11,"try_into","","",137,[[["self"]],["result"]]],[11,"borrow_mut","","",137,[[["self"]],["t"]]],[11,"span","","",138,[[["self"]],["span"]]],[11,"into","","",138,[[["self"]],["u"]]],[11,"to_owned","","",138,[[["self"]],["t"]]],[11,"clone_into","","",138,N],[11,"from","","",138,[[["t"]],["t"]]],[11,"try_from","","",138,[[["u"]],["result"]]],[11,"borrow","","",138,[[["self"]],["t"]]],[11,"get_type_id","","",138,[[["self"]],["typeid"]]],[11,"try_into","","",138,[[["self"]],["result"]]],[11,"borrow_mut","","",138,[[["self"]],["t"]]],[11,"span","","",139,[[["self"]],["span"]]],[11,"into","","",139,[[["self"]],["u"]]],[11,"to_owned","","",139,[[["self"]],["t"]]],[11,"clone_into","","",139,N],[11,"from","","",139,[[["t"]],["t"]]],[11,"try_from","","",139,[[["u"]],["result"]]],[11,"borrow","","",139,[[["self"]],["t"]]],[11,"get_type_id","","",139,[[["self"]],["typeid"]]],[11,"try_into","","",139,[[["self"]],["result"]]],[11,"borrow_mut","","",139,[[["self"]],["t"]]],[11,"span","","",140,[[["self"]],["span"]]],[11,"into","","",140,[[["self"]],["u"]]],[11,"to_owned","","",140,[[["self"]],["t"]]],[11,"clone_into","","",140,N],[11,"from","","",140,[[["t"]],["t"]]],[11,"try_from","","",140,[[["u"]],["result"]]],[11,"borrow","","",140,[[["self"]],["t"]]],[11,"get_type_id","","",140,[[["self"]],["typeid"]]],[11,"try_into","","",140,[[["self"]],["result"]]],[11,"borrow_mut","","",140,[[["self"]],["t"]]],[11,"span","","",141,[[["self"]],["span"]]],[11,"into","","",141,[[["self"]],["u"]]],[11,"to_owned","","",141,[[["self"]],["t"]]],[11,"clone_into","","",141,N],[11,"from","","",141,[[["t"]],["t"]]],[11,"try_from","","",141,[[["u"]],["result"]]],[11,"borrow","","",141,[[["self"]],["t"]]],[11,"get_type_id","","",141,[[["self"]],["typeid"]]],[11,"try_into","","",141,[[["self"]],["result"]]],[11,"borrow_mut","","",141,[[["self"]],["t"]]],[11,"span","","",142,[[["self"]],["span"]]],[11,"into","","",142,[[["self"]],["u"]]],[11,"to_owned","","",142,[[["self"]],["t"]]],[11,"clone_into","","",142,N],[11,"from","","",142,[[["t"]],["t"]]],[11,"try_from","","",142,[[["u"]],["result"]]],[11,"borrow","","",142,[[["self"]],["t"]]],[11,"get_type_id","","",142,[[["self"]],["typeid"]]],[11,"try_into","","",142,[[["self"]],["result"]]],[11,"borrow_mut","","",142,[[["self"]],["t"]]],[11,"span","","",143,[[["self"]],["span"]]],[11,"into","","",143,[[["self"]],["u"]]],[11,"to_owned","","",143,[[["self"]],["t"]]],[11,"clone_into","","",143,N],[11,"from","","",143,[[["t"]],["t"]]],[11,"try_from","","",143,[[["u"]],["result"]]],[11,"borrow","","",143,[[["self"]],["t"]]],[11,"get_type_id","","",143,[[["self"]],["typeid"]]],[11,"try_into","","",143,[[["self"]],["result"]]],[11,"borrow_mut","","",143,[[["self"]],["t"]]],[11,"span","","",144,[[["self"]],["span"]]],[11,"into","","",144,[[["self"]],["u"]]],[11,"to_owned","","",144,[[["self"]],["t"]]],[11,"clone_into","","",144,N],[11,"from","","",144,[[["t"]],["t"]]],[11,"try_from","","",144,[[["u"]],["result"]]],[11,"borrow","","",144,[[["self"]],["t"]]],[11,"get_type_id","","",144,[[["self"]],["typeid"]]],[11,"try_into","","",144,[[["self"]],["result"]]],[11,"borrow_mut","","",144,[[["self"]],["t"]]],[11,"span","","",145,[[["self"]],["span"]]],[11,"into","","",145,[[["self"]],["u"]]],[11,"to_owned","","",145,[[["self"]],["t"]]],[11,"clone_into","","",145,N],[11,"from","","",145,[[["t"]],["t"]]],[11,"try_from","","",145,[[["u"]],["result"]]],[11,"borrow","","",145,[[["self"]],["t"]]],[11,"get_type_id","","",145,[[["self"]],["typeid"]]],[11,"try_into","","",145,[[["self"]],["result"]]],[11,"borrow_mut","","",145,[[["self"]],["t"]]],[11,"span","","",146,[[["self"]],["span"]]],[11,"into","","",146,[[["self"]],["u"]]],[11,"to_owned","","",146,[[["self"]],["t"]]],[11,"clone_into","","",146,N],[11,"from","","",146,[[["t"]],["t"]]],[11,"try_from","","",146,[[["u"]],["result"]]],[11,"borrow","","",146,[[["self"]],["t"]]],[11,"get_type_id","","",146,[[["self"]],["typeid"]]],[11,"try_into","","",146,[[["self"]],["result"]]],[11,"borrow_mut","","",146,[[["self"]],["t"]]],[11,"span","","",147,[[["self"]],["span"]]],[11,"into","","",147,[[["self"]],["u"]]],[11,"to_owned","","",147,[[["self"]],["t"]]],[11,"clone_into","","",147,N],[11,"from","","",147,[[["t"]],["t"]]],[11,"try_from","","",147,[[["u"]],["result"]]],[11,"borrow","","",147,[[["self"]],["t"]]],[11,"get_type_id","","",147,[[["self"]],["typeid"]]],[11,"try_into","","",147,[[["self"]],["result"]]],[11,"borrow_mut","","",147,[[["self"]],["t"]]],[11,"span","","",148,[[["self"]],["span"]]],[11,"into","","",148,[[["self"]],["u"]]],[11,"to_owned","","",148,[[["self"]],["t"]]],[11,"clone_into","","",148,N],[11,"from","","",148,[[["t"]],["t"]]],[11,"try_from","","",148,[[["u"]],["result"]]],[11,"borrow","","",148,[[["self"]],["t"]]],[11,"get_type_id","","",148,[[["self"]],["typeid"]]],[11,"try_into","","",148,[[["self"]],["result"]]],[11,"borrow_mut","","",148,[[["self"]],["t"]]],[11,"span","","",149,[[["self"]],["span"]]],[11,"into","","",149,[[["self"]],["u"]]],[11,"to_owned","","",149,[[["self"]],["t"]]],[11,"clone_into","","",149,N],[11,"from","","",149,[[["t"]],["t"]]],[11,"try_from","","",149,[[["u"]],["result"]]],[11,"borrow","","",149,[[["self"]],["t"]]],[11,"get_type_id","","",149,[[["self"]],["typeid"]]],[11,"try_into","","",149,[[["self"]],["result"]]],[11,"borrow_mut","","",149,[[["self"]],["t"]]],[11,"span","","",150,[[["self"]],["span"]]],[11,"into","","",150,[[["self"]],["u"]]],[11,"to_owned","","",150,[[["self"]],["t"]]],[11,"clone_into","","",150,N],[11,"from","","",150,[[["t"]],["t"]]],[11,"try_from","","",150,[[["u"]],["result"]]],[11,"borrow","","",150,[[["self"]],["t"]]],[11,"get_type_id","","",150,[[["self"]],["typeid"]]],[11,"try_into","","",150,[[["self"]],["result"]]],[11,"borrow_mut","","",150,[[["self"]],["t"]]],[11,"span","","",151,[[["self"]],["span"]]],[11,"into","","",151,[[["self"]],["u"]]],[11,"to_owned","","",151,[[["self"]],["t"]]],[11,"clone_into","","",151,N],[11,"from","","",151,[[["t"]],["t"]]],[11,"try_from","","",151,[[["u"]],["result"]]],[11,"borrow","","",151,[[["self"]],["t"]]],[11,"get_type_id","","",151,[[["self"]],["typeid"]]],[11,"try_into","","",151,[[["self"]],["result"]]],[11,"borrow_mut","","",151,[[["self"]],["t"]]],[11,"span","","",152,[[["self"]],["span"]]],[11,"into","","",152,[[["self"]],["u"]]],[11,"to_owned","","",152,[[["self"]],["t"]]],[11,"clone_into","","",152,N],[11,"from","","",152,[[["t"]],["t"]]],[11,"try_from","","",152,[[["u"]],["result"]]],[11,"borrow","","",152,[[["self"]],["t"]]],[11,"get_type_id","","",152,[[["self"]],["typeid"]]],[11,"try_into","","",152,[[["self"]],["result"]]],[11,"borrow_mut","","",152,[[["self"]],["t"]]],[11,"span","","",153,[[["self"]],["span"]]],[11,"into","","",153,[[["self"]],["u"]]],[11,"to_owned","","",153,[[["self"]],["t"]]],[11,"clone_into","","",153,N],[11,"from","","",153,[[["t"]],["t"]]],[11,"try_from","","",153,[[["u"]],["result"]]],[11,"borrow","","",153,[[["self"]],["t"]]],[11,"get_type_id","","",153,[[["self"]],["typeid"]]],[11,"try_into","","",153,[[["self"]],["result"]]],[11,"borrow_mut","","",153,[[["self"]],["t"]]],[11,"span","","",154,[[["self"]],["span"]]],[11,"into","","",154,[[["self"]],["u"]]],[11,"to_owned","","",154,[[["self"]],["t"]]],[11,"clone_into","","",154,N],[11,"from","","",154,[[["t"]],["t"]]],[11,"try_from","","",154,[[["u"]],["result"]]],[11,"borrow","","",154,[[["self"]],["t"]]],[11,"get_type_id","","",154,[[["self"]],["typeid"]]],[11,"try_into","","",154,[[["self"]],["result"]]],[11,"borrow_mut","","",154,[[["self"]],["t"]]],[11,"span","","",155,[[["self"]],["span"]]],[11,"into","","",155,[[["self"]],["u"]]],[11,"to_owned","","",155,[[["self"]],["t"]]],[11,"clone_into","","",155,N],[11,"from","","",155,[[["t"]],["t"]]],[11,"try_from","","",155,[[["u"]],["result"]]],[11,"borrow","","",155,[[["self"]],["t"]]],[11,"get_type_id","","",155,[[["self"]],["typeid"]]],[11,"try_into","","",155,[[["self"]],["result"]]],[11,"borrow_mut","","",155,[[["self"]],["t"]]],[11,"span","","",156,[[["self"]],["span"]]],[11,"into","","",156,[[["self"]],["u"]]],[11,"to_owned","","",156,[[["self"]],["t"]]],[11,"clone_into","","",156,N],[11,"from","","",156,[[["t"]],["t"]]],[11,"try_from","","",156,[[["u"]],["result"]]],[11,"borrow","","",156,[[["self"]],["t"]]],[11,"get_type_id","","",156,[[["self"]],["typeid"]]],[11,"try_into","","",156,[[["self"]],["result"]]],[11,"borrow_mut","","",156,[[["self"]],["t"]]],[11,"span","","",157,[[["self"]],["span"]]],[11,"into","","",157,[[["self"]],["u"]]],[11,"to_owned","","",157,[[["self"]],["t"]]],[11,"clone_into","","",157,N],[11,"from","","",157,[[["t"]],["t"]]],[11,"try_from","","",157,[[["u"]],["result"]]],[11,"borrow","","",157,[[["self"]],["t"]]],[11,"get_type_id","","",157,[[["self"]],["typeid"]]],[11,"try_into","","",157,[[["self"]],["result"]]],[11,"borrow_mut","","",157,[[["self"]],["t"]]],[11,"span","","",158,[[["self"]],["span"]]],[11,"into","","",158,[[["self"]],["u"]]],[11,"to_owned","","",158,[[["self"]],["t"]]],[11,"clone_into","","",158,N],[11,"from","","",158,[[["t"]],["t"]]],[11,"try_from","","",158,[[["u"]],["result"]]],[11,"borrow","","",158,[[["self"]],["t"]]],[11,"get_type_id","","",158,[[["self"]],["typeid"]]],[11,"try_into","","",158,[[["self"]],["result"]]],[11,"borrow_mut","","",158,[[["self"]],["t"]]],[11,"span","","",159,[[["self"]],["span"]]],[11,"into","","",159,[[["self"]],["u"]]],[11,"to_owned","","",159,[[["self"]],["t"]]],[11,"clone_into","","",159,N],[11,"from","","",159,[[["t"]],["t"]]],[11,"try_from","","",159,[[["u"]],["result"]]],[11,"borrow","","",159,[[["self"]],["t"]]],[11,"get_type_id","","",159,[[["self"]],["typeid"]]],[11,"try_into","","",159,[[["self"]],["result"]]],[11,"borrow_mut","","",159,[[["self"]],["t"]]],[11,"span","","",160,[[["self"]],["span"]]],[11,"into","","",160,[[["self"]],["u"]]],[11,"to_owned","","",160,[[["self"]],["t"]]],[11,"clone_into","","",160,N],[11,"from","","",160,[[["t"]],["t"]]],[11,"try_from","","",160,[[["u"]],["result"]]],[11,"borrow","","",160,[[["self"]],["t"]]],[11,"get_type_id","","",160,[[["self"]],["typeid"]]],[11,"try_into","","",160,[[["self"]],["result"]]],[11,"borrow_mut","","",160,[[["self"]],["t"]]],[11,"span","","",161,[[["self"]],["span"]]],[11,"into","","",161,[[["self"]],["u"]]],[11,"to_owned","","",161,[[["self"]],["t"]]],[11,"clone_into","","",161,N],[11,"from","","",161,[[["t"]],["t"]]],[11,"try_from","","",161,[[["u"]],["result"]]],[11,"borrow","","",161,[[["self"]],["t"]]],[11,"get_type_id","","",161,[[["self"]],["typeid"]]],[11,"try_into","","",161,[[["self"]],["result"]]],[11,"borrow_mut","","",161,[[["self"]],["t"]]],[11,"span","","",162,[[["self"]],["span"]]],[11,"into","","",162,[[["self"]],["u"]]],[11,"to_owned","","",162,[[["self"]],["t"]]],[11,"clone_into","","",162,N],[11,"from","","",162,[[["t"]],["t"]]],[11,"try_from","","",162,[[["u"]],["result"]]],[11,"borrow","","",162,[[["self"]],["t"]]],[11,"get_type_id","","",162,[[["self"]],["typeid"]]],[11,"try_into","","",162,[[["self"]],["result"]]],[11,"borrow_mut","","",162,[[["self"]],["t"]]],[11,"span","","",163,[[["self"]],["span"]]],[11,"into","","",163,[[["self"]],["u"]]],[11,"to_owned","","",163,[[["self"]],["t"]]],[11,"clone_into","","",163,N],[11,"from","","",163,[[["t"]],["t"]]],[11,"try_from","","",163,[[["u"]],["result"]]],[11,"borrow","","",163,[[["self"]],["t"]]],[11,"get_type_id","","",163,[[["self"]],["typeid"]]],[11,"try_into","","",163,[[["self"]],["result"]]],[11,"borrow_mut","","",163,[[["self"]],["t"]]],[11,"span","","",164,[[["self"]],["span"]]],[11,"into","","",164,[[["self"]],["u"]]],[11,"to_owned","","",164,[[["self"]],["t"]]],[11,"clone_into","","",164,N],[11,"from","","",164,[[["t"]],["t"]]],[11,"try_from","","",164,[[["u"]],["result"]]],[11,"borrow","","",164,[[["self"]],["t"]]],[11,"get_type_id","","",164,[[["self"]],["typeid"]]],[11,"try_into","","",164,[[["self"]],["result"]]],[11,"borrow_mut","","",164,[[["self"]],["t"]]],[11,"span","","",165,[[["self"]],["span"]]],[11,"into","","",165,[[["self"]],["u"]]],[11,"to_owned","","",165,[[["self"]],["t"]]],[11,"clone_into","","",165,N],[11,"from","","",165,[[["t"]],["t"]]],[11,"try_from","","",165,[[["u"]],["result"]]],[11,"borrow","","",165,[[["self"]],["t"]]],[11,"get_type_id","","",165,[[["self"]],["typeid"]]],[11,"try_into","","",165,[[["self"]],["result"]]],[11,"borrow_mut","","",165,[[["self"]],["t"]]],[11,"span","","",166,[[["self"]],["span"]]],[11,"into","","",166,[[["self"]],["u"]]],[11,"to_owned","","",166,[[["self"]],["t"]]],[11,"clone_into","","",166,N],[11,"from","","",166,[[["t"]],["t"]]],[11,"try_from","","",166,[[["u"]],["result"]]],[11,"borrow","","",166,[[["self"]],["t"]]],[11,"get_type_id","","",166,[[["self"]],["typeid"]]],[11,"try_into","","",166,[[["self"]],["result"]]],[11,"borrow_mut","","",166,[[["self"]],["t"]]],[11,"span","","",167,[[["self"]],["span"]]],[11,"into","","",167,[[["self"]],["u"]]],[11,"to_owned","","",167,[[["self"]],["t"]]],[11,"clone_into","","",167,N],[11,"from","","",167,[[["t"]],["t"]]],[11,"try_from","","",167,[[["u"]],["result"]]],[11,"borrow","","",167,[[["self"]],["t"]]],[11,"get_type_id","","",167,[[["self"]],["typeid"]]],[11,"try_into","","",167,[[["self"]],["result"]]],[11,"borrow_mut","","",167,[[["self"]],["t"]]],[11,"span","","",168,[[["self"]],["span"]]],[11,"into","","",168,[[["self"]],["u"]]],[11,"to_owned","","",168,[[["self"]],["t"]]],[11,"clone_into","","",168,N],[11,"from","","",168,[[["t"]],["t"]]],[11,"try_from","","",168,[[["u"]],["result"]]],[11,"borrow","","",168,[[["self"]],["t"]]],[11,"get_type_id","","",168,[[["self"]],["typeid"]]],[11,"try_into","","",168,[[["self"]],["result"]]],[11,"borrow_mut","","",168,[[["self"]],["t"]]],[11,"span","","",169,[[["self"]],["span"]]],[11,"into","","",169,[[["self"]],["u"]]],[11,"to_owned","","",169,[[["self"]],["t"]]],[11,"clone_into","","",169,N],[11,"from","","",169,[[["t"]],["t"]]],[11,"try_from","","",169,[[["u"]],["result"]]],[11,"borrow","","",169,[[["self"]],["t"]]],[11,"get_type_id","","",169,[[["self"]],["typeid"]]],[11,"try_into","","",169,[[["self"]],["result"]]],[11,"borrow_mut","","",169,[[["self"]],["t"]]],[11,"span","","",170,[[["self"]],["span"]]],[11,"into","","",170,[[["self"]],["u"]]],[11,"to_owned","","",170,[[["self"]],["t"]]],[11,"clone_into","","",170,N],[11,"from","","",170,[[["t"]],["t"]]],[11,"try_from","","",170,[[["u"]],["result"]]],[11,"borrow","","",170,[[["self"]],["t"]]],[11,"get_type_id","","",170,[[["self"]],["typeid"]]],[11,"try_into","","",170,[[["self"]],["result"]]],[11,"borrow_mut","","",170,[[["self"]],["t"]]],[11,"span","","",171,[[["self"]],["span"]]],[11,"into","","",171,[[["self"]],["u"]]],[11,"to_owned","","",171,[[["self"]],["t"]]],[11,"clone_into","","",171,N],[11,"from","","",171,[[["t"]],["t"]]],[11,"try_from","","",171,[[["u"]],["result"]]],[11,"borrow","","",171,[[["self"]],["t"]]],[11,"get_type_id","","",171,[[["self"]],["typeid"]]],[11,"try_into","","",171,[[["self"]],["result"]]],[11,"borrow_mut","","",171,[[["self"]],["t"]]],[11,"span","","",172,[[["self"]],["span"]]],[11,"into","","",172,[[["self"]],["u"]]],[11,"to_owned","","",172,[[["self"]],["t"]]],[11,"clone_into","","",172,N],[11,"from","","",172,[[["t"]],["t"]]],[11,"try_from","","",172,[[["u"]],["result"]]],[11,"borrow","","",172,[[["self"]],["t"]]],[11,"get_type_id","","",172,[[["self"]],["typeid"]]],[11,"try_into","","",172,[[["self"]],["result"]]],[11,"borrow_mut","","",172,[[["self"]],["t"]]],[11,"span","","",173,[[["self"]],["span"]]],[11,"into","","",173,[[["self"]],["u"]]],[11,"to_owned","","",173,[[["self"]],["t"]]],[11,"clone_into","","",173,N],[11,"from","","",173,[[["t"]],["t"]]],[11,"try_from","","",173,[[["u"]],["result"]]],[11,"borrow","","",173,[[["self"]],["t"]]],[11,"get_type_id","","",173,[[["self"]],["typeid"]]],[11,"try_into","","",173,[[["self"]],["result"]]],[11,"borrow_mut","","",173,[[["self"]],["t"]]],[11,"span","","",174,[[["self"]],["span"]]],[11,"into","","",174,[[["self"]],["u"]]],[11,"to_owned","","",174,[[["self"]],["t"]]],[11,"clone_into","","",174,N],[11,"from","","",174,[[["t"]],["t"]]],[11,"try_from","","",174,[[["u"]],["result"]]],[11,"borrow","","",174,[[["self"]],["t"]]],[11,"get_type_id","","",174,[[["self"]],["typeid"]]],[11,"try_into","","",174,[[["self"]],["result"]]],[11,"borrow_mut","","",174,[[["self"]],["t"]]],[11,"span","","",175,[[["self"]],["span"]]],[11,"into","","",175,[[["self"]],["u"]]],[11,"to_owned","","",175,[[["self"]],["t"]]],[11,"clone_into","","",175,N],[11,"from","","",175,[[["t"]],["t"]]],[11,"try_from","","",175,[[["u"]],["result"]]],[11,"borrow","","",175,[[["self"]],["t"]]],[11,"get_type_id","","",175,[[["self"]],["typeid"]]],[11,"try_into","","",175,[[["self"]],["result"]]],[11,"borrow_mut","","",175,[[["self"]],["t"]]],[11,"span","","",176,[[["self"]],["span"]]],[11,"into","","",176,[[["self"]],["u"]]],[11,"to_owned","","",176,[[["self"]],["t"]]],[11,"clone_into","","",176,N],[11,"from","","",176,[[["t"]],["t"]]],[11,"try_from","","",176,[[["u"]],["result"]]],[11,"borrow","","",176,[[["self"]],["t"]]],[11,"get_type_id","","",176,[[["self"]],["typeid"]]],[11,"try_into","","",176,[[["self"]],["result"]]],[11,"borrow_mut","","",176,[[["self"]],["t"]]],[11,"into","syn::buffer","",186,[[["self"]],["u"]]],[11,"from","","",186,[[["t"]],["t"]]],[11,"try_from","","",186,[[["u"]],["result"]]],[11,"borrow","","",186,[[["self"]],["t"]]],[11,"get_type_id","","",186,[[["self"]],["typeid"]]],[11,"try_into","","",186,[[["self"]],["result"]]],[11,"borrow_mut","","",186,[[["self"]],["t"]]],[11,"into","","",187,[[["self"]],["u"]]],[11,"to_owned","","",187,[[["self"]],["t"]]],[11,"clone_into","","",187,N],[11,"from","","",187,[[["t"]],["t"]]],[11,"try_from","","",187,[[["u"]],["result"]]],[11,"borrow","","",187,[[["self"]],["t"]]],[11,"get_type_id","","",187,[[["self"]],["typeid"]]],[11,"try_into","","",187,[[["self"]],["result"]]],[11,"borrow_mut","","",187,[[["self"]],["t"]]],[11,"span","syn::punctuated","",189,[[["self"]],["span"]]],[11,"into","","",189,[[["self"]],["u"]]],[11,"to_owned","","",189,[[["self"]],["t"]]],[11,"clone_into","","",189,N],[11,"from","","",189,[[["t"]],["t"]]],[11,"into_iter","","",189,[[["self"]],["i"]]],[11,"try_from","","",189,[[["u"]],["result"]]],[11,"borrow","","",189,[[["self"]],["t"]]],[11,"get_type_id","","",189,[[["self"]],["typeid"]]],[11,"try_into","","",189,[[["self"]],["result"]]],[11,"borrow_mut","","",189,[[["self"]],["t"]]],[11,"into","","",226,[[["self"]],["u"]]],[11,"from","","",226,[[["t"]],["t"]]],[11,"into_iter","","",226,[[["self"]],["i"]]],[11,"try_from","","",226,[[["u"]],["result"]]],[11,"borrow","","",226,[[["self"]],["t"]]],[11,"get_type_id","","",226,[[["self"]],["typeid"]]],[11,"try_into","","",226,[[["self"]],["result"]]],[11,"borrow_mut","","",226,[[["self"]],["t"]]],[11,"into","","",227,[[["self"]],["u"]]],[11,"from","","",227,[[["t"]],["t"]]],[11,"into_iter","","",227,[[["self"]],["i"]]],[11,"try_from","","",227,[[["u"]],["result"]]],[11,"borrow","","",227,[[["self"]],["t"]]],[11,"get_type_id","","",227,[[["self"]],["typeid"]]],[11,"try_into","","",227,[[["self"]],["result"]]],[11,"borrow_mut","","",227,[[["self"]],["t"]]],[11,"into","","",228,[[["self"]],["u"]]],[11,"from","","",228,[[["t"]],["t"]]],[11,"into_iter","","",228,[[["self"]],["i"]]],[11,"try_from","","",228,[[["u"]],["result"]]],[11,"borrow","","",228,[[["self"]],["t"]]],[11,"get_type_id","","",228,[[["self"]],["typeid"]]],[11,"try_into","","",228,[[["self"]],["result"]]],[11,"borrow_mut","","",228,[[["self"]],["t"]]],[11,"into","","",229,[[["self"]],["u"]]],[11,"from","","",229,[[["t"]],["t"]]],[11,"into_iter","","",229,[[["self"]],["i"]]],[11,"try_from","","",229,[[["u"]],["result"]]],[11,"borrow","","",229,[[["self"]],["t"]]],[11,"get_type_id","","",229,[[["self"]],["typeid"]]],[11,"try_into","","",229,[[["self"]],["result"]]],[11,"borrow_mut","","",229,[[["self"]],["t"]]],[11,"into","","",230,[[["self"]],["u"]]],[11,"from","","",230,[[["t"]],["t"]]],[11,"into_iter","","",230,[[["self"]],["i"]]],[11,"try_from","","",230,[[["u"]],["result"]]],[11,"borrow","","",230,[[["self"]],["t"]]],[11,"get_type_id","","",230,[[["self"]],["typeid"]]],[11,"try_into","","",230,[[["self"]],["result"]]],[11,"borrow_mut","","",230,[[["self"]],["t"]]],[11,"into","","",231,[[["self"]],["u"]]],[11,"from","","",231,[[["t"]],["t"]]],[11,"into_iter","","",231,[[["self"]],["i"]]],[11,"try_from","","",231,[[["u"]],["result"]]],[11,"borrow","","",231,[[["self"]],["t"]]],[11,"get_type_id","","",231,[[["self"]],["typeid"]]],[11,"try_into","","",231,[[["self"]],["result"]]],[11,"borrow_mut","","",231,[[["self"]],["t"]]],[11,"span","","",188,[[["self"]],["span"]]],[11,"into","","",188,[[["self"]],["u"]]],[11,"from","","",188,[[["t"]],["t"]]],[11,"try_from","","",188,[[["u"]],["result"]]],[11,"borrow","","",188,[[["self"]],["t"]]],[11,"get_type_id","","",188,[[["self"]],["typeid"]]],[11,"try_into","","",188,[[["self"]],["result"]]],[11,"borrow_mut","","",188,[[["self"]],["t"]]],[11,"into","syn::synom","",232,[[["self"]],["u"]]],[11,"to_string","","",232,[[["self"]],["string"]]],[11,"from","","",232,[[["t"]],["t"]]],[11,"try_from","","",232,[[["u"]],["result"]]],[11,"borrow","","",232,[[["self"]],["t"]]],[11,"get_type_id","","",232,[[["self"]],["typeid"]]],[11,"try_into","","",232,[[["self"]],["result"]]],[11,"borrow_mut","","",232,[[["self"]],["t"]]],[11,"parse","syn::token","",85,[[["cursor"]],["presult",["underscore"]]]],[11,"description","","",85,[[],["option",["str"]]]],[11,"parse","","",86,[[["cursor"]],["presult",["add"]]]],[11,"description","","",86,[[],["option",["str"]]]],[11,"parse","","",87,[[["cursor"]],["presult",["addeq"]]]],[11,"description","","",87,[[],["option",["str"]]]],[11,"parse","","",88,[[["cursor"]],["presult",["and"]]]],[11,"description","","",88,[[],["option",["str"]]]],[11,"parse","","",89,[[["cursor"]],["presult",["andand"]]]],[11,"description","","",89,[[],["option",["str"]]]],[11,"parse","","",90,[[["cursor"]],["presult",["andeq"]]]],[11,"description","","",90,[[],["option",["str"]]]],[11,"parse","","",91,[[["cursor"]],["presult",["at"]]]],[11,"description","","",91,[[],["option",["str"]]]],[11,"parse","","",92,[[["cursor"]],["presult",["bang"]]]],[11,"description","","",92,[[],["option",["str"]]]],[11,"parse","","",93,[[["cursor"]],["presult",["caret"]]]],[11,"description","","",93,[[],["option",["str"]]]],[11,"parse","","",94,[[["cursor"]],["presult",["careteq"]]]],[11,"description","","",94,[[],["option",["str"]]]],[11,"parse","","",95,[[["cursor"]],["presult",["colon"]]]],[11,"description","","",95,[[],["option",["str"]]]],[11,"parse","","",96,[[["cursor"]],["presult",["colon2"]]]],[11,"description","","",96,[[],["option",["str"]]]],[11,"parse","","",97,[[["cursor"]],["presult",["comma"]]]],[11,"description","","",97,[[],["option",["str"]]]],[11,"parse","","",98,[[["cursor"]],["presult",["div"]]]],[11,"description","","",98,[[],["option",["str"]]]],[11,"parse","","",99,[[["cursor"]],["presult",["diveq"]]]],[11,"description","","",99,[[],["option",["str"]]]],[11,"parse","","",100,[[["cursor"]],["presult",["dollar"]]]],[11,"description","","",100,[[],["option",["str"]]]],[11,"parse","","",101,[[["cursor"]],["presult",["dot"]]]],[11,"description","","",101,[[],["option",["str"]]]],[11,"parse","","",102,[[["cursor"]],["presult",["dot2"]]]],[11,"description","","",102,[[],["option",["str"]]]],[11,"parse","","",103,[[["cursor"]],["presult",["dot3"]]]],[11,"description","","",103,[[],["option",["str"]]]],[11,"parse","","",104,[[["cursor"]],["presult",["dotdoteq"]]]],[11,"description","","",104,[[],["option",["str"]]]],[11,"parse","","",105,[[["cursor"]],["presult",["eq"]]]],[11,"description","","",105,[[],["option",["str"]]]],[11,"parse","","",106,[[["cursor"]],["presult",["eqeq"]]]],[11,"description","","",106,[[],["option",["str"]]]],[11,"parse","","",107,[[["cursor"]],["presult",["ge"]]]],[11,"description","","",107,[[],["option",["str"]]]],[11,"parse","","",108,[[["cursor"]],["presult",["gt"]]]],[11,"description","","",108,[[],["option",["str"]]]],[11,"parse","","",109,[[["cursor"]],["presult",["le"]]]],[11,"description","","",109,[[],["option",["str"]]]],[11,"parse","","",110,[[["cursor"]],["presult",["lt"]]]],[11,"description","","",110,[[],["option",["str"]]]],[11,"parse","","",111,[[["cursor"]],["presult",["muleq"]]]],[11,"description","","",111,[[],["option",["str"]]]],[11,"parse","","",112,[[["cursor"]],["presult",["ne"]]]],[11,"description","","",112,[[],["option",["str"]]]],[11,"parse","","",113,[[["cursor"]],["presult",["or"]]]],[11,"description","","",113,[[],["option",["str"]]]],[11,"parse","","",114,[[["cursor"]],["presult",["oreq"]]]],[11,"description","","",114,[[],["option",["str"]]]],[11,"parse","","",115,[[["cursor"]],["presult",["oror"]]]],[11,"description","","",115,[[],["option",["str"]]]],[11,"parse","","",116,[[["cursor"]],["presult",["pound"]]]],[11,"description","","",116,[[],["option",["str"]]]],[11,"parse","","",117,[[["cursor"]],["presult",["question"]]]],[11,"description","","",117,[[],["option",["str"]]]],[11,"parse","","",118,[[["cursor"]],["presult",["rarrow"]]]],[11,"description","","",118,[[],["option",["str"]]]],[11,"parse","","",119,[[["cursor"]],["presult",["larrow"]]]],[11,"description","","",119,[[],["option",["str"]]]],[11,"parse","","",120,[[["cursor"]],["presult",["rem"]]]],[11,"description","","",120,[[],["option",["str"]]]],[11,"parse","","",121,[[["cursor"]],["presult",["remeq"]]]],[11,"description","","",121,[[],["option",["str"]]]],[11,"parse","","",122,[[["cursor"]],["presult",["fatarrow"]]]],[11,"description","","",122,[[],["option",["str"]]]],[11,"parse","","",123,[[["cursor"]],["presult",["semi"]]]],[11,"description","","",123,[[],["option",["str"]]]],[11,"parse","","",124,[[["cursor"]],["presult",["shl"]]]],[11,"description","","",124,[[],["option",["str"]]]],[11,"parse","","",125,[[["cursor"]],["presult",["shleq"]]]],[11,"description","","",125,[[],["option",["str"]]]],[11,"parse","","",126,[[["cursor"]],["presult",["shr"]]]],[11,"description","","",126,[[],["option",["str"]]]],[11,"parse","","",127,[[["cursor"]],["presult",["shreq"]]]],[11,"description","","",127,[[],["option",["str"]]]],[11,"parse","","",128,[[["cursor"]],["presult",["star"]]]],[11,"description","","",128,[[],["option",["str"]]]],[11,"parse","","",129,[[["cursor"]],["presult",["sub"]]]],[11,"description","","",129,[[],["option",["str"]]]],[11,"parse","","",130,[[["cursor"]],["presult",["subeq"]]]],[11,"description","","",130,[[],["option",["str"]]]],[11,"parse","","",135,[[["cursor"]],["presult",["as"]]]],[11,"description","","",135,[[],["option",["str"]]]],[11,"parse","","",136,[[["cursor"]],["presult",["auto"]]]],[11,"description","","",136,[[],["option",["str"]]]],[11,"parse","","",137,[[["cursor"]],["presult",["box"]]]],[11,"description","","",137,[[],["option",["str"]]]],[11,"parse","","",138,[[["cursor"]],["presult",["break"]]]],[11,"description","","",138,[[],["option",["str"]]]],[11,"parse","","",139,[[["cursor"]],["presult",["capself"]]]],[11,"description","","",139,[[],["option",["str"]]]],[11,"parse","","",140,[[["cursor"]],["presult",["catch"]]]],[11,"description","","",140,[[],["option",["str"]]]],[11,"parse","","",141,[[["cursor"]],["presult",["const"]]]],[11,"description","","",141,[[],["option",["str"]]]],[11,"parse","","",142,[[["cursor"]],["presult",["continue"]]]],[11,"description","","",142,[[],["option",["str"]]]],[11,"parse","","",143,[[["cursor"]],["presult",["crate"]]]],[11,"description","","",143,[[],["option",["str"]]]],[11,"parse","","",144,[[["cursor"]],["presult",["default"]]]],[11,"description","","",144,[[],["option",["str"]]]],[11,"parse","","",145,[[["cursor"]],["presult",["do"]]]],[11,"description","","",145,[[],["option",["str"]]]],[11,"parse","","",146,[[["cursor"]],["presult",["dyn"]]]],[11,"description","","",146,[[],["option",["str"]]]],[11,"parse","","",147,[[["cursor"]],["presult",["else"]]]],[11,"description","","",147,[[],["option",["str"]]]],[11,"parse","","",148,[[["cursor"]],["presult",["enum"]]]],[11,"description","","",148,[[],["option",["str"]]]],[11,"parse","","",149,[[["cursor"]],["presult",["extern"]]]],[11,"description","","",149,[[],["option",["str"]]]],[11,"parse","","",150,[[["cursor"]],["presult",["fn"]]]],[11,"description","","",150,[[],["option",["str"]]]],[11,"parse","","",151,[[["cursor"]],["presult",["for"]]]],[11,"description","","",151,[[],["option",["str"]]]],[11,"parse","","",152,[[["cursor"]],["presult",["if"]]]],[11,"description","","",152,[[],["option",["str"]]]],[11,"parse","","",153,[[["cursor"]],["presult",["impl"]]]],[11,"description","","",153,[[],["option",["str"]]]],[11,"parse","","",154,[[["cursor"]],["presult",["in"]]]],[11,"description","","",154,[[],["option",["str"]]]],[11,"parse","","",155,[[["cursor"]],["presult",["let"]]]],[11,"description","","",155,[[],["option",["str"]]]],[11,"parse","","",156,[[["cursor"]],["presult",["loop"]]]],[11,"description","","",156,[[],["option",["str"]]]],[11,"parse","","",157,[[["cursor"]],["presult",["macro"]]]],[11,"description","","",157,[[],["option",["str"]]]],[11,"parse","","",158,[[["cursor"]],["presult",["match"]]]],[11,"description","","",158,[[],["option",["str"]]]],[11,"parse","","",159,[[["cursor"]],["presult",["mod"]]]],[11,"description","","",159,[[],["option",["str"]]]],[11,"parse","","",160,[[["cursor"]],["presult",["move"]]]],[11,"description","","",160,[[],["option",["str"]]]],[11,"parse","","",161,[[["cursor"]],["presult",["mut"]]]],[11,"description","","",161,[[],["option",["str"]]]],[11,"parse","","",162,[[["cursor"]],["presult",["pub"]]]],[11,"description","","",162,[[],["option",["str"]]]],[11,"parse","","",163,[[["cursor"]],["presult",["ref"]]]],[11,"description","","",163,[[],["option",["str"]]]],[11,"parse","","",164,[[["cursor"]],["presult",["return"]]]],[11,"description","","",164,[[],["option",["str"]]]],[11,"parse","","",165,[[["cursor"]],["presult",["self_"]]]],[11,"description","","",165,[[],["option",["str"]]]],[11,"parse","","",166,[[["cursor"]],["presult",["static"]]]],[11,"description","","",166,[[],["option",["str"]]]],[11,"parse","","",167,[[["cursor"]],["presult",["struct"]]]],[11,"description","","",167,[[],["option",["str"]]]],[11,"parse","","",168,[[["cursor"]],["presult",["super"]]]],[11,"description","","",168,[[],["option",["str"]]]],[11,"parse","","",169,[[["cursor"]],["presult",["trait"]]]],[11,"description","","",169,[[],["option",["str"]]]],[11,"parse","","",170,[[["cursor"]],["presult",["type"]]]],[11,"description","","",170,[[],["option",["str"]]]],[11,"parse","","",171,[[["cursor"]],["presult",["union"]]]],[11,"description","","",171,[[],["option",["str"]]]],[11,"parse","","",172,[[["cursor"]],["presult",["unsafe"]]]],[11,"description","","",172,[[],["option",["str"]]]],[11,"parse","","",173,[[["cursor"]],["presult",["use"]]]],[11,"description","","",173,[[],["option",["str"]]]],[11,"parse","","",174,[[["cursor"]],["presult",["where"]]]],[11,"description","","",174,[[],["option",["str"]]]],[11,"parse","","",175,[[["cursor"]],["presult",["while"]]]],[11,"description","","",175,[[],["option",["str"]]]],[11,"parse","","",176,[[["cursor"]],["presult",["yield"]]]],[11,"description","","",176,[[],["option",["str"]]]],[11,"parse","syn","",6,[[["cursor"]],["presult"]]],[11,"description","","",6,[[],["option",["str"]]]],[11,"parse","","",4,[[["cursor"]],["presult"]]],[11,"description","","",4,[[],["option",["str"]]]],[11,"parse","","",5,[[["cursor"]],["presult"]]],[11,"description","","",5,[[],["option",["str"]]]],[11,"parse","","",65,[[["cursor"]],["presult"]]],[11,"description","","",65,[[],["option",["str"]]]],[11,"parse","","",66,[[["cursor"]],["presult"]]],[11,"description","","",66,[[],["option",["str"]]]],[11,"parse","","",14,[[["cursor"]],["presult"]]],[11,"description","","",14,[[],["option",["str"]]]],[11,"parse","","",15,[[["cursor"]],["presult"]]],[11,"description","","",15,[[],["option",["str"]]]],[11,"parse","","",16,[[["cursor"]],["presult"]]],[11,"description","","",16,[[],["option",["str"]]]],[11,"parse","","",22,[[["cursor"]],["presult"]]],[11,"description","","",22,[[],["option",["str"]]]],[11,"parse","","",68,[[["cursor"]],["presult"]]],[11,"description","","",68,[[],["option",["str"]]]],[11,"parse","","",23,[[["cursor"]],["presult"]]],[11,"description","","",23,[[],["option",["str"]]]],[11,"parse","","",20,[[["cursor"]],["presult"]]],[11,"description","","",20,[[],["option",["str"]]]],[11,"parse","","",28,[[["cursor"]],["presult"]]],[11,"description","","",28,[[],["option",["str"]]]],[11,"parse","","",70,[[["cursor"]],["presult"]]],[11,"description","","",70,[[],["option",["str"]]]],[11,"parse","","",27,[[["cursor"]],["presult"]]],[11,"description","","",27,[[],["option",["str"]]]],[11,"parse","","",69,[[["cursor"]],["presult"]]],[11,"description","","",69,[[],["option",["str"]]]],[11,"parse","","",21,[[["cursor"]],["presult"]]],[11,"description","","",21,[[],["option",["str"]]]],[11,"parse","","",29,[[["cursor"]],["presult"]]],[11,"description","","",29,[[],["option",["str"]]]],[11,"parse","","",71,[[["cursor"]],["presult"]]],[11,"description","","",71,[[],["option",["str"]]]],[11,"parse","","",178,[[["cursor"]],["presult"]]],[11,"description","","",178,[[],["option",["str"]]]],[11,"parse","","",179,[[["cursor"]],["presult"]]],[11,"description","","",179,[[],["option",["str"]]]],[11,"parse","","",74,[[["cursor"]],["presult"]]],[11,"description","","",74,[[],["option",["str"]]]],[11,"parse","","",180,[[["cursor"]],["presult"]]],[11,"description","","",180,[[],["option",["str"]]]],[11,"parse","","",181,[[["cursor"]],["presult"]]],[11,"description","","",181,[[],["option",["str"]]]],[11,"parse","","",182,[[["cursor"]],["presult"]]],[11,"description","","",182,[[],["option",["str"]]]],[11,"parse","","",183,[[["cursor"]],["presult"]]],[11,"description","","",183,[[],["option",["str"]]]],[11,"parse","","",184,[[["cursor"]],["presult"]]],[11,"description","","",184,[[],["option",["str"]]]],[11,"parse","","",185,[[["cursor"]],["presult"]]],[11,"description","","",185,[[],["option",["str"]]]],[11,"parse","","",30,[[["cursor"]],["presult"]]],[11,"description","","",30,[[],["option",["str"]]]],[11,"parse","","",32,[[["cursor"]],["presult"]]],[11,"description","","",32,[[],["option",["str"]]]],[11,"parse","","",36,[[["cursor"]],["presult"]]],[11,"description","","",36,[[],["option",["str"]]]],[11,"parse","","",79,[[["cursor"]],["presult"]]],[11,"description","","",79,[[],["option",["str"]]]],[11,"parse","","",82,[[["cursor"]],["presult"]]],[11,"description","","",82,[[],["option",["str"]]]],[11,"parse","","",50,[[["cursor"]],["presult"]]],[11,"description","","",50,[[],["option",["str"]]]],[11,"parse","","",39,[[["cursor"]],["presult"]]],[11,"description","","",39,[[],["option",["str"]]]],[11,"parse","","",48,[[["cursor"]],["presult"]]],[11,"description","","",48,[[],["option",["str"]]]],[11,"parse","","",49,[[["cursor"]],["presult"]]],[11,"description","","",49,[[],["option",["str"]]]],[11,"parse","","",40,[[["cursor"]],["presult"]]],[11,"description","","",40,[[],["option",["str"]]]],[11,"parse","","",45,[[["cursor"]],["presult"]]],[11,"description","","",45,[[],["option",["str"]]]],[11,"parse","","",43,[[["cursor"]],["presult"]]],[11,"description","","",43,[[],["option",["str"]]]],[11,"parse","","",52,[[["cursor"]],["presult"]]],[11,"description","","",52,[[],["option",["str"]]]],[11,"parse","","",44,[[["cursor"]],["presult"]]],[11,"description","","",44,[[],["option",["str"]]]],[11,"parse","","",47,[[["cursor"]],["presult"]]],[11,"description","","",47,[[],["option",["str"]]]],[11,"parse","","",81,[[["cursor"]],["presult"]]],[11,"description","","",81,[[],["option",["str"]]]],[11,"parse","","",51,[[["cursor"]],["presult"]]],[11,"description","","",51,[[],["option",["str"]]]],[11,"parse","","",42,[[["cursor"]],["presult"]]],[11,"description","","",42,[[],["option",["str"]]]],[11,"parse","","",41,[[["cursor"]],["presult"]]],[11,"description","","",41,[[],["option",["str"]]]],[11,"parse","","",46,[[["cursor"]],["presult"]]],[11,"description","","",46,[[],["option",["str"]]]],[11,"parse","","",38,[[["cursor"]],["presult"]]],[11,"description","","",38,[[],["option",["str"]]]],[11,"parse","","",80,[[["cursor"]],["presult"]]],[11,"description","","",80,[[],["option",["str"]]]],[11,"parse","","",37,[[["cursor"]],["presult"]]],[11,"description","","",37,[[],["option",["str"]]]],[11,"parse","","",58,[[["cursor"]],["presult"]]],[11,"description","","",58,[[],["option",["str"]]]],[11,"parse","","",83,[[["cursor"]],["presult"]]],[11,"parse","","",55,[[["cursor"]],["presult"]]],[11,"description","","",55,[[],["option",["str"]]]],[11,"parse","","",57,[[["cursor"]],["presult"]]],[11,"description","","",57,[[],["option",["str"]]]],[11,"parse","","",59,[[["cursor"]],["presult"]]],[11,"description","","",59,[[],["option",["str"]]]],[11,"parse","","",56,[[["cursor"]],["presult"]]],[11,"description","","",56,[[],["option",["str"]]]],[11,"next","syn::punctuated","",226,[[["self"]],["option"]]],[11,"next","","",227,[[["self"]],["option"]]],[11,"next","","",228,[[["self"]],["option"]]],[11,"next","","",229,[[["self"]],["option"]]],[11,"next","","",230,[[["self"]],["option"]]],[11,"next","","",231,[[["self"]],["option"]]],[11,"len","","",226,[[["self"]],["usize"]]],[11,"len","","",227,[[["self"]],["usize"]]],[11,"len","","",228,[[["self"]],["usize"]]],[11,"len","","",229,[[["self"]],["usize"]]],[11,"len","","",230,[[["self"]],["usize"]]],[11,"len","","",231,[[["self"]],["usize"]]],[11,"partial_cmp","syn","",178,[[["self"],["ident"]],["option",["ordering"]]]],[11,"partial_cmp","","",179,[[["self"],["lifetime"]],["option",["ordering"]]]],[11,"default","syn::token","",85,[[],["self"]]],[11,"default","","",86,[[],["self"]]],[11,"default","","",87,[[],["self"]]],[11,"default","","",88,[[],["self"]]],[11,"default","","",89,[[],["self"]]],[11,"default","","",90,[[],["self"]]],[11,"default","","",91,[[],["self"]]],[11,"default","","",92,[[],["self"]]],[11,"default","","",93,[[],["self"]]],[11,"default","","",94,[[],["self"]]],[11,"default","","",95,[[],["self"]]],[11,"default","","",96,[[],["self"]]],[11,"default","","",97,[[],["self"]]],[11,"default","","",98,[[],["self"]]],[11,"default","","",99,[[],["self"]]],[11,"default","","",100,[[],["self"]]],[11,"default","","",101,[[],["self"]]],[11,"default","","",102,[[],["self"]]],[11,"default","","",103,[[],["self"]]],[11,"default","","",104,[[],["self"]]],[11,"default","","",105,[[],["self"]]],[11,"default","","",106,[[],["self"]]],[11,"default","","",107,[[],["self"]]],[11,"default","","",108,[[],["self"]]],[11,"default","","",109,[[],["self"]]],[11,"default","","",110,[[],["self"]]],[11,"default","","",111,[[],["self"]]],[11,"default","","",112,[[],["self"]]],[11,"default","","",113,[[],["self"]]],[11,"default","","",114,[[],["self"]]],[11,"default","","",115,[[],["self"]]],[11,"default","","",116,[[],["self"]]],[11,"default","","",117,[[],["self"]]],[11,"default","","",118,[[],["self"]]],[11,"default","","",119,[[],["self"]]],[11,"default","","",120,[[],["self"]]],[11,"default","","",121,[[],["self"]]],[11,"default","","",122,[[],["self"]]],[11,"default","","",123,[[],["self"]]],[11,"default","","",124,[[],["self"]]],[11,"default","","",125,[[],["self"]]],[11,"default","","",126,[[],["self"]]],[11,"default","","",127,[[],["self"]]],[11,"default","","",128,[[],["self"]]],[11,"default","","",129,[[],["self"]]],[11,"default","","",130,[[],["self"]]],[11,"default","","",131,[[],["self"]]],[11,"default","","",132,[[],["self"]]],[11,"default","","",133,[[],["self"]]],[11,"default","","",134,[[],["self"]]],[11,"default","","",135,[[],["self"]]],[11,"default","","",136,[[],["self"]]],[11,"default","","",137,[[],["self"]]],[11,"default","","",138,[[],["self"]]],[11,"default","","",139,[[],["self"]]],[11,"default","","",140,[[],["self"]]],[11,"default","","",141,[[],["self"]]],[11,"default","","",142,[[],["self"]]],[11,"default","","",143,[[],["self"]]],[11,"default","","",144,[[],["self"]]],[11,"default","","",145,[[],["self"]]],[11,"default","","",146,[[],["self"]]],[11,"default","","",147,[[],["self"]]],[11,"default","","",148,[[],["self"]]],[11,"default","","",149,[[],["self"]]],[11,"default","","",150,[[],["self"]]],[11,"default","","",151,[[],["self"]]],[11,"default","","",152,[[],["self"]]],[11,"default","","",153,[[],["self"]]],[11,"default","","",154,[[],["self"]]],[11,"default","","",155,[[],["self"]]],[11,"default","","",156,[[],["self"]]],[11,"default","","",157,[[],["self"]]],[11,"default","","",158,[[],["self"]]],[11,"default","","",159,[[],["self"]]],[11,"default","","",160,[[],["self"]]],[11,"default","","",161,[[],["self"]]],[11,"default","","",162,[[],["self"]]],[11,"default","","",163,[[],["self"]]],[11,"default","","",164,[[],["self"]]],[11,"default","","",165,[[],["self"]]],[11,"default","","",166,[[],["self"]]],[11,"default","","",167,[[],["self"]]],[11,"default","","",168,[[],["self"]]],[11,"default","","",169,[[],["self"]]],[11,"default","","",170,[[],["self"]]],[11,"default","","",171,[[],["self"]]],[11,"default","","",172,[[],["self"]]],[11,"default","","",173,[[],["self"]]],[11,"default","","",174,[[],["self"]]],[11,"default","","",175,[[],["self"]]],[11,"default","","",176,[[],["self"]]],[11,"default","syn","",22,[[],["generics"]]],[11,"default","","",20,[[],["boundlifetimes"]]],[11,"default","","",84,[[],["self"]]],[11,"default","syn::punctuated","",189,[[],["self"]]],[11,"cmp","syn","",178,[[["self"],["ident"]],["ordering"]]],[11,"cmp","","",179,[[["self"],["lifetime"]],["ordering"]]],[11,"eq","","",178,[[["self"],["t"]],["bool"]]],[11,"eq","","",179,[[["self"],["lifetime"]],["bool"]]],[11,"eq","syn::buffer","",187,[[["self"],["cursor"]],["bool"]]],[11,"ne","","",187,[[["self"],["cursor"]],["bool"]]],[11,"from","syn::token","",85,[[["span"]],["self"]]],[11,"from","","",86,[[["span"]],["self"]]],[11,"from","","",87,[[["span"]],["self"]]],[11,"from","","",88,[[["span"]],["self"]]],[11,"from","","",89,[[["span"]],["self"]]],[11,"from","","",90,[[["span"]],["self"]]],[11,"from","","",91,[[["span"]],["self"]]],[11,"from","","",92,[[["span"]],["self"]]],[11,"from","","",93,[[["span"]],["self"]]],[11,"from","","",94,[[["span"]],["self"]]],[11,"from","","",95,[[["span"]],["self"]]],[11,"from","","",96,[[["span"]],["self"]]],[11,"from","","",97,[[["span"]],["self"]]],[11,"from","","",98,[[["span"]],["self"]]],[11,"from","","",99,[[["span"]],["self"]]],[11,"from","","",100,[[["span"]],["self"]]],[11,"from","","",101,[[["span"]],["self"]]],[11,"from","","",102,[[["span"]],["self"]]],[11,"from","","",103,[[["span"]],["self"]]],[11,"from","","",104,[[["span"]],["self"]]],[11,"from","","",105,[[["span"]],["self"]]],[11,"from","","",106,[[["span"]],["self"]]],[11,"from","","",107,[[["span"]],["self"]]],[11,"from","","",108,[[["span"]],["self"]]],[11,"from","","",109,[[["span"]],["self"]]],[11,"from","","",110,[[["span"]],["self"]]],[11,"from","","",111,[[["span"]],["self"]]],[11,"from","","",112,[[["span"]],["self"]]],[11,"from","","",113,[[["span"]],["self"]]],[11,"from","","",114,[[["span"]],["self"]]],[11,"from","","",115,[[["span"]],["self"]]],[11,"from","","",116,[[["span"]],["self"]]],[11,"from","","",117,[[["span"]],["self"]]],[11,"from","","",118,[[["span"]],["self"]]],[11,"from","","",119,[[["span"]],["self"]]],[11,"from","","",120,[[["span"]],["self"]]],[11,"from","","",121,[[["span"]],["self"]]],[11,"from","","",122,[[["span"]],["self"]]],[11,"from","","",123,[[["span"]],["self"]]],[11,"from","","",124,[[["span"]],["self"]]],[11,"from","","",125,[[["span"]],["self"]]],[11,"from","","",126,[[["span"]],["self"]]],[11,"from","","",127,[[["span"]],["self"]]],[11,"from","","",128,[[["span"]],["self"]]],[11,"from","","",129,[[["span"]],["self"]]],[11,"from","","",130,[[["span"]],["self"]]],[11,"from","","",131,[[["span"]],["self"]]],[11,"from","","",132,[[["span"]],["self"]]],[11,"from","","",133,[[["span"]],["self"]]],[11,"from","","",134,[[["span"]],["self"]]],[11,"from","","",135,[[["span"]],["self"]]],[11,"from","","",136,[[["span"]],["self"]]],[11,"from","","",137,[[["span"]],["self"]]],[11,"from","","",138,[[["span"]],["self"]]],[11,"from","","",139,[[["span"]],["self"]]],[11,"from","","",140,[[["span"]],["self"]]],[11,"from","","",141,[[["span"]],["self"]]],[11,"from","","",142,[[["span"]],["self"]]],[11,"from","","",143,[[["span"]],["self"]]],[11,"from","","",144,[[["span"]],["self"]]],[11,"from","","",145,[[["span"]],["self"]]],[11,"from","","",146,[[["span"]],["self"]]],[11,"from","","",147,[[["span"]],["self"]]],[11,"from","","",148,[[["span"]],["self"]]],[11,"from","","",149,[[["span"]],["self"]]],[11,"from","","",150,[[["span"]],["self"]]],[11,"from","","",151,[[["span"]],["self"]]],[11,"from","","",152,[[["span"]],["self"]]],[11,"from","","",153,[[["span"]],["self"]]],[11,"from","","",154,[[["span"]],["self"]]],[11,"from","","",155,[[["span"]],["self"]]],[11,"from","","",156,[[["span"]],["self"]]],[11,"from","","",157,[[["span"]],["self"]]],[11,"from","","",158,[[["span"]],["self"]]],[11,"from","","",159,[[["span"]],["self"]]],[11,"from","","",160,[[["span"]],["self"]]],[11,"from","","",161,[[["span"]],["self"]]],[11,"from","","",162,[[["span"]],["self"]]],[11,"from","","",163,[[["span"]],["self"]]],[11,"from","","",164,[[["span"]],["self"]]],[11,"from","","",165,[[["span"]],["self"]]],[11,"from","","",166,[[["span"]],["self"]]],[11,"from","","",167,[[["span"]],["self"]]],[11,"from","","",168,[[["span"]],["self"]]],[11,"from","","",169,[[["span"]],["self"]]],[11,"from","","",170,[[["span"]],["self"]]],[11,"from","","",171,[[["span"]],["self"]]],[11,"from","","",172,[[["span"]],["self"]]],[11,"from","","",173,[[["span"]],["self"]]],[11,"from","","",174,[[["span"]],["self"]]],[11,"from","","",175,[[["span"]],["self"]]],[11,"from","","",176,[[["span"]],["self"]]],[11,"from","syn","",62,[[["ident"]],["meta"]]],[11,"from","","",62,[[["metalist"]],["meta"]]],[11,"from","","",62,[[["metanamevalue"]],["meta"]]],[11,"from","","",63,[[["meta"]],["nestedmeta"]]],[11,"from","","",63,[[["lit"]],["nestedmeta"]]],[11,"from","","",64,[[["fieldsnamed"]],["fields"]]],[11,"from","","",64,[[["fieldsunnamed"]],["fields"]]],[11,"from","","",65,[[["vispublic"]],["visibility"]]],[11,"from","","",65,[[["viscrate"]],["visibility"]]],[11,"from","","",65,[[["visrestricted"]],["visibility"]]],[11,"from","","",66,[[["exprbox"]],["expr"]]],[11,"from","","",66,[[["exprinplace"]],["expr"]]],[11,"from","","",66,[[["exprarray"]],["expr"]]],[11,"from","","",66,[[["exprcall"]],["expr"]]],[11,"from","","",66,[[["exprmethodcall"]],["expr"]]],[11,"from","","",66,[[["exprtuple"]],["expr"]]],[11,"from","","",66,[[["exprbinary"]],["expr"]]],[11,"from","","",66,[[["exprunary"]],["expr"]]],[11,"from","","",66,[[["exprlit"]],["expr"]]],[11,"from","","",66,[[["exprcast"]],["expr"]]],[11,"from","","",66,[[["exprtype"]],["expr"]]],[11,"from","","",66,[[["exprif"]],["expr"]]],[11,"from","","",66,[[["expriflet"]],["expr"]]],[11,"from","","",66,[[["exprwhile"]],["expr"]]],[11,"from","","",66,[[["exprwhilelet"]],["expr"]]],[11,"from","","",66,[[["exprforloop"]],["expr"]]],[11,"from","","",66,[[["exprloop"]],["expr"]]],[11,"from","","",66,[[["exprmatch"]],["expr"]]],[11,"from","","",66,[[["exprclosure"]],["expr"]]],[11,"from","","",66,[[["exprunsafe"]],["expr"]]],[11,"from","","",66,[[["exprblock"]],["expr"]]],[11,"from","","",66,[[["exprassign"]],["expr"]]],[11,"from","","",66,[[["exprassignop"]],["expr"]]],[11,"from","","",66,[[["exprfield"]],["expr"]]],[11,"from","","",66,[[["exprindex"]],["expr"]]],[11,"from","","",66,[[["exprrange"]],["expr"]]],[11,"from","","",66,[[["exprpath"]],["expr"]]],[11,"from","","",66,[[["exprreference"]],["expr"]]],[11,"from","","",66,[[["exprbreak"]],["expr"]]],[11,"from","","",66,[[["exprcontinue"]],["expr"]]],[11,"from","","",66,[[["exprreturn"]],["expr"]]],[11,"from","","",66,[[["exprmacro"]],["expr"]]],[11,"from","","",66,[[["exprstruct"]],["expr"]]],[11,"from","","",66,[[["exprrepeat"]],["expr"]]],[11,"from","","",66,[[["exprparen"]],["expr"]]],[11,"from","","",66,[[["exprgroup"]],["expr"]]],[11,"from","","",66,[[["exprtry"]],["expr"]]],[11,"from","","",66,[[["exprcatch"]],["expr"]]],[11,"from","","",66,[[["expryield"]],["expr"]]],[11,"from","","",66,[[["exprverbatim"]],["expr"]]],[11,"from","","",19,[[["usize"]],["index"]]],[11,"from","","",68,[[["typeparam"]],["genericparam"]]],[11,"from","","",68,[[["lifetimedef"]],["genericparam"]]],[11,"from","","",68,[[["constparam"]],["genericparam"]]],[11,"from","","",28,[[["ident"]],["self"]]],[11,"from","","",70,[[["traitbound"]],["typeparambound"]]],[11,"from","","",70,[[["lifetime"]],["typeparambound"]]],[11,"from","","",71,[[["predicatetype"]],["wherepredicate"]]],[11,"from","","",71,[[["predicatelifetime"]],["wherepredicate"]]],[11,"from","","",71,[[["predicateeq"]],["wherepredicate"]]],[11,"from","","",178,[[["str"]],["self"]]],[11,"from","","",178,[[["self_"]],["self"]]],[11,"from","","",178,[[["capself"]],["self"]]],[11,"from","","",178,[[["super"]],["self"]]],[11,"from","","",178,[[["crate"]],["self"]]],[11,"from","","",178,[[["cow",["str"]]],["self"]]],[11,"from","","",178,[[["string"]],["self"]]],[11,"from","","",74,[[["litstr"]],["lit"]]],[11,"from","","",74,[[["litbytestr"]],["lit"]]],[11,"from","","",74,[[["litbyte"]],["lit"]]],[11,"from","","",74,[[["litchar"]],["lit"]]],[11,"from","","",74,[[["litint"]],["lit"]]],[11,"from","","",74,[[["litfloat"]],["lit"]]],[11,"from","","",74,[[["litbool"]],["lit"]]],[11,"from","","",74,[[["litverbatim"]],["lit"]]],[11,"from","","",77,[[["datastruct"]],["data"]]],[11,"from","","",77,[[["dataenum"]],["data"]]],[11,"from","","",77,[[["dataunion"]],["data"]]],[11,"from","","",82,[[["typeslice"]],["type"]]],[11,"from","","",82,[[["typearray"]],["type"]]],[11,"from","","",82,[[["typeptr"]],["type"]]],[11,"from","","",82,[[["typereference"]],["type"]]],[11,"from","","",82,[[["typebarefn"]],["type"]]],[11,"from","","",82,[[["typenever"]],["type"]]],[11,"from","","",82,[[["typetuple"]],["type"]]],[11,"from","","",82,[[["typepath"]],["type"]]],[11,"from","","",82,[[["typetraitobject"]],["type"]]],[11,"from","","",82,[[["typeimpltrait"]],["type"]]],[11,"from","","",82,[[["typeparen"]],["type"]]],[11,"from","","",82,[[["typegroup"]],["type"]]],[11,"from","","",82,[[["typeinfer"]],["type"]]],[11,"from","","",82,[[["typemacro"]],["type"]]],[11,"from","","",82,[[["typeverbatim"]],["type"]]],[11,"from","","",58,[[["t"]],["self"]]],[11,"from","","",59,[[["t"]],["self"]]],[11,"as_ref","","",178,[[["self"]],["str"]]],[11,"clone","syn::token","",85,[[["self"]],["underscore"]]],[11,"clone","","",86,[[["self"]],["add"]]],[11,"clone","","",87,[[["self"]],["addeq"]]],[11,"clone","","",88,[[["self"]],["and"]]],[11,"clone","","",89,[[["self"]],["andand"]]],[11,"clone","","",90,[[["self"]],["andeq"]]],[11,"clone","","",91,[[["self"]],["at"]]],[11,"clone","","",92,[[["self"]],["bang"]]],[11,"clone","","",93,[[["self"]],["caret"]]],[11,"clone","","",94,[[["self"]],["careteq"]]],[11,"clone","","",95,[[["self"]],["colon"]]],[11,"clone","","",96,[[["self"]],["colon2"]]],[11,"clone","","",97,[[["self"]],["comma"]]],[11,"clone","","",98,[[["self"]],["div"]]],[11,"clone","","",99,[[["self"]],["diveq"]]],[11,"clone","","",100,[[["self"]],["dollar"]]],[11,"clone","","",101,[[["self"]],["dot"]]],[11,"clone","","",102,[[["self"]],["dot2"]]],[11,"clone","","",103,[[["self"]],["dot3"]]],[11,"clone","","",104,[[["self"]],["dotdoteq"]]],[11,"clone","","",105,[[["self"]],["eq"]]],[11,"clone","","",106,[[["self"]],["eqeq"]]],[11,"clone","","",107,[[["self"]],["ge"]]],[11,"clone","","",108,[[["self"]],["gt"]]],[11,"clone","","",109,[[["self"]],["le"]]],[11,"clone","","",110,[[["self"]],["lt"]]],[11,"clone","","",111,[[["self"]],["muleq"]]],[11,"clone","","",112,[[["self"]],["ne"]]],[11,"clone","","",113,[[["self"]],["or"]]],[11,"clone","","",114,[[["self"]],["oreq"]]],[11,"clone","","",115,[[["self"]],["oror"]]],[11,"clone","","",116,[[["self"]],["pound"]]],[11,"clone","","",117,[[["self"]],["question"]]],[11,"clone","","",118,[[["self"]],["rarrow"]]],[11,"clone","","",119,[[["self"]],["larrow"]]],[11,"clone","","",120,[[["self"]],["rem"]]],[11,"clone","","",121,[[["self"]],["remeq"]]],[11,"clone","","",122,[[["self"]],["fatarrow"]]],[11,"clone","","",123,[[["self"]],["semi"]]],[11,"clone","","",124,[[["self"]],["shl"]]],[11,"clone","","",125,[[["self"]],["shleq"]]],[11,"clone","","",126,[[["self"]],["shr"]]],[11,"clone","","",127,[[["self"]],["shreq"]]],[11,"clone","","",128,[[["self"]],["star"]]],[11,"clone","","",129,[[["self"]],["sub"]]],[11,"clone","","",130,[[["self"]],["subeq"]]],[11,"clone","","",131,[[["self"]],["brace"]]],[11,"clone","","",132,[[["self"]],["bracket"]]],[11,"clone","","",133,[[["self"]],["paren"]]],[11,"clone","","",134,[[["self"]],["group"]]],[11,"clone","","",135,[[["self"]],["as"]]],[11,"clone","","",136,[[["self"]],["auto"]]],[11,"clone","","",137,[[["self"]],["box"]]],[11,"clone","","",138,[[["self"]],["break"]]],[11,"clone","","",139,[[["self"]],["capself"]]],[11,"clone","","",140,[[["self"]],["catch"]]],[11,"clone","","",141,[[["self"]],["const"]]],[11,"clone","","",142,[[["self"]],["continue"]]],[11,"clone","","",143,[[["self"]],["crate"]]],[11,"clone","","",144,[[["self"]],["default"]]],[11,"clone","","",145,[[["self"]],["do"]]],[11,"clone","","",146,[[["self"]],["dyn"]]],[11,"clone","","",147,[[["self"]],["else"]]],[11,"clone","","",148,[[["self"]],["enum"]]],[11,"clone","","",149,[[["self"]],["extern"]]],[11,"clone","","",150,[[["self"]],["fn"]]],[11,"clone","","",151,[[["self"]],["for"]]],[11,"clone","","",152,[[["self"]],["if"]]],[11,"clone","","",153,[[["self"]],["impl"]]],[11,"clone","","",154,[[["self"]],["in"]]],[11,"clone","","",155,[[["self"]],["let"]]],[11,"clone","","",156,[[["self"]],["loop"]]],[11,"clone","","",157,[[["self"]],["macro"]]],[11,"clone","","",158,[[["self"]],["match"]]],[11,"clone","","",159,[[["self"]],["mod"]]],[11,"clone","","",160,[[["self"]],["move"]]],[11,"clone","","",161,[[["self"]],["mut"]]],[11,"clone","","",162,[[["self"]],["pub"]]],[11,"clone","","",163,[[["self"]],["ref"]]],[11,"clone","","",164,[[["self"]],["return"]]],[11,"clone","","",165,[[["self"]],["self_"]]],[11,"clone","","",166,[[["self"]],["static"]]],[11,"clone","","",167,[[["self"]],["struct"]]],[11,"clone","","",168,[[["self"]],["super"]]],[11,"clone","","",169,[[["self"]],["trait"]]],[11,"clone","","",170,[[["self"]],["type"]]],[11,"clone","","",171,[[["self"]],["union"]]],[11,"clone","","",172,[[["self"]],["unsafe"]]],[11,"clone","","",173,[[["self"]],["use"]]],[11,"clone","","",174,[[["self"]],["where"]]],[11,"clone","","",175,[[["self"]],["while"]]],[11,"clone","","",176,[[["self"]],["yield"]]],[11,"clone","syn","",0,[[["self"]],["attribute"]]],[11,"clone","","",61,[[["self"]],["attrstyle"]]],[11,"clone","","",62,[[["self"]],["meta"]]],[11,"clone","","",1,[[["self"]],["metalist"]]],[11,"clone","","",2,[[["self"]],["metanamevalue"]]],[11,"clone","","",63,[[["self"]],["nestedmeta"]]],[11,"clone","","",6,[[["self"]],["variant"]]],[11,"clone","","",64,[[["self"]],["fields"]]],[11,"clone","","",4,[[["self"]],["fieldsnamed"]]],[11,"clone","","",5,[[["self"]],["fieldsunnamed"]]],[11,"clone","","",3,[[["self"]],["field"]]],[11,"clone","","",65,[[["self"]],["visibility"]]],[11,"clone","","",8,[[["self"]],["vispublic"]]],[11,"clone","","",7,[[["self"]],["viscrate"]]],[11,"clone","","",9,[[["self"]],["visrestricted"]]],[11,"clone","","",66,[[["self"]],["expr"]]],[11,"clone","","",197,[[["self"]],["exprbox"]]],[11,"clone","","",207,[[["self"]],["exprinplace"]]],[11,"clone","","",193,[[["self"]],["exprarray"]]],[11,"clone","","",11,[[["self"]],["exprcall"]]],[11,"clone","","",211,[[["self"]],["exprmethodcall"]]],[11,"clone","","",218,[[["self"]],["exprtuple"]]],[11,"clone","","",10,[[["self"]],["exprbinary"]]],[11,"clone","","",17,[[["self"]],["exprunary"]]],[11,"clone","","",14,[[["self"]],["exprlit"]]],[11,"clone","","",12,[[["self"]],["exprcast"]]],[11,"clone","","",219,[[["self"]],["exprtype"]]],[11,"clone","","",205,[[["self"]],["exprif"]]],[11,"clone","","",206,[[["self"]],["expriflet"]]],[11,"clone","","",221,[[["self"]],["exprwhile"]]],[11,"clone","","",222,[[["self"]],["exprwhilelet"]]],[11,"clone","","",203,[[["self"]],["exprforloop"]]],[11,"clone","","",208,[[["self"]],["exprloop"]]],[11,"clone","","",210,[[["self"]],["exprmatch"]]],[11,"clone","","",200,[[["self"]],["exprclosure"]]],[11,"clone","","",220,[[["self"]],["exprunsafe"]]],[11,"clone","","",196,[[["self"]],["exprblock"]]],[11,"clone","","",194,[[["self"]],["exprassign"]]],[11,"clone","","",195,[[["self"]],["exprassignop"]]],[11,"clone","","",202,[[["self"]],["exprfield"]]],[11,"clone","","",13,[[["self"]],["exprindex"]]],[11,"clone","","",212,[[["self"]],["exprrange"]]],[11,"clone","","",16,[[["self"]],["exprpath"]]],[11,"clone","","",213,[[["self"]],["exprreference"]]],[11,"clone","","",198,[[["self"]],["exprbreak"]]],[11,"clone","","",201,[[["self"]],["exprcontinue"]]],[11,"clone","","",215,[[["self"]],["exprreturn"]]],[11,"clone","","",209,[[["self"]],["exprmacro"]]],[11,"clone","","",216,[[["self"]],["exprstruct"]]],[11,"clone","","",214,[[["self"]],["exprrepeat"]]],[11,"clone","","",15,[[["self"]],["exprparen"]]],[11,"clone","","",204,[[["self"]],["exprgroup"]]],[11,"clone","","",217,[[["self"]],["exprtry"]]],[11,"clone","","",199,[[["self"]],["exprcatch"]]],[11,"clone","","",223,[[["self"]],["expryield"]]],[11,"clone","","",18,[[["self"]],["exprverbatim"]]],[11,"clone","","",67,[[["self"]],["member"]]],[11,"clone","","",19,[[["self"]],["index"]]],[11,"clone","","",22,[[["self"]],["generics"]]],[11,"clone","","",68,[[["self"]],["genericparam"]]],[11,"clone","","",28,[[["self"]],["typeparam"]]],[11,"clone","","",23,[[["self"]],["lifetimedef"]]],[11,"clone","","",21,[[["self"]],["constparam"]]],[11,"clone","","",224,[[["self"]],["implgenerics"]]],[11,"clone","","",177,[[["self"]],["typegenerics"]]],[11,"clone","","",225,[[["self"]],["turbofish"]]],[11,"clone","","",20,[[["self"]],["boundlifetimes"]]],[11,"clone","","",70,[[["self"]],["typeparambound"]]],[11,"clone","","",27,[[["self"]],["traitbound"]]],[11,"clone","","",69,[[["self"]],["traitboundmodifier"]]],[11,"clone","","",29,[[["self"]],["whereclause"]]],[11,"clone","","",71,[[["self"]],["wherepredicate"]]],[11,"clone","","",26,[[["self"]],["predicatetype"]]],[11,"clone","","",25,[[["self"]],["predicatelifetime"]]],[11,"clone","","",24,[[["self"]],["predicateeq"]]],[11,"clone","","",178,[[["self"]],["ident"]]],[11,"clone","","",179,[[["self"]],["lifetime"]]],[11,"clone","","",74,[[["self"]],["lit"]]],[11,"clone","","",180,[[["self"]],["litstr"]]],[11,"clone","","",181,[[["self"]],["litbytestr"]]],[11,"clone","","",182,[[["self"]],["litbyte"]]],[11,"clone","","",183,[[["self"]],["litchar"]]],[11,"clone","","",184,[[["self"]],["litint"]]],[11,"clone","","",185,[[["self"]],["litfloat"]]],[11,"clone","","",30,[[["self"]],["litbool"]]],[11,"clone","","",31,[[["self"]],["litverbatim"]]],[11,"clone","","",75,[[["self"]],["strstyle"]]],[11,"clone","","",73,[[["self"]],["intsuffix"]]],[11,"clone","","",72,[[["self"]],["floatsuffix"]]],[11,"clone","","",32,[[["self"]],["macro"]]],[11,"clone","","",76,[[["self"]],["macrodelimiter"]]],[11,"clone","","",36,[[["self"]],["deriveinput"]]],[11,"clone","","",77,[[["self"]],["data"]]],[11,"clone","","",34,[[["self"]],["datastruct"]]],[11,"clone","","",33,[[["self"]],["dataenum"]]],[11,"clone","","",35,[[["self"]],["dataunion"]]],[11,"clone","","",78,[[["self"]],["binop"]]],[11,"clone","","",79,[[["self"]],["unop"]]],[11,"clone","","",82,[[["self"]],["type"]]],[11,"clone","","",50,[[["self"]],["typeslice"]]],[11,"clone","","",39,[[["self"]],["typearray"]]],[11,"clone","","",48,[[["self"]],["typeptr"]]],[11,"clone","","",49,[[["self"]],["typereference"]]],[11,"clone","","",40,[[["self"]],["typebarefn"]]],[11,"clone","","",45,[[["self"]],["typenever"]]],[11,"clone","","",52,[[["self"]],["typetuple"]]],[11,"clone","","",47,[[["self"]],["typepath"]]],[11,"clone","","",51,[[["self"]],["typetraitobject"]]],[11,"clone","","",42,[[["self"]],["typeimpltrait"]]],[11,"clone","","",46,[[["self"]],["typeparen"]]],[11,"clone","","",41,[[["self"]],["typegroup"]]],[11,"clone","","",43,[[["self"]],["typeinfer"]]],[11,"clone","","",44,[[["self"]],["typemacro"]]],[11,"clone","","",53,[[["self"]],["typeverbatim"]]],[11,"clone","","",37,[[["self"]],["abi"]]],[11,"clone","","",38,[[["self"]],["barefnarg"]]],[11,"clone","","",80,[[["self"]],["barefnargname"]]],[11,"clone","","",81,[[["self"]],["returntype"]]],[11,"clone","","",58,[[["self"]],["path"]]],[11,"clone","","",54,[[["self"]],["pathtokens"]]],[11,"clone","","",59,[[["self"]],["pathsegment"]]],[11,"clone","","",84,[[["self"]],["patharguments"]]],[11,"clone","","",83,[[["self"]],["genericargument"]]],[11,"clone","","",55,[[["self"]],["anglebracketedgenericarguments"]]],[11,"clone","","",56,[[["self"]],["binding"]]],[11,"clone","","",57,[[["self"]],["parenthesizedgenericarguments"]]],[11,"clone","","",60,[[["self"]],["qself"]]],[11,"clone","syn::buffer","",187,[[["self"]],["cursor"]]],[11,"clone","syn::punctuated","",189,[[["self"]],["punctuated"]]],[11,"into_iter","","",189,N],[11,"extend","","",189,[[["self"],["i"]]]],[11,"extend","","",189,[[["self"],["i"]]]],[11,"fmt","syn","",178,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",179,[[["self"],["formatter"]],["result"]]],[11,"fmt","syn::synom","",232,[[["self"],["formatter"]],["result"]]],[11,"fmt","syn","",178,[[["self"],["formatter"]],["result"]]],[11,"fmt","syn::synom","",232,[[["self"],["formatter"]],["result"]]],[11,"hash","syn","",178,[[["self"],["h"]]]],[11,"hash","","",179,[[["self"],["h"]]]],[11,"index","syn::punctuated","",189,N],[11,"index_mut","","",189,N],[11,"from_iter","","",189,[[["i"]],["self"]]],[11,"from_iter","","",189,[[["i"]],["self"]]],[11,"description","syn::synom","",232,[[["self"]],["str"]]],[11,"to_tokens","syn::token","",85,[[["self"],["tokens"]]]],[11,"to_tokens","","",86,[[["self"],["tokens"]]]],[11,"to_tokens","","",87,[[["self"],["tokens"]]]],[11,"to_tokens","","",88,[[["self"],["tokens"]]]],[11,"to_tokens","","",89,[[["self"],["tokens"]]]],[11,"to_tokens","","",90,[[["self"],["tokens"]]]],[11,"to_tokens","","",91,[[["self"],["tokens"]]]],[11,"to_tokens","","",92,[[["self"],["tokens"]]]],[11,"to_tokens","","",93,[[["self"],["tokens"]]]],[11,"to_tokens","","",94,[[["self"],["tokens"]]]],[11,"to_tokens","","",95,[[["self"],["tokens"]]]],[11,"to_tokens","","",96,[[["self"],["tokens"]]]],[11,"to_tokens","","",97,[[["self"],["tokens"]]]],[11,"to_tokens","","",98,[[["self"],["tokens"]]]],[11,"to_tokens","","",99,[[["self"],["tokens"]]]],[11,"to_tokens","","",100,[[["self"],["tokens"]]]],[11,"to_tokens","","",101,[[["self"],["tokens"]]]],[11,"to_tokens","","",102,[[["self"],["tokens"]]]],[11,"to_tokens","","",103,[[["self"],["tokens"]]]],[11,"to_tokens","","",104,[[["self"],["tokens"]]]],[11,"to_tokens","","",105,[[["self"],["tokens"]]]],[11,"to_tokens","","",106,[[["self"],["tokens"]]]],[11,"to_tokens","","",107,[[["self"],["tokens"]]]],[11,"to_tokens","","",108,[[["self"],["tokens"]]]],[11,"to_tokens","","",109,[[["self"],["tokens"]]]],[11,"to_tokens","","",110,[[["self"],["tokens"]]]],[11,"to_tokens","","",111,[[["self"],["tokens"]]]],[11,"to_tokens","","",112,[[["self"],["tokens"]]]],[11,"to_tokens","","",113,[[["self"],["tokens"]]]],[11,"to_tokens","","",114,[[["self"],["tokens"]]]],[11,"to_tokens","","",115,[[["self"],["tokens"]]]],[11,"to_tokens","","",116,[[["self"],["tokens"]]]],[11,"to_tokens","","",117,[[["self"],["tokens"]]]],[11,"to_tokens","","",118,[[["self"],["tokens"]]]],[11,"to_tokens","","",119,[[["self"],["tokens"]]]],[11,"to_tokens","","",120,[[["self"],["tokens"]]]],[11,"to_tokens","","",121,[[["self"],["tokens"]]]],[11,"to_tokens","","",122,[[["self"],["tokens"]]]],[11,"to_tokens","","",123,[[["self"],["tokens"]]]],[11,"to_tokens","","",124,[[["self"],["tokens"]]]],[11,"to_tokens","","",125,[[["self"],["tokens"]]]],[11,"to_tokens","","",126,[[["self"],["tokens"]]]],[11,"to_tokens","","",127,[[["self"],["tokens"]]]],[11,"to_tokens","","",128,[[["self"],["tokens"]]]],[11,"to_tokens","","",129,[[["self"],["tokens"]]]],[11,"to_tokens","","",130,[[["self"],["tokens"]]]],[11,"to_tokens","","",135,[[["self"],["tokens"]]]],[11,"to_tokens","","",136,[[["self"],["tokens"]]]],[11,"to_tokens","","",137,[[["self"],["tokens"]]]],[11,"to_tokens","","",138,[[["self"],["tokens"]]]],[11,"to_tokens","","",139,[[["self"],["tokens"]]]],[11,"to_tokens","","",140,[[["self"],["tokens"]]]],[11,"to_tokens","","",141,[[["self"],["tokens"]]]],[11,"to_tokens","","",142,[[["self"],["tokens"]]]],[11,"to_tokens","","",143,[[["self"],["tokens"]]]],[11,"to_tokens","","",144,[[["self"],["tokens"]]]],[11,"to_tokens","","",145,[[["self"],["tokens"]]]],[11,"to_tokens","","",146,[[["self"],["tokens"]]]],[11,"to_tokens","","",147,[[["self"],["tokens"]]]],[11,"to_tokens","","",148,[[["self"],["tokens"]]]],[11,"to_tokens","","",149,[[["self"],["tokens"]]]],[11,"to_tokens","","",150,[[["self"],["tokens"]]]],[11,"to_tokens","","",151,[[["self"],["tokens"]]]],[11,"to_tokens","","",152,[[["self"],["tokens"]]]],[11,"to_tokens","","",153,[[["self"],["tokens"]]]],[11,"to_tokens","","",154,[[["self"],["tokens"]]]],[11,"to_tokens","","",155,[[["self"],["tokens"]]]],[11,"to_tokens","","",156,[[["self"],["tokens"]]]],[11,"to_tokens","","",157,[[["self"],["tokens"]]]],[11,"to_tokens","","",158,[[["self"],["tokens"]]]],[11,"to_tokens","","",159,[[["self"],["tokens"]]]],[11,"to_tokens","","",160,[[["self"],["tokens"]]]],[11,"to_tokens","","",161,[[["self"],["tokens"]]]],[11,"to_tokens","","",162,[[["self"],["tokens"]]]],[11,"to_tokens","","",163,[[["self"],["tokens"]]]],[11,"to_tokens","","",164,[[["self"],["tokens"]]]],[11,"to_tokens","","",165,[[["self"],["tokens"]]]],[11,"to_tokens","","",166,[[["self"],["tokens"]]]],[11,"to_tokens","","",167,[[["self"],["tokens"]]]],[11,"to_tokens","","",168,[[["self"],["tokens"]]]],[11,"to_tokens","","",169,[[["self"],["tokens"]]]],[11,"to_tokens","","",170,[[["self"],["tokens"]]]],[11,"to_tokens","","",171,[[["self"],["tokens"]]]],[11,"to_tokens","","",172,[[["self"],["tokens"]]]],[11,"to_tokens","","",173,[[["self"],["tokens"]]]],[11,"to_tokens","","",174,[[["self"],["tokens"]]]],[11,"to_tokens","","",175,[[["self"],["tokens"]]]],[11,"to_tokens","","",176,[[["self"],["tokens"]]]],[11,"to_tokens","syn","",62,[[["self"],["tokens"]]]],[11,"to_tokens","","",63,[[["self"],["tokens"]]]],[11,"to_tokens","","",0,[[["self"],["tokens"]]]],[11,"to_tokens","","",1,[[["self"],["tokens"]]]],[11,"to_tokens","","",2,[[["self"],["tokens"]]]],[11,"to_tokens","","",64,[[["self"],["tokens"]]]],[11,"to_tokens","","",65,[[["self"],["tokens"]]]],[11,"to_tokens","","",6,[[["self"],["tokens"]]]],[11,"to_tokens","","",4,[[["self"],["tokens"]]]],[11,"to_tokens","","",5,[[["self"],["tokens"]]]],[11,"to_tokens","","",3,[[["self"],["tokens"]]]],[11,"to_tokens","","",8,[[["self"],["tokens"]]]],[11,"to_tokens","","",7,[[["self"],["tokens"]]]],[11,"to_tokens","","",9,[[["self"],["tokens"]]]],[11,"to_tokens","","",66,[[["self"],["tokens"]]]],[11,"to_tokens","","",11,[[["self"],["tokens"]]]],[11,"to_tokens","","",10,[[["self"],["tokens"]]]],[11,"to_tokens","","",17,[[["self"],["tokens"]]]],[11,"to_tokens","","",14,[[["self"],["tokens"]]]],[11,"to_tokens","","",12,[[["self"],["tokens"]]]],[11,"to_tokens","","",67,[[["self"],["tokens"]]]],[11,"to_tokens","","",19,[[["self"],["tokens"]]]],[11,"to_tokens","","",13,[[["self"],["tokens"]]]],[11,"to_tokens","","",16,[[["self"],["tokens"]]]],[11,"to_tokens","","",15,[[["self"],["tokens"]]]],[11,"to_tokens","","",18,[[["self"],["tokens"]]]],[11,"to_tokens","","",68,[[["self"],["tokens"]]]],[11,"to_tokens","","",70,[[["self"],["tokens"]]]],[11,"to_tokens","","",71,[[["self"],["tokens"]]]],[11,"to_tokens","","",22,[[["self"],["tokens"]]]],[11,"to_tokens","","",224,[[["self"],["tokens"]]]],[11,"to_tokens","","",177,[[["self"],["tokens"]]]],[11,"to_tokens","","",225,[[["self"],["tokens"]]]],[11,"to_tokens","","",20,[[["self"],["tokens"]]]],[11,"to_tokens","","",23,[[["self"],["tokens"]]]],[11,"to_tokens","","",28,[[["self"],["tokens"]]]],[11,"to_tokens","","",27,[[["self"],["tokens"]]]],[11,"to_tokens","","",69,[[["self"],["tokens"]]]],[11,"to_tokens","","",21,[[["self"],["tokens"]]]],[11,"to_tokens","","",29,[[["self"],["tokens"]]]],[11,"to_tokens","","",26,[[["self"],["tokens"]]]],[11,"to_tokens","","",25,[[["self"],["tokens"]]]],[11,"to_tokens","","",24,[[["self"],["tokens"]]]],[11,"to_tokens","","",178,[[["self"],["tokens"]]]],[11,"to_tokens","","",179,[[["self"],["tokens"]]]],[11,"to_tokens","","",74,[[["self"],["tokens"]]]],[11,"to_tokens","","",180,[[["self"],["tokens"]]]],[11,"to_tokens","","",181,[[["self"],["tokens"]]]],[11,"to_tokens","","",182,[[["self"],["tokens"]]]],[11,"to_tokens","","",183,[[["self"],["tokens"]]]],[11,"to_tokens","","",184,[[["self"],["tokens"]]]],[11,"to_tokens","","",185,[[["self"],["tokens"]]]],[11,"to_tokens","","",30,[[["self"],["tokens"]]]],[11,"to_tokens","","",31,[[["self"],["tokens"]]]],[11,"to_tokens","","",32,[[["self"],["tokens"]]]],[11,"to_tokens","","",36,[[["self"],["tokens"]]]],[11,"to_tokens","","",78,[[["self"],["tokens"]]]],[11,"to_tokens","","",79,[[["self"],["tokens"]]]],[11,"to_tokens","","",82,[[["self"],["tokens"]]]],[11,"to_tokens","","",50,[[["self"],["tokens"]]]],[11,"to_tokens","","",39,[[["self"],["tokens"]]]],[11,"to_tokens","","",48,[[["self"],["tokens"]]]],[11,"to_tokens","","",49,[[["self"],["tokens"]]]],[11,"to_tokens","","",40,[[["self"],["tokens"]]]],[11,"to_tokens","","",45,[[["self"],["tokens"]]]],[11,"to_tokens","","",52,[[["self"],["tokens"]]]],[11,"to_tokens","","",47,[[["self"],["tokens"]]]],[11,"to_tokens","","",51,[[["self"],["tokens"]]]],[11,"to_tokens","","",42,[[["self"],["tokens"]]]],[11,"to_tokens","","",41,[[["self"],["tokens"]]]],[11,"to_tokens","","",46,[[["self"],["tokens"]]]],[11,"to_tokens","","",43,[[["self"],["tokens"]]]],[11,"to_tokens","","",44,[[["self"],["tokens"]]]],[11,"to_tokens","","",53,[[["self"],["tokens"]]]],[11,"to_tokens","","",81,[[["self"],["tokens"]]]],[11,"to_tokens","","",38,[[["self"],["tokens"]]]],[11,"to_tokens","","",80,[[["self"],["tokens"]]]],[11,"to_tokens","","",37,[[["self"],["tokens"]]]],[11,"to_tokens","","",58,[[["self"],["tokens"]]]],[11,"to_tokens","","",59,[[["self"],["tokens"]]]],[11,"to_tokens","","",84,[[["self"],["tokens"]]]],[11,"to_tokens","","",83,[[["self"],["tokens"]]]],[11,"to_tokens","","",55,[[["self"],["tokens"]]]],[11,"to_tokens","","",56,[[["self"],["tokens"]]]],[11,"to_tokens","","",57,[[["self"],["tokens"]]]],[11,"to_tokens","","",54,[[["self"],["tokens"]]]],[11,"to_tokens","syn::punctuated","",189,[[["self"],["tokens"]]]],[11,"to_tokens","","",188,[[["self"],["tokens"]]]]],"paths":[[3,"Attribute"],[3,"MetaList"],[3,"MetaNameValue"],[3,"Field"],[3,"FieldsNamed"],[3,"FieldsUnnamed"],[3,"Variant"],[3,"VisCrate"],[3,"VisPublic"],[3,"VisRestricted"],[3,"ExprBinary"],[3,"ExprCall"],[3,"ExprCast"],[3,"ExprIndex"],[3,"ExprLit"],[3,"ExprParen"],[3,"ExprPath"],[3,"ExprUnary"],[3,"ExprVerbatim"],[3,"Index"],[3,"BoundLifetimes"],[3,"ConstParam"],[3,"Generics"],[3,"LifetimeDef"],[3,"PredicateEq"],[3,"PredicateLifetime"],[3,"PredicateType"],[3,"TraitBound"],[3,"TypeParam"],[3,"WhereClause"],[3,"LitBool"],[3,"LitVerbatim"],[3,"Macro"],[3,"DataEnum"],[3,"DataStruct"],[3,"DataUnion"],[3,"DeriveInput"],[3,"Abi"],[3,"BareFnArg"],[3,"TypeArray"],[3,"TypeBareFn"],[3,"TypeGroup"],[3,"TypeImplTrait"],[3,"TypeInfer"],[3,"TypeMacro"],[3,"TypeNever"],[3,"TypeParen"],[3,"TypePath"],[3,"TypePtr"],[3,"TypeReference"],[3,"TypeSlice"],[3,"TypeTraitObject"],[3,"TypeTuple"],[3,"TypeVerbatim"],[3,"PathTokens"],[3,"AngleBracketedGenericArguments"],[3,"Binding"],[3,"ParenthesizedGenericArguments"],[3,"Path"],[3,"PathSegment"],[3,"QSelf"],[4,"AttrStyle"],[4,"Meta"],[4,"NestedMeta"],[4,"Fields"],[4,"Visibility"],[4,"Expr"],[4,"Member"],[4,"GenericParam"],[4,"TraitBoundModifier"],[4,"TypeParamBound"],[4,"WherePredicate"],[4,"FloatSuffix"],[4,"IntSuffix"],[4,"Lit"],[4,"StrStyle"],[4,"MacroDelimiter"],[4,"Data"],[4,"BinOp"],[4,"UnOp"],[4,"BareFnArgName"],[4,"ReturnType"],[4,"Type"],[4,"GenericArgument"],[4,"PathArguments"],[3,"Underscore"],[3,"Add"],[3,"AddEq"],[3,"And"],[3,"AndAnd"],[3,"AndEq"],[3,"At"],[3,"Bang"],[3,"Caret"],[3,"CaretEq"],[3,"Colon"],[3,"Colon2"],[3,"Comma"],[3,"Div"],[3,"DivEq"],[3,"Dollar"],[3,"Dot"],[3,"Dot2"],[3,"Dot3"],[3,"DotDotEq"],[3,"Eq"],[3,"EqEq"],[3,"Ge"],[3,"Gt"],[3,"Le"],[3,"Lt"],[3,"MulEq"],[3,"Ne"],[3,"Or"],[3,"OrEq"],[3,"OrOr"],[3,"Pound"],[3,"Question"],[3,"RArrow"],[3,"LArrow"],[3,"Rem"],[3,"RemEq"],[3,"FatArrow"],[3,"Semi"],[3,"Shl"],[3,"ShlEq"],[3,"Shr"],[3,"ShrEq"],[3,"Star"],[3,"Sub"],[3,"SubEq"],[3,"Brace"],[3,"Bracket"],[3,"Paren"],[3,"Group"],[3,"As"],[3,"Auto"],[3,"Box"],[3,"Break"],[3,"CapSelf"],[3,"Catch"],[3,"Const"],[3,"Continue"],[3,"Crate"],[3,"Default"],[3,"Do"],[3,"Dyn"],[3,"Else"],[3,"Enum"],[3,"Extern"],[3,"Fn"],[3,"For"],[3,"If"],[3,"Impl"],[3,"In"],[3,"Let"],[3,"Loop"],[3,"Macro"],[3,"Match"],[3,"Mod"],[3,"Move"],[3,"Mut"],[3,"Pub"],[3,"Ref"],[3,"Return"],[3,"Self_"],[3,"Static"],[3,"Struct"],[3,"Super"],[3,"Trait"],[3,"Type"],[3,"Union"],[3,"Unsafe"],[3,"Use"],[3,"Where"],[3,"While"],[3,"Yield"],[3,"TypeGenerics"],[3,"Ident"],[3,"Lifetime"],[3,"LitStr"],[3,"LitByteStr"],[3,"LitByte"],[3,"LitChar"],[3,"LitInt"],[3,"LitFloat"],[3,"TokenBuffer"],[3,"Cursor"],[4,"Pair"],[3,"Punctuated"],[8,"Synom"],[8,"Parser"],[8,"Spanned"],[3,"ExprArray"],[3,"ExprAssign"],[3,"ExprAssignOp"],[3,"ExprBlock"],[3,"ExprBox"],[3,"ExprBreak"],[3,"ExprCatch"],[3,"ExprClosure"],[3,"ExprContinue"],[3,"ExprField"],[3,"ExprForLoop"],[3,"ExprGroup"],[3,"ExprIf"],[3,"ExprIfLet"],[3,"ExprInPlace"],[3,"ExprLoop"],[3,"ExprMacro"],[3,"ExprMatch"],[3,"ExprMethodCall"],[3,"ExprRange"],[3,"ExprReference"],[3,"ExprRepeat"],[3,"ExprReturn"],[3,"ExprStruct"],[3,"ExprTry"],[3,"ExprTuple"],[3,"ExprType"],[3,"ExprUnsafe"],[3,"ExprWhile"],[3,"ExprWhileLet"],[3,"ExprYield"],[3,"ImplGenerics"],[3,"Turbofish"],[3,"Pairs"],[3,"PairsMut"],[3,"IntoPairs"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"ParseError"]]};
searchIndex["typenum"]={"doc":"This crate provides type-level numbers evaluated at compile time. It depends only on libcore.","items":[[3,"Greater","typenum","A potential output from `Cmp`, this is the type equivalent to the enum variant `core::cmp::Ordering::Greater`.",N,N],[3,"Less","","A potential output from `Cmp`, this is the type equivalent to the enum variant `core::cmp::Ordering::Less`.",N,N],[3,"Equal","","A potential output from `Cmp`, this is the type equivalent to the enum variant `core::cmp::Ordering::Equal`.",N,N],[0,"consts","","Type aliases for many constants.",N,N],[6,"True","typenum::consts","",N,N],[6,"False","","",N,N],[6,"U0","","",N,N],[6,"U1","","",N,N],[6,"P1","","",N,N],[6,"N1","","",N,N],[6,"U2","","",N,N],[6,"P2","","",N,N],[6,"N2","","",N,N],[6,"U3","","",N,N],[6,"P3","","",N,N],[6,"N3","","",N,N],[6,"U4","","",N,N],[6,"P4","","",N,N],[6,"N4","","",N,N],[6,"U5","","",N,N],[6,"P5","","",N,N],[6,"N5","","",N,N],[6,"U6","","",N,N],[6,"P6","","",N,N],[6,"N6","","",N,N],[6,"U7","","",N,N],[6,"P7","","",N,N],[6,"N7","","",N,N],[6,"U8","","",N,N],[6,"P8","","",N,N],[6,"N8","","",N,N],[6,"U9","","",N,N],[6,"P9","","",N,N],[6,"N9","","",N,N],[6,"U10","","",N,N],[6,"P10","","",N,N],[6,"N10","","",N,N],[6,"U11","","",N,N],[6,"P11","","",N,N],[6,"N11","","",N,N],[6,"U12","","",N,N],[6,"P12","","",N,N],[6,"N12","","",N,N],[6,"U13","","",N,N],[6,"P13","","",N,N],[6,"N13","","",N,N],[6,"U14","","",N,N],[6,"P14","","",N,N],[6,"N14","","",N,N],[6,"U15","","",N,N],[6,"P15","","",N,N],[6,"N15","","",N,N],[6,"U16","","",N,N],[6,"P16","","",N,N],[6,"N16","","",N,N],[6,"U17","","",N,N],[6,"P17","","",N,N],[6,"N17","","",N,N],[6,"U18","","",N,N],[6,"P18","","",N,N],[6,"N18","","",N,N],[6,"U19","","",N,N],[6,"P19","","",N,N],[6,"N19","","",N,N],[6,"U20","","",N,N],[6,"P20","","",N,N],[6,"N20","","",N,N],[6,"U21","","",N,N],[6,"P21","","",N,N],[6,"N21","","",N,N],[6,"U22","","",N,N],[6,"P22","","",N,N],[6,"N22","","",N,N],[6,"U23","","",N,N],[6,"P23","","",N,N],[6,"N23","","",N,N],[6,"U24","","",N,N],[6,"P24","","",N,N],[6,"N24","","",N,N],[6,"U25","","",N,N],[6,"P25","","",N,N],[6,"N25","","",N,N],[6,"U26","","",N,N],[6,"P26","","",N,N],[6,"N26","","",N,N],[6,"U27","","",N,N],[6,"P27","","",N,N],[6,"N27","","",N,N],[6,"U28","","",N,N],[6,"P28","","",N,N],[6,"N28","","",N,N],[6,"U29","","",N,N],[6,"P29","","",N,N],[6,"N29","","",N,N],[6,"U30","","",N,N],[6,"P30","","",N,N],[6,"N30","","",N,N],[6,"U31","","",N,N],[6,"P31","","",N,N],[6,"N31","","",N,N],[6,"U32","","",N,N],[6,"P32","","",N,N],[6,"N32","","",N,N],[6,"U33","","",N,N],[6,"P33","","",N,N],[6,"N33","","",N,N],[6,"U34","","",N,N],[6,"P34","","",N,N],[6,"N34","","",N,N],[6,"U35","","",N,N],[6,"P35","","",N,N],[6,"N35","","",N,N],[6,"U36","","",N,N],[6,"P36","","",N,N],[6,"N36","","",N,N],[6,"U37","","",N,N],[6,"P37","","",N,N],[6,"N37","","",N,N],[6,"U38","","",N,N],[6,"P38","","",N,N],[6,"N38","","",N,N],[6,"U39","","",N,N],[6,"P39","","",N,N],[6,"N39","","",N,N],[6,"U40","","",N,N],[6,"P40","","",N,N],[6,"N40","","",N,N],[6,"U41","","",N,N],[6,"P41","","",N,N],[6,"N41","","",N,N],[6,"U42","","",N,N],[6,"P42","","",N,N],[6,"N42","","",N,N],[6,"U43","","",N,N],[6,"P43","","",N,N],[6,"N43","","",N,N],[6,"U44","","",N,N],[6,"P44","","",N,N],[6,"N44","","",N,N],[6,"U45","","",N,N],[6,"P45","","",N,N],[6,"N45","","",N,N],[6,"U46","","",N,N],[6,"P46","","",N,N],[6,"N46","","",N,N],[6,"U47","","",N,N],[6,"P47","","",N,N],[6,"N47","","",N,N],[6,"U48","","",N,N],[6,"P48","","",N,N],[6,"N48","","",N,N],[6,"U49","","",N,N],[6,"P49","","",N,N],[6,"N49","","",N,N],[6,"U50","","",N,N],[6,"P50","","",N,N],[6,"N50","","",N,N],[6,"U51","","",N,N],[6,"P51","","",N,N],[6,"N51","","",N,N],[6,"U52","","",N,N],[6,"P52","","",N,N],[6,"N52","","",N,N],[6,"U53","","",N,N],[6,"P53","","",N,N],[6,"N53","","",N,N],[6,"U54","","",N,N],[6,"P54","","",N,N],[6,"N54","","",N,N],[6,"U55","","",N,N],[6,"P55","","",N,N],[6,"N55","","",N,N],[6,"U56","","",N,N],[6,"P56","","",N,N],[6,"N56","","",N,N],[6,"U57","","",N,N],[6,"P57","","",N,N],[6,"N57","","",N,N],[6,"U58","","",N,N],[6,"P58","","",N,N],[6,"N58","","",N,N],[6,"U59","","",N,N],[6,"P59","","",N,N],[6,"N59","","",N,N],[6,"U60","","",N,N],[6,"P60","","",N,N],[6,"N60","","",N,N],[6,"U61","","",N,N],[6,"P61","","",N,N],[6,"N61","","",N,N],[6,"U62","","",N,N],[6,"P62","","",N,N],[6,"N62","","",N,N],[6,"U63","","",N,N],[6,"P63","","",N,N],[6,"N63","","",N,N],[6,"U64","","",N,N],[6,"P64","","",N,N],[6,"N64","","",N,N],[6,"U65","","",N,N],[6,"P65","","",N,N],[6,"N65","","",N,N],[6,"U66","","",N,N],[6,"P66","","",N,N],[6,"N66","","",N,N],[6,"U67","","",N,N],[6,"P67","","",N,N],[6,"N67","","",N,N],[6,"U68","","",N,N],[6,"P68","","",N,N],[6,"N68","","",N,N],[6,"U69","","",N,N],[6,"P69","","",N,N],[6,"N69","","",N,N],[6,"U70","","",N,N],[6,"P70","","",N,N],[6,"N70","","",N,N],[6,"U71","","",N,N],[6,"P71","","",N,N],[6,"N71","","",N,N],[6,"U72","","",N,N],[6,"P72","","",N,N],[6,"N72","","",N,N],[6,"U73","","",N,N],[6,"P73","","",N,N],[6,"N73","","",N,N],[6,"U74","","",N,N],[6,"P74","","",N,N],[6,"N74","","",N,N],[6,"U75","","",N,N],[6,"P75","","",N,N],[6,"N75","","",N,N],[6,"U76","","",N,N],[6,"P76","","",N,N],[6,"N76","","",N,N],[6,"U77","","",N,N],[6,"P77","","",N,N],[6,"N77","","",N,N],[6,"U78","","",N,N],[6,"P78","","",N,N],[6,"N78","","",N,N],[6,"U79","","",N,N],[6,"P79","","",N,N],[6,"N79","","",N,N],[6,"U80","","",N,N],[6,"P80","","",N,N],[6,"N80","","",N,N],[6,"U81","","",N,N],[6,"P81","","",N,N],[6,"N81","","",N,N],[6,"U82","","",N,N],[6,"P82","","",N,N],[6,"N82","","",N,N],[6,"U83","","",N,N],[6,"P83","","",N,N],[6,"N83","","",N,N],[6,"U84","","",N,N],[6,"P84","","",N,N],[6,"N84","","",N,N],[6,"U85","","",N,N],[6,"P85","","",N,N],[6,"N85","","",N,N],[6,"U86","","",N,N],[6,"P86","","",N,N],[6,"N86","","",N,N],[6,"U87","","",N,N],[6,"P87","","",N,N],[6,"N87","","",N,N],[6,"U88","","",N,N],[6,"P88","","",N,N],[6,"N88","","",N,N],[6,"U89","","",N,N],[6,"P89","","",N,N],[6,"N89","","",N,N],[6,"U90","","",N,N],[6,"P90","","",N,N],[6,"N90","","",N,N],[6,"U91","","",N,N],[6,"P91","","",N,N],[6,"N91","","",N,N],[6,"U92","","",N,N],[6,"P92","","",N,N],[6,"N92","","",N,N],[6,"U93","","",N,N],[6,"P93","","",N,N],[6,"N93","","",N,N],[6,"U94","","",N,N],[6,"P94","","",N,N],[6,"N94","","",N,N],[6,"U95","","",N,N],[6,"P95","","",N,N],[6,"N95","","",N,N],[6,"U96","","",N,N],[6,"P96","","",N,N],[6,"N96","","",N,N],[6,"U97","","",N,N],[6,"P97","","",N,N],[6,"N97","","",N,N],[6,"U98","","",N,N],[6,"P98","","",N,N],[6,"N98","","",N,N],[6,"U99","","",N,N],[6,"P99","","",N,N],[6,"N99","","",N,N],[6,"U100","","",N,N],[6,"P100","","",N,N],[6,"N100","","",N,N],[6,"U101","","",N,N],[6,"P101","","",N,N],[6,"N101","","",N,N],[6,"U102","","",N,N],[6,"P102","","",N,N],[6,"N102","","",N,N],[6,"U103","","",N,N],[6,"P103","","",N,N],[6,"N103","","",N,N],[6,"U104","","",N,N],[6,"P104","","",N,N],[6,"N104","","",N,N],[6,"U105","","",N,N],[6,"P105","","",N,N],[6,"N105","","",N,N],[6,"U106","","",N,N],[6,"P106","","",N,N],[6,"N106","","",N,N],[6,"U107","","",N,N],[6,"P107","","",N,N],[6,"N107","","",N,N],[6,"U108","","",N,N],[6,"P108","","",N,N],[6,"N108","","",N,N],[6,"U109","","",N,N],[6,"P109","","",N,N],[6,"N109","","",N,N],[6,"U110","","",N,N],[6,"P110","","",N,N],[6,"N110","","",N,N],[6,"U111","","",N,N],[6,"P111","","",N,N],[6,"N111","","",N,N],[6,"U112","","",N,N],[6,"P112","","",N,N],[6,"N112","","",N,N],[6,"U113","","",N,N],[6,"P113","","",N,N],[6,"N113","","",N,N],[6,"U114","","",N,N],[6,"P114","","",N,N],[6,"N114","","",N,N],[6,"U115","","",N,N],[6,"P115","","",N,N],[6,"N115","","",N,N],[6,"U116","","",N,N],[6,"P116","","",N,N],[6,"N116","","",N,N],[6,"U117","","",N,N],[6,"P117","","",N,N],[6,"N117","","",N,N],[6,"U118","","",N,N],[6,"P118","","",N,N],[6,"N118","","",N,N],[6,"U119","","",N,N],[6,"P119","","",N,N],[6,"N119","","",N,N],[6,"U120","","",N,N],[6,"P120","","",N,N],[6,"N120","","",N,N],[6,"U121","","",N,N],[6,"P121","","",N,N],[6,"N121","","",N,N],[6,"U122","","",N,N],[6,"P122","","",N,N],[6,"N122","","",N,N],[6,"U123","","",N,N],[6,"P123","","",N,N],[6,"N123","","",N,N],[6,"U124","","",N,N],[6,"P124","","",N,N],[6,"N124","","",N,N],[6,"U125","","",N,N],[6,"P125","","",N,N],[6,"N125","","",N,N],[6,"U126","","",N,N],[6,"P126","","",N,N],[6,"N126","","",N,N],[6,"U127","","",N,N],[6,"P127","","",N,N],[6,"N127","","",N,N],[6,"U128","","",N,N],[6,"P128","","",N,N],[6,"N128","","",N,N],[6,"U129","","",N,N],[6,"P129","","",N,N],[6,"N129","","",N,N],[6,"U130","","",N,N],[6,"P130","","",N,N],[6,"N130","","",N,N],[6,"U131","","",N,N],[6,"P131","","",N,N],[6,"N131","","",N,N],[6,"U132","","",N,N],[6,"P132","","",N,N],[6,"N132","","",N,N],[6,"U133","","",N,N],[6,"P133","","",N,N],[6,"N133","","",N,N],[6,"U134","","",N,N],[6,"P134","","",N,N],[6,"N134","","",N,N],[6,"U135","","",N,N],[6,"P135","","",N,N],[6,"N135","","",N,N],[6,"U136","","",N,N],[6,"P136","","",N,N],[6,"N136","","",N,N],[6,"U137","","",N,N],[6,"P137","","",N,N],[6,"N137","","",N,N],[6,"U138","","",N,N],[6,"P138","","",N,N],[6,"N138","","",N,N],[6,"U139","","",N,N],[6,"P139","","",N,N],[6,"N139","","",N,N],[6,"U140","","",N,N],[6,"P140","","",N,N],[6,"N140","","",N,N],[6,"U141","","",N,N],[6,"P141","","",N,N],[6,"N141","","",N,N],[6,"U142","","",N,N],[6,"P142","","",N,N],[6,"N142","","",N,N],[6,"U143","","",N,N],[6,"P143","","",N,N],[6,"N143","","",N,N],[6,"U144","","",N,N],[6,"P144","","",N,N],[6,"N144","","",N,N],[6,"U145","","",N,N],[6,"P145","","",N,N],[6,"N145","","",N,N],[6,"U146","","",N,N],[6,"P146","","",N,N],[6,"N146","","",N,N],[6,"U147","","",N,N],[6,"P147","","",N,N],[6,"N147","","",N,N],[6,"U148","","",N,N],[6,"P148","","",N,N],[6,"N148","","",N,N],[6,"U149","","",N,N],[6,"P149","","",N,N],[6,"N149","","",N,N],[6,"U150","","",N,N],[6,"P150","","",N,N],[6,"N150","","",N,N],[6,"U151","","",N,N],[6,"P151","","",N,N],[6,"N151","","",N,N],[6,"U152","","",N,N],[6,"P152","","",N,N],[6,"N152","","",N,N],[6,"U153","","",N,N],[6,"P153","","",N,N],[6,"N153","","",N,N],[6,"U154","","",N,N],[6,"P154","","",N,N],[6,"N154","","",N,N],[6,"U155","","",N,N],[6,"P155","","",N,N],[6,"N155","","",N,N],[6,"U156","","",N,N],[6,"P156","","",N,N],[6,"N156","","",N,N],[6,"U157","","",N,N],[6,"P157","","",N,N],[6,"N157","","",N,N],[6,"U158","","",N,N],[6,"P158","","",N,N],[6,"N158","","",N,N],[6,"U159","","",N,N],[6,"P159","","",N,N],[6,"N159","","",N,N],[6,"U160","","",N,N],[6,"P160","","",N,N],[6,"N160","","",N,N],[6,"U161","","",N,N],[6,"P161","","",N,N],[6,"N161","","",N,N],[6,"U162","","",N,N],[6,"P162","","",N,N],[6,"N162","","",N,N],[6,"U163","","",N,N],[6,"P163","","",N,N],[6,"N163","","",N,N],[6,"U164","","",N,N],[6,"P164","","",N,N],[6,"N164","","",N,N],[6,"U165","","",N,N],[6,"P165","","",N,N],[6,"N165","","",N,N],[6,"U166","","",N,N],[6,"P166","","",N,N],[6,"N166","","",N,N],[6,"U167","","",N,N],[6,"P167","","",N,N],[6,"N167","","",N,N],[6,"U168","","",N,N],[6,"P168","","",N,N],[6,"N168","","",N,N],[6,"U169","","",N,N],[6,"P169","","",N,N],[6,"N169","","",N,N],[6,"U170","","",N,N],[6,"P170","","",N,N],[6,"N170","","",N,N],[6,"U171","","",N,N],[6,"P171","","",N,N],[6,"N171","","",N,N],[6,"U172","","",N,N],[6,"P172","","",N,N],[6,"N172","","",N,N],[6,"U173","","",N,N],[6,"P173","","",N,N],[6,"N173","","",N,N],[6,"U174","","",N,N],[6,"P174","","",N,N],[6,"N174","","",N,N],[6,"U175","","",N,N],[6,"P175","","",N,N],[6,"N175","","",N,N],[6,"U176","","",N,N],[6,"P176","","",N,N],[6,"N176","","",N,N],[6,"U177","","",N,N],[6,"P177","","",N,N],[6,"N177","","",N,N],[6,"U178","","",N,N],[6,"P178","","",N,N],[6,"N178","","",N,N],[6,"U179","","",N,N],[6,"P179","","",N,N],[6,"N179","","",N,N],[6,"U180","","",N,N],[6,"P180","","",N,N],[6,"N180","","",N,N],[6,"U181","","",N,N],[6,"P181","","",N,N],[6,"N181","","",N,N],[6,"U182","","",N,N],[6,"P182","","",N,N],[6,"N182","","",N,N],[6,"U183","","",N,N],[6,"P183","","",N,N],[6,"N183","","",N,N],[6,"U184","","",N,N],[6,"P184","","",N,N],[6,"N184","","",N,N],[6,"U185","","",N,N],[6,"P185","","",N,N],[6,"N185","","",N,N],[6,"U186","","",N,N],[6,"P186","","",N,N],[6,"N186","","",N,N],[6,"U187","","",N,N],[6,"P187","","",N,N],[6,"N187","","",N,N],[6,"U188","","",N,N],[6,"P188","","",N,N],[6,"N188","","",N,N],[6,"U189","","",N,N],[6,"P189","","",N,N],[6,"N189","","",N,N],[6,"U190","","",N,N],[6,"P190","","",N,N],[6,"N190","","",N,N],[6,"U191","","",N,N],[6,"P191","","",N,N],[6,"N191","","",N,N],[6,"U192","","",N,N],[6,"P192","","",N,N],[6,"N192","","",N,N],[6,"U193","","",N,N],[6,"P193","","",N,N],[6,"N193","","",N,N],[6,"U194","","",N,N],[6,"P194","","",N,N],[6,"N194","","",N,N],[6,"U195","","",N,N],[6,"P195","","",N,N],[6,"N195","","",N,N],[6,"U196","","",N,N],[6,"P196","","",N,N],[6,"N196","","",N,N],[6,"U197","","",N,N],[6,"P197","","",N,N],[6,"N197","","",N,N],[6,"U198","","",N,N],[6,"P198","","",N,N],[6,"N198","","",N,N],[6,"U199","","",N,N],[6,"P199","","",N,N],[6,"N199","","",N,N],[6,"U200","","",N,N],[6,"P200","","",N,N],[6,"N200","","",N,N],[6,"U201","","",N,N],[6,"P201","","",N,N],[6,"N201","","",N,N],[6,"U202","","",N,N],[6,"P202","","",N,N],[6,"N202","","",N,N],[6,"U203","","",N,N],[6,"P203","","",N,N],[6,"N203","","",N,N],[6,"U204","","",N,N],[6,"P204","","",N,N],[6,"N204","","",N,N],[6,"U205","","",N,N],[6,"P205","","",N,N],[6,"N205","","",N,N],[6,"U206","","",N,N],[6,"P206","","",N,N],[6,"N206","","",N,N],[6,"U207","","",N,N],[6,"P207","","",N,N],[6,"N207","","",N,N],[6,"U208","","",N,N],[6,"P208","","",N,N],[6,"N208","","",N,N],[6,"U209","","",N,N],[6,"P209","","",N,N],[6,"N209","","",N,N],[6,"U210","","",N,N],[6,"P210","","",N,N],[6,"N210","","",N,N],[6,"U211","","",N,N],[6,"P211","","",N,N],[6,"N211","","",N,N],[6,"U212","","",N,N],[6,"P212","","",N,N],[6,"N212","","",N,N],[6,"U213","","",N,N],[6,"P213","","",N,N],[6,"N213","","",N,N],[6,"U214","","",N,N],[6,"P214","","",N,N],[6,"N214","","",N,N],[6,"U215","","",N,N],[6,"P215","","",N,N],[6,"N215","","",N,N],[6,"U216","","",N,N],[6,"P216","","",N,N],[6,"N216","","",N,N],[6,"U217","","",N,N],[6,"P217","","",N,N],[6,"N217","","",N,N],[6,"U218","","",N,N],[6,"P218","","",N,N],[6,"N218","","",N,N],[6,"U219","","",N,N],[6,"P219","","",N,N],[6,"N219","","",N,N],[6,"U220","","",N,N],[6,"P220","","",N,N],[6,"N220","","",N,N],[6,"U221","","",N,N],[6,"P221","","",N,N],[6,"N221","","",N,N],[6,"U222","","",N,N],[6,"P222","","",N,N],[6,"N222","","",N,N],[6,"U223","","",N,N],[6,"P223","","",N,N],[6,"N223","","",N,N],[6,"U224","","",N,N],[6,"P224","","",N,N],[6,"N224","","",N,N],[6,"U225","","",N,N],[6,"P225","","",N,N],[6,"N225","","",N,N],[6,"U226","","",N,N],[6,"P226","","",N,N],[6,"N226","","",N,N],[6,"U227","","",N,N],[6,"P227","","",N,N],[6,"N227","","",N,N],[6,"U228","","",N,N],[6,"P228","","",N,N],[6,"N228","","",N,N],[6,"U229","","",N,N],[6,"P229","","",N,N],[6,"N229","","",N,N],[6,"U230","","",N,N],[6,"P230","","",N,N],[6,"N230","","",N,N],[6,"U231","","",N,N],[6,"P231","","",N,N],[6,"N231","","",N,N],[6,"U232","","",N,N],[6,"P232","","",N,N],[6,"N232","","",N,N],[6,"U233","","",N,N],[6,"P233","","",N,N],[6,"N233","","",N,N],[6,"U234","","",N,N],[6,"P234","","",N,N],[6,"N234","","",N,N],[6,"U235","","",N,N],[6,"P235","","",N,N],[6,"N235","","",N,N],[6,"U236","","",N,N],[6,"P236","","",N,N],[6,"N236","","",N,N],[6,"U237","","",N,N],[6,"P237","","",N,N],[6,"N237","","",N,N],[6,"U238","","",N,N],[6,"P238","","",N,N],[6,"N238","","",N,N],[6,"U239","","",N,N],[6,"P239","","",N,N],[6,"N239","","",N,N],[6,"U240","","",N,N],[6,"P240","","",N,N],[6,"N240","","",N,N],[6,"U241","","",N,N],[6,"P241","","",N,N],[6,"N241","","",N,N],[6,"U242","","",N,N],[6,"P242","","",N,N],[6,"N242","","",N,N],[6,"U243","","",N,N],[6,"P243","","",N,N],[6,"N243","","",N,N],[6,"U244","","",N,N],[6,"P244","","",N,N],[6,"N244","","",N,N],[6,"U245","","",N,N],[6,"P245","","",N,N],[6,"N245","","",N,N],[6,"U246","","",N,N],[6,"P246","","",N,N],[6,"N246","","",N,N],[6,"U247","","",N,N],[6,"P247","","",N,N],[6,"N247","","",N,N],[6,"U248","","",N,N],[6,"P248","","",N,N],[6,"N248","","",N,N],[6,"U249","","",N,N],[6,"P249","","",N,N],[6,"N249","","",N,N],[6,"U250","","",N,N],[6,"P250","","",N,N],[6,"N250","","",N,N],[6,"U251","","",N,N],[6,"P251","","",N,N],[6,"N251","","",N,N],[6,"U252","","",N,N],[6,"P252","","",N,N],[6,"N252","","",N,N],[6,"U253","","",N,N],[6,"P253","","",N,N],[6,"N253","","",N,N],[6,"U254","","",N,N],[6,"P254","","",N,N],[6,"N254","","",N,N],[6,"U255","","",N,N],[6,"P255","","",N,N],[6,"N255","","",N,N],[6,"U256","","",N,N],[6,"P256","","",N,N],[6,"N256","","",N,N],[6,"U257","","",N,N],[6,"P257","","",N,N],[6,"N257","","",N,N],[6,"U258","","",N,N],[6,"P258","","",N,N],[6,"N258","","",N,N],[6,"U259","","",N,N],[6,"P259","","",N,N],[6,"N259","","",N,N],[6,"U260","","",N,N],[6,"P260","","",N,N],[6,"N260","","",N,N],[6,"U261","","",N,N],[6,"P261","","",N,N],[6,"N261","","",N,N],[6,"U262","","",N,N],[6,"P262","","",N,N],[6,"N262","","",N,N],[6,"U263","","",N,N],[6,"P263","","",N,N],[6,"N263","","",N,N],[6,"U264","","",N,N],[6,"P264","","",N,N],[6,"N264","","",N,N],[6,"U265","","",N,N],[6,"P265","","",N,N],[6,"N265","","",N,N],[6,"U266","","",N,N],[6,"P266","","",N,N],[6,"N266","","",N,N],[6,"U267","","",N,N],[6,"P267","","",N,N],[6,"N267","","",N,N],[6,"U268","","",N,N],[6,"P268","","",N,N],[6,"N268","","",N,N],[6,"U269","","",N,N],[6,"P269","","",N,N],[6,"N269","","",N,N],[6,"U270","","",N,N],[6,"P270","","",N,N],[6,"N270","","",N,N],[6,"U271","","",N,N],[6,"P271","","",N,N],[6,"N271","","",N,N],[6,"U272","","",N,N],[6,"P272","","",N,N],[6,"N272","","",N,N],[6,"U273","","",N,N],[6,"P273","","",N,N],[6,"N273","","",N,N],[6,"U274","","",N,N],[6,"P274","","",N,N],[6,"N274","","",N,N],[6,"U275","","",N,N],[6,"P275","","",N,N],[6,"N275","","",N,N],[6,"U276","","",N,N],[6,"P276","","",N,N],[6,"N276","","",N,N],[6,"U277","","",N,N],[6,"P277","","",N,N],[6,"N277","","",N,N],[6,"U278","","",N,N],[6,"P278","","",N,N],[6,"N278","","",N,N],[6,"U279","","",N,N],[6,"P279","","",N,N],[6,"N279","","",N,N],[6,"U280","","",N,N],[6,"P280","","",N,N],[6,"N280","","",N,N],[6,"U281","","",N,N],[6,"P281","","",N,N],[6,"N281","","",N,N],[6,"U282","","",N,N],[6,"P282","","",N,N],[6,"N282","","",N,N],[6,"U283","","",N,N],[6,"P283","","",N,N],[6,"N283","","",N,N],[6,"U284","","",N,N],[6,"P284","","",N,N],[6,"N284","","",N,N],[6,"U285","","",N,N],[6,"P285","","",N,N],[6,"N285","","",N,N],[6,"U286","","",N,N],[6,"P286","","",N,N],[6,"N286","","",N,N],[6,"U287","","",N,N],[6,"P287","","",N,N],[6,"N287","","",N,N],[6,"U288","","",N,N],[6,"P288","","",N,N],[6,"N288","","",N,N],[6,"U289","","",N,N],[6,"P289","","",N,N],[6,"N289","","",N,N],[6,"U290","","",N,N],[6,"P290","","",N,N],[6,"N290","","",N,N],[6,"U291","","",N,N],[6,"P291","","",N,N],[6,"N291","","",N,N],[6,"U292","","",N,N],[6,"P292","","",N,N],[6,"N292","","",N,N],[6,"U293","","",N,N],[6,"P293","","",N,N],[6,"N293","","",N,N],[6,"U294","","",N,N],[6,"P294","","",N,N],[6,"N294","","",N,N],[6,"U295","","",N,N],[6,"P295","","",N,N],[6,"N295","","",N,N],[6,"U296","","",N,N],[6,"P296","","",N,N],[6,"N296","","",N,N],[6,"U297","","",N,N],[6,"P297","","",N,N],[6,"N297","","",N,N],[6,"U298","","",N,N],[6,"P298","","",N,N],[6,"N298","","",N,N],[6,"U299","","",N,N],[6,"P299","","",N,N],[6,"N299","","",N,N],[6,"U300","","",N,N],[6,"P300","","",N,N],[6,"N300","","",N,N],[6,"U301","","",N,N],[6,"P301","","",N,N],[6,"N301","","",N,N],[6,"U302","","",N,N],[6,"P302","","",N,N],[6,"N302","","",N,N],[6,"U303","","",N,N],[6,"P303","","",N,N],[6,"N303","","",N,N],[6,"U304","","",N,N],[6,"P304","","",N,N],[6,"N304","","",N,N],[6,"U305","","",N,N],[6,"P305","","",N,N],[6,"N305","","",N,N],[6,"U306","","",N,N],[6,"P306","","",N,N],[6,"N306","","",N,N],[6,"U307","","",N,N],[6,"P307","","",N,N],[6,"N307","","",N,N],[6,"U308","","",N,N],[6,"P308","","",N,N],[6,"N308","","",N,N],[6,"U309","","",N,N],[6,"P309","","",N,N],[6,"N309","","",N,N],[6,"U310","","",N,N],[6,"P310","","",N,N],[6,"N310","","",N,N],[6,"U311","","",N,N],[6,"P311","","",N,N],[6,"N311","","",N,N],[6,"U312","","",N,N],[6,"P312","","",N,N],[6,"N312","","",N,N],[6,"U313","","",N,N],[6,"P313","","",N,N],[6,"N313","","",N,N],[6,"U314","","",N,N],[6,"P314","","",N,N],[6,"N314","","",N,N],[6,"U315","","",N,N],[6,"P315","","",N,N],[6,"N315","","",N,N],[6,"U316","","",N,N],[6,"P316","","",N,N],[6,"N316","","",N,N],[6,"U317","","",N,N],[6,"P317","","",N,N],[6,"N317","","",N,N],[6,"U318","","",N,N],[6,"P318","","",N,N],[6,"N318","","",N,N],[6,"U319","","",N,N],[6,"P319","","",N,N],[6,"N319","","",N,N],[6,"U320","","",N,N],[6,"P320","","",N,N],[6,"N320","","",N,N],[6,"U321","","",N,N],[6,"P321","","",N,N],[6,"N321","","",N,N],[6,"U322","","",N,N],[6,"P322","","",N,N],[6,"N322","","",N,N],[6,"U323","","",N,N],[6,"P323","","",N,N],[6,"N323","","",N,N],[6,"U324","","",N,N],[6,"P324","","",N,N],[6,"N324","","",N,N],[6,"U325","","",N,N],[6,"P325","","",N,N],[6,"N325","","",N,N],[6,"U326","","",N,N],[6,"P326","","",N,N],[6,"N326","","",N,N],[6,"U327","","",N,N],[6,"P327","","",N,N],[6,"N327","","",N,N],[6,"U328","","",N,N],[6,"P328","","",N,N],[6,"N328","","",N,N],[6,"U329","","",N,N],[6,"P329","","",N,N],[6,"N329","","",N,N],[6,"U330","","",N,N],[6,"P330","","",N,N],[6,"N330","","",N,N],[6,"U331","","",N,N],[6,"P331","","",N,N],[6,"N331","","",N,N],[6,"U332","","",N,N],[6,"P332","","",N,N],[6,"N332","","",N,N],[6,"U333","","",N,N],[6,"P333","","",N,N],[6,"N333","","",N,N],[6,"U334","","",N,N],[6,"P334","","",N,N],[6,"N334","","",N,N],[6,"U335","","",N,N],[6,"P335","","",N,N],[6,"N335","","",N,N],[6,"U336","","",N,N],[6,"P336","","",N,N],[6,"N336","","",N,N],[6,"U337","","",N,N],[6,"P337","","",N,N],[6,"N337","","",N,N],[6,"U338","","",N,N],[6,"P338","","",N,N],[6,"N338","","",N,N],[6,"U339","","",N,N],[6,"P339","","",N,N],[6,"N339","","",N,N],[6,"U340","","",N,N],[6,"P340","","",N,N],[6,"N340","","",N,N],[6,"U341","","",N,N],[6,"P341","","",N,N],[6,"N341","","",N,N],[6,"U342","","",N,N],[6,"P342","","",N,N],[6,"N342","","",N,N],[6,"U343","","",N,N],[6,"P343","","",N,N],[6,"N343","","",N,N],[6,"U344","","",N,N],[6,"P344","","",N,N],[6,"N344","","",N,N],[6,"U345","","",N,N],[6,"P345","","",N,N],[6,"N345","","",N,N],[6,"U346","","",N,N],[6,"P346","","",N,N],[6,"N346","","",N,N],[6,"U347","","",N,N],[6,"P347","","",N,N],[6,"N347","","",N,N],[6,"U348","","",N,N],[6,"P348","","",N,N],[6,"N348","","",N,N],[6,"U349","","",N,N],[6,"P349","","",N,N],[6,"N349","","",N,N],[6,"U350","","",N,N],[6,"P350","","",N,N],[6,"N350","","",N,N],[6,"U351","","",N,N],[6,"P351","","",N,N],[6,"N351","","",N,N],[6,"U352","","",N,N],[6,"P352","","",N,N],[6,"N352","","",N,N],[6,"U353","","",N,N],[6,"P353","","",N,N],[6,"N353","","",N,N],[6,"U354","","",N,N],[6,"P354","","",N,N],[6,"N354","","",N,N],[6,"U355","","",N,N],[6,"P355","","",N,N],[6,"N355","","",N,N],[6,"U356","","",N,N],[6,"P356","","",N,N],[6,"N356","","",N,N],[6,"U357","","",N,N],[6,"P357","","",N,N],[6,"N357","","",N,N],[6,"U358","","",N,N],[6,"P358","","",N,N],[6,"N358","","",N,N],[6,"U359","","",N,N],[6,"P359","","",N,N],[6,"N359","","",N,N],[6,"U360","","",N,N],[6,"P360","","",N,N],[6,"N360","","",N,N],[6,"U361","","",N,N],[6,"P361","","",N,N],[6,"N361","","",N,N],[6,"U362","","",N,N],[6,"P362","","",N,N],[6,"N362","","",N,N],[6,"U363","","",N,N],[6,"P363","","",N,N],[6,"N363","","",N,N],[6,"U364","","",N,N],[6,"P364","","",N,N],[6,"N364","","",N,N],[6,"U365","","",N,N],[6,"P365","","",N,N],[6,"N365","","",N,N],[6,"U366","","",N,N],[6,"P366","","",N,N],[6,"N366","","",N,N],[6,"U367","","",N,N],[6,"P367","","",N,N],[6,"N367","","",N,N],[6,"U368","","",N,N],[6,"P368","","",N,N],[6,"N368","","",N,N],[6,"U369","","",N,N],[6,"P369","","",N,N],[6,"N369","","",N,N],[6,"U370","","",N,N],[6,"P370","","",N,N],[6,"N370","","",N,N],[6,"U371","","",N,N],[6,"P371","","",N,N],[6,"N371","","",N,N],[6,"U372","","",N,N],[6,"P372","","",N,N],[6,"N372","","",N,N],[6,"U373","","",N,N],[6,"P373","","",N,N],[6,"N373","","",N,N],[6,"U374","","",N,N],[6,"P374","","",N,N],[6,"N374","","",N,N],[6,"U375","","",N,N],[6,"P375","","",N,N],[6,"N375","","",N,N],[6,"U376","","",N,N],[6,"P376","","",N,N],[6,"N376","","",N,N],[6,"U377","","",N,N],[6,"P377","","",N,N],[6,"N377","","",N,N],[6,"U378","","",N,N],[6,"P378","","",N,N],[6,"N378","","",N,N],[6,"U379","","",N,N],[6,"P379","","",N,N],[6,"N379","","",N,N],[6,"U380","","",N,N],[6,"P380","","",N,N],[6,"N380","","",N,N],[6,"U381","","",N,N],[6,"P381","","",N,N],[6,"N381","","",N,N],[6,"U382","","",N,N],[6,"P382","","",N,N],[6,"N382","","",N,N],[6,"U383","","",N,N],[6,"P383","","",N,N],[6,"N383","","",N,N],[6,"U384","","",N,N],[6,"P384","","",N,N],[6,"N384","","",N,N],[6,"U385","","",N,N],[6,"P385","","",N,N],[6,"N385","","",N,N],[6,"U386","","",N,N],[6,"P386","","",N,N],[6,"N386","","",N,N],[6,"U387","","",N,N],[6,"P387","","",N,N],[6,"N387","","",N,N],[6,"U388","","",N,N],[6,"P388","","",N,N],[6,"N388","","",N,N],[6,"U389","","",N,N],[6,"P389","","",N,N],[6,"N389","","",N,N],[6,"U390","","",N,N],[6,"P390","","",N,N],[6,"N390","","",N,N],[6,"U391","","",N,N],[6,"P391","","",N,N],[6,"N391","","",N,N],[6,"U392","","",N,N],[6,"P392","","",N,N],[6,"N392","","",N,N],[6,"U393","","",N,N],[6,"P393","","",N,N],[6,"N393","","",N,N],[6,"U394","","",N,N],[6,"P394","","",N,N],[6,"N394","","",N,N],[6,"U395","","",N,N],[6,"P395","","",N,N],[6,"N395","","",N,N],[6,"U396","","",N,N],[6,"P396","","",N,N],[6,"N396","","",N,N],[6,"U397","","",N,N],[6,"P397","","",N,N],[6,"N397","","",N,N],[6,"U398","","",N,N],[6,"P398","","",N,N],[6,"N398","","",N,N],[6,"U399","","",N,N],[6,"P399","","",N,N],[6,"N399","","",N,N],[6,"U400","","",N,N],[6,"P400","","",N,N],[6,"N400","","",N,N],[6,"U401","","",N,N],[6,"P401","","",N,N],[6,"N401","","",N,N],[6,"U402","","",N,N],[6,"P402","","",N,N],[6,"N402","","",N,N],[6,"U403","","",N,N],[6,"P403","","",N,N],[6,"N403","","",N,N],[6,"U404","","",N,N],[6,"P404","","",N,N],[6,"N404","","",N,N],[6,"U405","","",N,N],[6,"P405","","",N,N],[6,"N405","","",N,N],[6,"U406","","",N,N],[6,"P406","","",N,N],[6,"N406","","",N,N],[6,"U407","","",N,N],[6,"P407","","",N,N],[6,"N407","","",N,N],[6,"U408","","",N,N],[6,"P408","","",N,N],[6,"N408","","",N,N],[6,"U409","","",N,N],[6,"P409","","",N,N],[6,"N409","","",N,N],[6,"U410","","",N,N],[6,"P410","","",N,N],[6,"N410","","",N,N],[6,"U411","","",N,N],[6,"P411","","",N,N],[6,"N411","","",N,N],[6,"U412","","",N,N],[6,"P412","","",N,N],[6,"N412","","",N,N],[6,"U413","","",N,N],[6,"P413","","",N,N],[6,"N413","","",N,N],[6,"U414","","",N,N],[6,"P414","","",N,N],[6,"N414","","",N,N],[6,"U415","","",N,N],[6,"P415","","",N,N],[6,"N415","","",N,N],[6,"U416","","",N,N],[6,"P416","","",N,N],[6,"N416","","",N,N],[6,"U417","","",N,N],[6,"P417","","",N,N],[6,"N417","","",N,N],[6,"U418","","",N,N],[6,"P418","","",N,N],[6,"N418","","",N,N],[6,"U419","","",N,N],[6,"P419","","",N,N],[6,"N419","","",N,N],[6,"U420","","",N,N],[6,"P420","","",N,N],[6,"N420","","",N,N],[6,"U421","","",N,N],[6,"P421","","",N,N],[6,"N421","","",N,N],[6,"U422","","",N,N],[6,"P422","","",N,N],[6,"N422","","",N,N],[6,"U423","","",N,N],[6,"P423","","",N,N],[6,"N423","","",N,N],[6,"U424","","",N,N],[6,"P424","","",N,N],[6,"N424","","",N,N],[6,"U425","","",N,N],[6,"P425","","",N,N],[6,"N425","","",N,N],[6,"U426","","",N,N],[6,"P426","","",N,N],[6,"N426","","",N,N],[6,"U427","","",N,N],[6,"P427","","",N,N],[6,"N427","","",N,N],[6,"U428","","",N,N],[6,"P428","","",N,N],[6,"N428","","",N,N],[6,"U429","","",N,N],[6,"P429","","",N,N],[6,"N429","","",N,N],[6,"U430","","",N,N],[6,"P430","","",N,N],[6,"N430","","",N,N],[6,"U431","","",N,N],[6,"P431","","",N,N],[6,"N431","","",N,N],[6,"U432","","",N,N],[6,"P432","","",N,N],[6,"N432","","",N,N],[6,"U433","","",N,N],[6,"P433","","",N,N],[6,"N433","","",N,N],[6,"U434","","",N,N],[6,"P434","","",N,N],[6,"N434","","",N,N],[6,"U435","","",N,N],[6,"P435","","",N,N],[6,"N435","","",N,N],[6,"U436","","",N,N],[6,"P436","","",N,N],[6,"N436","","",N,N],[6,"U437","","",N,N],[6,"P437","","",N,N],[6,"N437","","",N,N],[6,"U438","","",N,N],[6,"P438","","",N,N],[6,"N438","","",N,N],[6,"U439","","",N,N],[6,"P439","","",N,N],[6,"N439","","",N,N],[6,"U440","","",N,N],[6,"P440","","",N,N],[6,"N440","","",N,N],[6,"U441","","",N,N],[6,"P441","","",N,N],[6,"N441","","",N,N],[6,"U442","","",N,N],[6,"P442","","",N,N],[6,"N442","","",N,N],[6,"U443","","",N,N],[6,"P443","","",N,N],[6,"N443","","",N,N],[6,"U444","","",N,N],[6,"P444","","",N,N],[6,"N444","","",N,N],[6,"U445","","",N,N],[6,"P445","","",N,N],[6,"N445","","",N,N],[6,"U446","","",N,N],[6,"P446","","",N,N],[6,"N446","","",N,N],[6,"U447","","",N,N],[6,"P447","","",N,N],[6,"N447","","",N,N],[6,"U448","","",N,N],[6,"P448","","",N,N],[6,"N448","","",N,N],[6,"U449","","",N,N],[6,"P449","","",N,N],[6,"N449","","",N,N],[6,"U450","","",N,N],[6,"P450","","",N,N],[6,"N450","","",N,N],[6,"U451","","",N,N],[6,"P451","","",N,N],[6,"N451","","",N,N],[6,"U452","","",N,N],[6,"P452","","",N,N],[6,"N452","","",N,N],[6,"U453","","",N,N],[6,"P453","","",N,N],[6,"N453","","",N,N],[6,"U454","","",N,N],[6,"P454","","",N,N],[6,"N454","","",N,N],[6,"U455","","",N,N],[6,"P455","","",N,N],[6,"N455","","",N,N],[6,"U456","","",N,N],[6,"P456","","",N,N],[6,"N456","","",N,N],[6,"U457","","",N,N],[6,"P457","","",N,N],[6,"N457","","",N,N],[6,"U458","","",N,N],[6,"P458","","",N,N],[6,"N458","","",N,N],[6,"U459","","",N,N],[6,"P459","","",N,N],[6,"N459","","",N,N],[6,"U460","","",N,N],[6,"P460","","",N,N],[6,"N460","","",N,N],[6,"U461","","",N,N],[6,"P461","","",N,N],[6,"N461","","",N,N],[6,"U462","","",N,N],[6,"P462","","",N,N],[6,"N462","","",N,N],[6,"U463","","",N,N],[6,"P463","","",N,N],[6,"N463","","",N,N],[6,"U464","","",N,N],[6,"P464","","",N,N],[6,"N464","","",N,N],[6,"U465","","",N,N],[6,"P465","","",N,N],[6,"N465","","",N,N],[6,"U466","","",N,N],[6,"P466","","",N,N],[6,"N466","","",N,N],[6,"U467","","",N,N],[6,"P467","","",N,N],[6,"N467","","",N,N],[6,"U468","","",N,N],[6,"P468","","",N,N],[6,"N468","","",N,N],[6,"U469","","",N,N],[6,"P469","","",N,N],[6,"N469","","",N,N],[6,"U470","","",N,N],[6,"P470","","",N,N],[6,"N470","","",N,N],[6,"U471","","",N,N],[6,"P471","","",N,N],[6,"N471","","",N,N],[6,"U472","","",N,N],[6,"P472","","",N,N],[6,"N472","","",N,N],[6,"U473","","",N,N],[6,"P473","","",N,N],[6,"N473","","",N,N],[6,"U474","","",N,N],[6,"P474","","",N,N],[6,"N474","","",N,N],[6,"U475","","",N,N],[6,"P475","","",N,N],[6,"N475","","",N,N],[6,"U476","","",N,N],[6,"P476","","",N,N],[6,"N476","","",N,N],[6,"U477","","",N,N],[6,"P477","","",N,N],[6,"N477","","",N,N],[6,"U478","","",N,N],[6,"P478","","",N,N],[6,"N478","","",N,N],[6,"U479","","",N,N],[6,"P479","","",N,N],[6,"N479","","",N,N],[6,"U480","","",N,N],[6,"P480","","",N,N],[6,"N480","","",N,N],[6,"U481","","",N,N],[6,"P481","","",N,N],[6,"N481","","",N,N],[6,"U482","","",N,N],[6,"P482","","",N,N],[6,"N482","","",N,N],[6,"U483","","",N,N],[6,"P483","","",N,N],[6,"N483","","",N,N],[6,"U484","","",N,N],[6,"P484","","",N,N],[6,"N484","","",N,N],[6,"U485","","",N,N],[6,"P485","","",N,N],[6,"N485","","",N,N],[6,"U486","","",N,N],[6,"P486","","",N,N],[6,"N486","","",N,N],[6,"U487","","",N,N],[6,"P487","","",N,N],[6,"N487","","",N,N],[6,"U488","","",N,N],[6,"P488","","",N,N],[6,"N488","","",N,N],[6,"U489","","",N,N],[6,"P489","","",N,N],[6,"N489","","",N,N],[6,"U490","","",N,N],[6,"P490","","",N,N],[6,"N490","","",N,N],[6,"U491","","",N,N],[6,"P491","","",N,N],[6,"N491","","",N,N],[6,"U492","","",N,N],[6,"P492","","",N,N],[6,"N492","","",N,N],[6,"U493","","",N,N],[6,"P493","","",N,N],[6,"N493","","",N,N],[6,"U494","","",N,N],[6,"P494","","",N,N],[6,"N494","","",N,N],[6,"U495","","",N,N],[6,"P495","","",N,N],[6,"N495","","",N,N],[6,"U496","","",N,N],[6,"P496","","",N,N],[6,"N496","","",N,N],[6,"U497","","",N,N],[6,"P497","","",N,N],[6,"N497","","",N,N],[6,"U498","","",N,N],[6,"P498","","",N,N],[6,"N498","","",N,N],[6,"U499","","",N,N],[6,"P499","","",N,N],[6,"N499","","",N,N],[6,"U500","","",N,N],[6,"P500","","",N,N],[6,"N500","","",N,N],[6,"U501","","",N,N],[6,"P501","","",N,N],[6,"N501","","",N,N],[6,"U502","","",N,N],[6,"P502","","",N,N],[6,"N502","","",N,N],[6,"U503","","",N,N],[6,"P503","","",N,N],[6,"N503","","",N,N],[6,"U504","","",N,N],[6,"P504","","",N,N],[6,"N504","","",N,N],[6,"U505","","",N,N],[6,"P505","","",N,N],[6,"N505","","",N,N],[6,"U506","","",N,N],[6,"P506","","",N,N],[6,"N506","","",N,N],[6,"U507","","",N,N],[6,"P507","","",N,N],[6,"N507","","",N,N],[6,"U508","","",N,N],[6,"P508","","",N,N],[6,"N508","","",N,N],[6,"U509","","",N,N],[6,"P509","","",N,N],[6,"N509","","",N,N],[6,"U510","","",N,N],[6,"P510","","",N,N],[6,"N510","","",N,N],[6,"U511","","",N,N],[6,"P511","","",N,N],[6,"N511","","",N,N],[6,"U512","","",N,N],[6,"P512","","",N,N],[6,"N512","","",N,N],[6,"U513","","",N,N],[6,"P513","","",N,N],[6,"N513","","",N,N],[6,"U514","","",N,N],[6,"P514","","",N,N],[6,"N514","","",N,N],[6,"U515","","",N,N],[6,"P515","","",N,N],[6,"N515","","",N,N],[6,"U516","","",N,N],[6,"P516","","",N,N],[6,"N516","","",N,N],[6,"U517","","",N,N],[6,"P517","","",N,N],[6,"N517","","",N,N],[6,"U518","","",N,N],[6,"P518","","",N,N],[6,"N518","","",N,N],[6,"U519","","",N,N],[6,"P519","","",N,N],[6,"N519","","",N,N],[6,"U520","","",N,N],[6,"P520","","",N,N],[6,"N520","","",N,N],[6,"U521","","",N,N],[6,"P521","","",N,N],[6,"N521","","",N,N],[6,"U522","","",N,N],[6,"P522","","",N,N],[6,"N522","","",N,N],[6,"U523","","",N,N],[6,"P523","","",N,N],[6,"N523","","",N,N],[6,"U524","","",N,N],[6,"P524","","",N,N],[6,"N524","","",N,N],[6,"U525","","",N,N],[6,"P525","","",N,N],[6,"N525","","",N,N],[6,"U526","","",N,N],[6,"P526","","",N,N],[6,"N526","","",N,N],[6,"U527","","",N,N],[6,"P527","","",N,N],[6,"N527","","",N,N],[6,"U528","","",N,N],[6,"P528","","",N,N],[6,"N528","","",N,N],[6,"U529","","",N,N],[6,"P529","","",N,N],[6,"N529","","",N,N],[6,"U530","","",N,N],[6,"P530","","",N,N],[6,"N530","","",N,N],[6,"U531","","",N,N],[6,"P531","","",N,N],[6,"N531","","",N,N],[6,"U532","","",N,N],[6,"P532","","",N,N],[6,"N532","","",N,N],[6,"U533","","",N,N],[6,"P533","","",N,N],[6,"N533","","",N,N],[6,"U534","","",N,N],[6,"P534","","",N,N],[6,"N534","","",N,N],[6,"U535","","",N,N],[6,"P535","","",N,N],[6,"N535","","",N,N],[6,"U536","","",N,N],[6,"P536","","",N,N],[6,"N536","","",N,N],[6,"U537","","",N,N],[6,"P537","","",N,N],[6,"N537","","",N,N],[6,"U538","","",N,N],[6,"P538","","",N,N],[6,"N538","","",N,N],[6,"U539","","",N,N],[6,"P539","","",N,N],[6,"N539","","",N,N],[6,"U540","","",N,N],[6,"P540","","",N,N],[6,"N540","","",N,N],[6,"U541","","",N,N],[6,"P541","","",N,N],[6,"N541","","",N,N],[6,"U542","","",N,N],[6,"P542","","",N,N],[6,"N542","","",N,N],[6,"U543","","",N,N],[6,"P543","","",N,N],[6,"N543","","",N,N],[6,"U544","","",N,N],[6,"P544","","",N,N],[6,"N544","","",N,N],[6,"U545","","",N,N],[6,"P545","","",N,N],[6,"N545","","",N,N],[6,"U546","","",N,N],[6,"P546","","",N,N],[6,"N546","","",N,N],[6,"U547","","",N,N],[6,"P547","","",N,N],[6,"N547","","",N,N],[6,"U548","","",N,N],[6,"P548","","",N,N],[6,"N548","","",N,N],[6,"U549","","",N,N],[6,"P549","","",N,N],[6,"N549","","",N,N],[6,"U550","","",N,N],[6,"P550","","",N,N],[6,"N550","","",N,N],[6,"U551","","",N,N],[6,"P551","","",N,N],[6,"N551","","",N,N],[6,"U552","","",N,N],[6,"P552","","",N,N],[6,"N552","","",N,N],[6,"U553","","",N,N],[6,"P553","","",N,N],[6,"N553","","",N,N],[6,"U554","","",N,N],[6,"P554","","",N,N],[6,"N554","","",N,N],[6,"U555","","",N,N],[6,"P555","","",N,N],[6,"N555","","",N,N],[6,"U556","","",N,N],[6,"P556","","",N,N],[6,"N556","","",N,N],[6,"U557","","",N,N],[6,"P557","","",N,N],[6,"N557","","",N,N],[6,"U558","","",N,N],[6,"P558","","",N,N],[6,"N558","","",N,N],[6,"U559","","",N,N],[6,"P559","","",N,N],[6,"N559","","",N,N],[6,"U560","","",N,N],[6,"P560","","",N,N],[6,"N560","","",N,N],[6,"U561","","",N,N],[6,"P561","","",N,N],[6,"N561","","",N,N],[6,"U562","","",N,N],[6,"P562","","",N,N],[6,"N562","","",N,N],[6,"U563","","",N,N],[6,"P563","","",N,N],[6,"N563","","",N,N],[6,"U564","","",N,N],[6,"P564","","",N,N],[6,"N564","","",N,N],[6,"U565","","",N,N],[6,"P565","","",N,N],[6,"N565","","",N,N],[6,"U566","","",N,N],[6,"P566","","",N,N],[6,"N566","","",N,N],[6,"U567","","",N,N],[6,"P567","","",N,N],[6,"N567","","",N,N],[6,"U568","","",N,N],[6,"P568","","",N,N],[6,"N568","","",N,N],[6,"U569","","",N,N],[6,"P569","","",N,N],[6,"N569","","",N,N],[6,"U570","","",N,N],[6,"P570","","",N,N],[6,"N570","","",N,N],[6,"U571","","",N,N],[6,"P571","","",N,N],[6,"N571","","",N,N],[6,"U572","","",N,N],[6,"P572","","",N,N],[6,"N572","","",N,N],[6,"U573","","",N,N],[6,"P573","","",N,N],[6,"N573","","",N,N],[6,"U574","","",N,N],[6,"P574","","",N,N],[6,"N574","","",N,N],[6,"U575","","",N,N],[6,"P575","","",N,N],[6,"N575","","",N,N],[6,"U576","","",N,N],[6,"P576","","",N,N],[6,"N576","","",N,N],[6,"U577","","",N,N],[6,"P577","","",N,N],[6,"N577","","",N,N],[6,"U578","","",N,N],[6,"P578","","",N,N],[6,"N578","","",N,N],[6,"U579","","",N,N],[6,"P579","","",N,N],[6,"N579","","",N,N],[6,"U580","","",N,N],[6,"P580","","",N,N],[6,"N580","","",N,N],[6,"U581","","",N,N],[6,"P581","","",N,N],[6,"N581","","",N,N],[6,"U582","","",N,N],[6,"P582","","",N,N],[6,"N582","","",N,N],[6,"U583","","",N,N],[6,"P583","","",N,N],[6,"N583","","",N,N],[6,"U584","","",N,N],[6,"P584","","",N,N],[6,"N584","","",N,N],[6,"U585","","",N,N],[6,"P585","","",N,N],[6,"N585","","",N,N],[6,"U586","","",N,N],[6,"P586","","",N,N],[6,"N586","","",N,N],[6,"U587","","",N,N],[6,"P587","","",N,N],[6,"N587","","",N,N],[6,"U588","","",N,N],[6,"P588","","",N,N],[6,"N588","","",N,N],[6,"U589","","",N,N],[6,"P589","","",N,N],[6,"N589","","",N,N],[6,"U590","","",N,N],[6,"P590","","",N,N],[6,"N590","","",N,N],[6,"U591","","",N,N],[6,"P591","","",N,N],[6,"N591","","",N,N],[6,"U592","","",N,N],[6,"P592","","",N,N],[6,"N592","","",N,N],[6,"U593","","",N,N],[6,"P593","","",N,N],[6,"N593","","",N,N],[6,"U594","","",N,N],[6,"P594","","",N,N],[6,"N594","","",N,N],[6,"U595","","",N,N],[6,"P595","","",N,N],[6,"N595","","",N,N],[6,"U596","","",N,N],[6,"P596","","",N,N],[6,"N596","","",N,N],[6,"U597","","",N,N],[6,"P597","","",N,N],[6,"N597","","",N,N],[6,"U598","","",N,N],[6,"P598","","",N,N],[6,"N598","","",N,N],[6,"U599","","",N,N],[6,"P599","","",N,N],[6,"N599","","",N,N],[6,"U600","","",N,N],[6,"P600","","",N,N],[6,"N600","","",N,N],[6,"U601","","",N,N],[6,"P601","","",N,N],[6,"N601","","",N,N],[6,"U602","","",N,N],[6,"P602","","",N,N],[6,"N602","","",N,N],[6,"U603","","",N,N],[6,"P603","","",N,N],[6,"N603","","",N,N],[6,"U604","","",N,N],[6,"P604","","",N,N],[6,"N604","","",N,N],[6,"U605","","",N,N],[6,"P605","","",N,N],[6,"N605","","",N,N],[6,"U606","","",N,N],[6,"P606","","",N,N],[6,"N606","","",N,N],[6,"U607","","",N,N],[6,"P607","","",N,N],[6,"N607","","",N,N],[6,"U608","","",N,N],[6,"P608","","",N,N],[6,"N608","","",N,N],[6,"U609","","",N,N],[6,"P609","","",N,N],[6,"N609","","",N,N],[6,"U610","","",N,N],[6,"P610","","",N,N],[6,"N610","","",N,N],[6,"U611","","",N,N],[6,"P611","","",N,N],[6,"N611","","",N,N],[6,"U612","","",N,N],[6,"P612","","",N,N],[6,"N612","","",N,N],[6,"U613","","",N,N],[6,"P613","","",N,N],[6,"N613","","",N,N],[6,"U614","","",N,N],[6,"P614","","",N,N],[6,"N614","","",N,N],[6,"U615","","",N,N],[6,"P615","","",N,N],[6,"N615","","",N,N],[6,"U616","","",N,N],[6,"P616","","",N,N],[6,"N616","","",N,N],[6,"U617","","",N,N],[6,"P617","","",N,N],[6,"N617","","",N,N],[6,"U618","","",N,N],[6,"P618","","",N,N],[6,"N618","","",N,N],[6,"U619","","",N,N],[6,"P619","","",N,N],[6,"N619","","",N,N],[6,"U620","","",N,N],[6,"P620","","",N,N],[6,"N620","","",N,N],[6,"U621","","",N,N],[6,"P621","","",N,N],[6,"N621","","",N,N],[6,"U622","","",N,N],[6,"P622","","",N,N],[6,"N622","","",N,N],[6,"U623","","",N,N],[6,"P623","","",N,N],[6,"N623","","",N,N],[6,"U624","","",N,N],[6,"P624","","",N,N],[6,"N624","","",N,N],[6,"U625","","",N,N],[6,"P625","","",N,N],[6,"N625","","",N,N],[6,"U626","","",N,N],[6,"P626","","",N,N],[6,"N626","","",N,N],[6,"U627","","",N,N],[6,"P627","","",N,N],[6,"N627","","",N,N],[6,"U628","","",N,N],[6,"P628","","",N,N],[6,"N628","","",N,N],[6,"U629","","",N,N],[6,"P629","","",N,N],[6,"N629","","",N,N],[6,"U630","","",N,N],[6,"P630","","",N,N],[6,"N630","","",N,N],[6,"U631","","",N,N],[6,"P631","","",N,N],[6,"N631","","",N,N],[6,"U632","","",N,N],[6,"P632","","",N,N],[6,"N632","","",N,N],[6,"U633","","",N,N],[6,"P633","","",N,N],[6,"N633","","",N,N],[6,"U634","","",N,N],[6,"P634","","",N,N],[6,"N634","","",N,N],[6,"U635","","",N,N],[6,"P635","","",N,N],[6,"N635","","",N,N],[6,"U636","","",N,N],[6,"P636","","",N,N],[6,"N636","","",N,N],[6,"U637","","",N,N],[6,"P637","","",N,N],[6,"N637","","",N,N],[6,"U638","","",N,N],[6,"P638","","",N,N],[6,"N638","","",N,N],[6,"U639","","",N,N],[6,"P639","","",N,N],[6,"N639","","",N,N],[6,"U640","","",N,N],[6,"P640","","",N,N],[6,"N640","","",N,N],[6,"U641","","",N,N],[6,"P641","","",N,N],[6,"N641","","",N,N],[6,"U642","","",N,N],[6,"P642","","",N,N],[6,"N642","","",N,N],[6,"U643","","",N,N],[6,"P643","","",N,N],[6,"N643","","",N,N],[6,"U644","","",N,N],[6,"P644","","",N,N],[6,"N644","","",N,N],[6,"U645","","",N,N],[6,"P645","","",N,N],[6,"N645","","",N,N],[6,"U646","","",N,N],[6,"P646","","",N,N],[6,"N646","","",N,N],[6,"U647","","",N,N],[6,"P647","","",N,N],[6,"N647","","",N,N],[6,"U648","","",N,N],[6,"P648","","",N,N],[6,"N648","","",N,N],[6,"U649","","",N,N],[6,"P649","","",N,N],[6,"N649","","",N,N],[6,"U650","","",N,N],[6,"P650","","",N,N],[6,"N650","","",N,N],[6,"U651","","",N,N],[6,"P651","","",N,N],[6,"N651","","",N,N],[6,"U652","","",N,N],[6,"P652","","",N,N],[6,"N652","","",N,N],[6,"U653","","",N,N],[6,"P653","","",N,N],[6,"N653","","",N,N],[6,"U654","","",N,N],[6,"P654","","",N,N],[6,"N654","","",N,N],[6,"U655","","",N,N],[6,"P655","","",N,N],[6,"N655","","",N,N],[6,"U656","","",N,N],[6,"P656","","",N,N],[6,"N656","","",N,N],[6,"U657","","",N,N],[6,"P657","","",N,N],[6,"N657","","",N,N],[6,"U658","","",N,N],[6,"P658","","",N,N],[6,"N658","","",N,N],[6,"U659","","",N,N],[6,"P659","","",N,N],[6,"N659","","",N,N],[6,"U660","","",N,N],[6,"P660","","",N,N],[6,"N660","","",N,N],[6,"U661","","",N,N],[6,"P661","","",N,N],[6,"N661","","",N,N],[6,"U662","","",N,N],[6,"P662","","",N,N],[6,"N662","","",N,N],[6,"U663","","",N,N],[6,"P663","","",N,N],[6,"N663","","",N,N],[6,"U664","","",N,N],[6,"P664","","",N,N],[6,"N664","","",N,N],[6,"U665","","",N,N],[6,"P665","","",N,N],[6,"N665","","",N,N],[6,"U666","","",N,N],[6,"P666","","",N,N],[6,"N666","","",N,N],[6,"U667","","",N,N],[6,"P667","","",N,N],[6,"N667","","",N,N],[6,"U668","","",N,N],[6,"P668","","",N,N],[6,"N668","","",N,N],[6,"U669","","",N,N],[6,"P669","","",N,N],[6,"N669","","",N,N],[6,"U670","","",N,N],[6,"P670","","",N,N],[6,"N670","","",N,N],[6,"U671","","",N,N],[6,"P671","","",N,N],[6,"N671","","",N,N],[6,"U672","","",N,N],[6,"P672","","",N,N],[6,"N672","","",N,N],[6,"U673","","",N,N],[6,"P673","","",N,N],[6,"N673","","",N,N],[6,"U674","","",N,N],[6,"P674","","",N,N],[6,"N674","","",N,N],[6,"U675","","",N,N],[6,"P675","","",N,N],[6,"N675","","",N,N],[6,"U676","","",N,N],[6,"P676","","",N,N],[6,"N676","","",N,N],[6,"U677","","",N,N],[6,"P677","","",N,N],[6,"N677","","",N,N],[6,"U678","","",N,N],[6,"P678","","",N,N],[6,"N678","","",N,N],[6,"U679","","",N,N],[6,"P679","","",N,N],[6,"N679","","",N,N],[6,"U680","","",N,N],[6,"P680","","",N,N],[6,"N680","","",N,N],[6,"U681","","",N,N],[6,"P681","","",N,N],[6,"N681","","",N,N],[6,"U682","","",N,N],[6,"P682","","",N,N],[6,"N682","","",N,N],[6,"U683","","",N,N],[6,"P683","","",N,N],[6,"N683","","",N,N],[6,"U684","","",N,N],[6,"P684","","",N,N],[6,"N684","","",N,N],[6,"U685","","",N,N],[6,"P685","","",N,N],[6,"N685","","",N,N],[6,"U686","","",N,N],[6,"P686","","",N,N],[6,"N686","","",N,N],[6,"U687","","",N,N],[6,"P687","","",N,N],[6,"N687","","",N,N],[6,"U688","","",N,N],[6,"P688","","",N,N],[6,"N688","","",N,N],[6,"U689","","",N,N],[6,"P689","","",N,N],[6,"N689","","",N,N],[6,"U690","","",N,N],[6,"P690","","",N,N],[6,"N690","","",N,N],[6,"U691","","",N,N],[6,"P691","","",N,N],[6,"N691","","",N,N],[6,"U692","","",N,N],[6,"P692","","",N,N],[6,"N692","","",N,N],[6,"U693","","",N,N],[6,"P693","","",N,N],[6,"N693","","",N,N],[6,"U694","","",N,N],[6,"P694","","",N,N],[6,"N694","","",N,N],[6,"U695","","",N,N],[6,"P695","","",N,N],[6,"N695","","",N,N],[6,"U696","","",N,N],[6,"P696","","",N,N],[6,"N696","","",N,N],[6,"U697","","",N,N],[6,"P697","","",N,N],[6,"N697","","",N,N],[6,"U698","","",N,N],[6,"P698","","",N,N],[6,"N698","","",N,N],[6,"U699","","",N,N],[6,"P699","","",N,N],[6,"N699","","",N,N],[6,"U700","","",N,N],[6,"P700","","",N,N],[6,"N700","","",N,N],[6,"U701","","",N,N],[6,"P701","","",N,N],[6,"N701","","",N,N],[6,"U702","","",N,N],[6,"P702","","",N,N],[6,"N702","","",N,N],[6,"U703","","",N,N],[6,"P703","","",N,N],[6,"N703","","",N,N],[6,"U704","","",N,N],[6,"P704","","",N,N],[6,"N704","","",N,N],[6,"U705","","",N,N],[6,"P705","","",N,N],[6,"N705","","",N,N],[6,"U706","","",N,N],[6,"P706","","",N,N],[6,"N706","","",N,N],[6,"U707","","",N,N],[6,"P707","","",N,N],[6,"N707","","",N,N],[6,"U708","","",N,N],[6,"P708","","",N,N],[6,"N708","","",N,N],[6,"U709","","",N,N],[6,"P709","","",N,N],[6,"N709","","",N,N],[6,"U710","","",N,N],[6,"P710","","",N,N],[6,"N710","","",N,N],[6,"U711","","",N,N],[6,"P711","","",N,N],[6,"N711","","",N,N],[6,"U712","","",N,N],[6,"P712","","",N,N],[6,"N712","","",N,N],[6,"U713","","",N,N],[6,"P713","","",N,N],[6,"N713","","",N,N],[6,"U714","","",N,N],[6,"P714","","",N,N],[6,"N714","","",N,N],[6,"U715","","",N,N],[6,"P715","","",N,N],[6,"N715","","",N,N],[6,"U716","","",N,N],[6,"P716","","",N,N],[6,"N716","","",N,N],[6,"U717","","",N,N],[6,"P717","","",N,N],[6,"N717","","",N,N],[6,"U718","","",N,N],[6,"P718","","",N,N],[6,"N718","","",N,N],[6,"U719","","",N,N],[6,"P719","","",N,N],[6,"N719","","",N,N],[6,"U720","","",N,N],[6,"P720","","",N,N],[6,"N720","","",N,N],[6,"U721","","",N,N],[6,"P721","","",N,N],[6,"N721","","",N,N],[6,"U722","","",N,N],[6,"P722","","",N,N],[6,"N722","","",N,N],[6,"U723","","",N,N],[6,"P723","","",N,N],[6,"N723","","",N,N],[6,"U724","","",N,N],[6,"P724","","",N,N],[6,"N724","","",N,N],[6,"U725","","",N,N],[6,"P725","","",N,N],[6,"N725","","",N,N],[6,"U726","","",N,N],[6,"P726","","",N,N],[6,"N726","","",N,N],[6,"U727","","",N,N],[6,"P727","","",N,N],[6,"N727","","",N,N],[6,"U728","","",N,N],[6,"P728","","",N,N],[6,"N728","","",N,N],[6,"U729","","",N,N],[6,"P729","","",N,N],[6,"N729","","",N,N],[6,"U730","","",N,N],[6,"P730","","",N,N],[6,"N730","","",N,N],[6,"U731","","",N,N],[6,"P731","","",N,N],[6,"N731","","",N,N],[6,"U732","","",N,N],[6,"P732","","",N,N],[6,"N732","","",N,N],[6,"U733","","",N,N],[6,"P733","","",N,N],[6,"N733","","",N,N],[6,"U734","","",N,N],[6,"P734","","",N,N],[6,"N734","","",N,N],[6,"U735","","",N,N],[6,"P735","","",N,N],[6,"N735","","",N,N],[6,"U736","","",N,N],[6,"P736","","",N,N],[6,"N736","","",N,N],[6,"U737","","",N,N],[6,"P737","","",N,N],[6,"N737","","",N,N],[6,"U738","","",N,N],[6,"P738","","",N,N],[6,"N738","","",N,N],[6,"U739","","",N,N],[6,"P739","","",N,N],[6,"N739","","",N,N],[6,"U740","","",N,N],[6,"P740","","",N,N],[6,"N740","","",N,N],[6,"U741","","",N,N],[6,"P741","","",N,N],[6,"N741","","",N,N],[6,"U742","","",N,N],[6,"P742","","",N,N],[6,"N742","","",N,N],[6,"U743","","",N,N],[6,"P743","","",N,N],[6,"N743","","",N,N],[6,"U744","","",N,N],[6,"P744","","",N,N],[6,"N744","","",N,N],[6,"U745","","",N,N],[6,"P745","","",N,N],[6,"N745","","",N,N],[6,"U746","","",N,N],[6,"P746","","",N,N],[6,"N746","","",N,N],[6,"U747","","",N,N],[6,"P747","","",N,N],[6,"N747","","",N,N],[6,"U748","","",N,N],[6,"P748","","",N,N],[6,"N748","","",N,N],[6,"U749","","",N,N],[6,"P749","","",N,N],[6,"N749","","",N,N],[6,"U750","","",N,N],[6,"P750","","",N,N],[6,"N750","","",N,N],[6,"U751","","",N,N],[6,"P751","","",N,N],[6,"N751","","",N,N],[6,"U752","","",N,N],[6,"P752","","",N,N],[6,"N752","","",N,N],[6,"U753","","",N,N],[6,"P753","","",N,N],[6,"N753","","",N,N],[6,"U754","","",N,N],[6,"P754","","",N,N],[6,"N754","","",N,N],[6,"U755","","",N,N],[6,"P755","","",N,N],[6,"N755","","",N,N],[6,"U756","","",N,N],[6,"P756","","",N,N],[6,"N756","","",N,N],[6,"U757","","",N,N],[6,"P757","","",N,N],[6,"N757","","",N,N],[6,"U758","","",N,N],[6,"P758","","",N,N],[6,"N758","","",N,N],[6,"U759","","",N,N],[6,"P759","","",N,N],[6,"N759","","",N,N],[6,"U760","","",N,N],[6,"P760","","",N,N],[6,"N760","","",N,N],[6,"U761","","",N,N],[6,"P761","","",N,N],[6,"N761","","",N,N],[6,"U762","","",N,N],[6,"P762","","",N,N],[6,"N762","","",N,N],[6,"U763","","",N,N],[6,"P763","","",N,N],[6,"N763","","",N,N],[6,"U764","","",N,N],[6,"P764","","",N,N],[6,"N764","","",N,N],[6,"U765","","",N,N],[6,"P765","","",N,N],[6,"N765","","",N,N],[6,"U766","","",N,N],[6,"P766","","",N,N],[6,"N766","","",N,N],[6,"U767","","",N,N],[6,"P767","","",N,N],[6,"N767","","",N,N],[6,"U768","","",N,N],[6,"P768","","",N,N],[6,"N768","","",N,N],[6,"U769","","",N,N],[6,"P769","","",N,N],[6,"N769","","",N,N],[6,"U770","","",N,N],[6,"P770","","",N,N],[6,"N770","","",N,N],[6,"U771","","",N,N],[6,"P771","","",N,N],[6,"N771","","",N,N],[6,"U772","","",N,N],[6,"P772","","",N,N],[6,"N772","","",N,N],[6,"U773","","",N,N],[6,"P773","","",N,N],[6,"N773","","",N,N],[6,"U774","","",N,N],[6,"P774","","",N,N],[6,"N774","","",N,N],[6,"U775","","",N,N],[6,"P775","","",N,N],[6,"N775","","",N,N],[6,"U776","","",N,N],[6,"P776","","",N,N],[6,"N776","","",N,N],[6,"U777","","",N,N],[6,"P777","","",N,N],[6,"N777","","",N,N],[6,"U778","","",N,N],[6,"P778","","",N,N],[6,"N778","","",N,N],[6,"U779","","",N,N],[6,"P779","","",N,N],[6,"N779","","",N,N],[6,"U780","","",N,N],[6,"P780","","",N,N],[6,"N780","","",N,N],[6,"U781","","",N,N],[6,"P781","","",N,N],[6,"N781","","",N,N],[6,"U782","","",N,N],[6,"P782","","",N,N],[6,"N782","","",N,N],[6,"U783","","",N,N],[6,"P783","","",N,N],[6,"N783","","",N,N],[6,"U784","","",N,N],[6,"P784","","",N,N],[6,"N784","","",N,N],[6,"U785","","",N,N],[6,"P785","","",N,N],[6,"N785","","",N,N],[6,"U786","","",N,N],[6,"P786","","",N,N],[6,"N786","","",N,N],[6,"U787","","",N,N],[6,"P787","","",N,N],[6,"N787","","",N,N],[6,"U788","","",N,N],[6,"P788","","",N,N],[6,"N788","","",N,N],[6,"U789","","",N,N],[6,"P789","","",N,N],[6,"N789","","",N,N],[6,"U790","","",N,N],[6,"P790","","",N,N],[6,"N790","","",N,N],[6,"U791","","",N,N],[6,"P791","","",N,N],[6,"N791","","",N,N],[6,"U792","","",N,N],[6,"P792","","",N,N],[6,"N792","","",N,N],[6,"U793","","",N,N],[6,"P793","","",N,N],[6,"N793","","",N,N],[6,"U794","","",N,N],[6,"P794","","",N,N],[6,"N794","","",N,N],[6,"U795","","",N,N],[6,"P795","","",N,N],[6,"N795","","",N,N],[6,"U796","","",N,N],[6,"P796","","",N,N],[6,"N796","","",N,N],[6,"U797","","",N,N],[6,"P797","","",N,N],[6,"N797","","",N,N],[6,"U798","","",N,N],[6,"P798","","",N,N],[6,"N798","","",N,N],[6,"U799","","",N,N],[6,"P799","","",N,N],[6,"N799","","",N,N],[6,"U800","","",N,N],[6,"P800","","",N,N],[6,"N800","","",N,N],[6,"U801","","",N,N],[6,"P801","","",N,N],[6,"N801","","",N,N],[6,"U802","","",N,N],[6,"P802","","",N,N],[6,"N802","","",N,N],[6,"U803","","",N,N],[6,"P803","","",N,N],[6,"N803","","",N,N],[6,"U804","","",N,N],[6,"P804","","",N,N],[6,"N804","","",N,N],[6,"U805","","",N,N],[6,"P805","","",N,N],[6,"N805","","",N,N],[6,"U806","","",N,N],[6,"P806","","",N,N],[6,"N806","","",N,N],[6,"U807","","",N,N],[6,"P807","","",N,N],[6,"N807","","",N,N],[6,"U808","","",N,N],[6,"P808","","",N,N],[6,"N808","","",N,N],[6,"U809","","",N,N],[6,"P809","","",N,N],[6,"N809","","",N,N],[6,"U810","","",N,N],[6,"P810","","",N,N],[6,"N810","","",N,N],[6,"U811","","",N,N],[6,"P811","","",N,N],[6,"N811","","",N,N],[6,"U812","","",N,N],[6,"P812","","",N,N],[6,"N812","","",N,N],[6,"U813","","",N,N],[6,"P813","","",N,N],[6,"N813","","",N,N],[6,"U814","","",N,N],[6,"P814","","",N,N],[6,"N814","","",N,N],[6,"U815","","",N,N],[6,"P815","","",N,N],[6,"N815","","",N,N],[6,"U816","","",N,N],[6,"P816","","",N,N],[6,"N816","","",N,N],[6,"U817","","",N,N],[6,"P817","","",N,N],[6,"N817","","",N,N],[6,"U818","","",N,N],[6,"P818","","",N,N],[6,"N818","","",N,N],[6,"U819","","",N,N],[6,"P819","","",N,N],[6,"N819","","",N,N],[6,"U820","","",N,N],[6,"P820","","",N,N],[6,"N820","","",N,N],[6,"U821","","",N,N],[6,"P821","","",N,N],[6,"N821","","",N,N],[6,"U822","","",N,N],[6,"P822","","",N,N],[6,"N822","","",N,N],[6,"U823","","",N,N],[6,"P823","","",N,N],[6,"N823","","",N,N],[6,"U824","","",N,N],[6,"P824","","",N,N],[6,"N824","","",N,N],[6,"U825","","",N,N],[6,"P825","","",N,N],[6,"N825","","",N,N],[6,"U826","","",N,N],[6,"P826","","",N,N],[6,"N826","","",N,N],[6,"U827","","",N,N],[6,"P827","","",N,N],[6,"N827","","",N,N],[6,"U828","","",N,N],[6,"P828","","",N,N],[6,"N828","","",N,N],[6,"U829","","",N,N],[6,"P829","","",N,N],[6,"N829","","",N,N],[6,"U830","","",N,N],[6,"P830","","",N,N],[6,"N830","","",N,N],[6,"U831","","",N,N],[6,"P831","","",N,N],[6,"N831","","",N,N],[6,"U832","","",N,N],[6,"P832","","",N,N],[6,"N832","","",N,N],[6,"U833","","",N,N],[6,"P833","","",N,N],[6,"N833","","",N,N],[6,"U834","","",N,N],[6,"P834","","",N,N],[6,"N834","","",N,N],[6,"U835","","",N,N],[6,"P835","","",N,N],[6,"N835","","",N,N],[6,"U836","","",N,N],[6,"P836","","",N,N],[6,"N836","","",N,N],[6,"U837","","",N,N],[6,"P837","","",N,N],[6,"N837","","",N,N],[6,"U838","","",N,N],[6,"P838","","",N,N],[6,"N838","","",N,N],[6,"U839","","",N,N],[6,"P839","","",N,N],[6,"N839","","",N,N],[6,"U840","","",N,N],[6,"P840","","",N,N],[6,"N840","","",N,N],[6,"U841","","",N,N],[6,"P841","","",N,N],[6,"N841","","",N,N],[6,"U842","","",N,N],[6,"P842","","",N,N],[6,"N842","","",N,N],[6,"U843","","",N,N],[6,"P843","","",N,N],[6,"N843","","",N,N],[6,"U844","","",N,N],[6,"P844","","",N,N],[6,"N844","","",N,N],[6,"U845","","",N,N],[6,"P845","","",N,N],[6,"N845","","",N,N],[6,"U846","","",N,N],[6,"P846","","",N,N],[6,"N846","","",N,N],[6,"U847","","",N,N],[6,"P847","","",N,N],[6,"N847","","",N,N],[6,"U848","","",N,N],[6,"P848","","",N,N],[6,"N848","","",N,N],[6,"U849","","",N,N],[6,"P849","","",N,N],[6,"N849","","",N,N],[6,"U850","","",N,N],[6,"P850","","",N,N],[6,"N850","","",N,N],[6,"U851","","",N,N],[6,"P851","","",N,N],[6,"N851","","",N,N],[6,"U852","","",N,N],[6,"P852","","",N,N],[6,"N852","","",N,N],[6,"U853","","",N,N],[6,"P853","","",N,N],[6,"N853","","",N,N],[6,"U854","","",N,N],[6,"P854","","",N,N],[6,"N854","","",N,N],[6,"U855","","",N,N],[6,"P855","","",N,N],[6,"N855","","",N,N],[6,"U856","","",N,N],[6,"P856","","",N,N],[6,"N856","","",N,N],[6,"U857","","",N,N],[6,"P857","","",N,N],[6,"N857","","",N,N],[6,"U858","","",N,N],[6,"P858","","",N,N],[6,"N858","","",N,N],[6,"U859","","",N,N],[6,"P859","","",N,N],[6,"N859","","",N,N],[6,"U860","","",N,N],[6,"P860","","",N,N],[6,"N860","","",N,N],[6,"U861","","",N,N],[6,"P861","","",N,N],[6,"N861","","",N,N],[6,"U862","","",N,N],[6,"P862","","",N,N],[6,"N862","","",N,N],[6,"U863","","",N,N],[6,"P863","","",N,N],[6,"N863","","",N,N],[6,"U864","","",N,N],[6,"P864","","",N,N],[6,"N864","","",N,N],[6,"U865","","",N,N],[6,"P865","","",N,N],[6,"N865","","",N,N],[6,"U866","","",N,N],[6,"P866","","",N,N],[6,"N866","","",N,N],[6,"U867","","",N,N],[6,"P867","","",N,N],[6,"N867","","",N,N],[6,"U868","","",N,N],[6,"P868","","",N,N],[6,"N868","","",N,N],[6,"U869","","",N,N],[6,"P869","","",N,N],[6,"N869","","",N,N],[6,"U870","","",N,N],[6,"P870","","",N,N],[6,"N870","","",N,N],[6,"U871","","",N,N],[6,"P871","","",N,N],[6,"N871","","",N,N],[6,"U872","","",N,N],[6,"P872","","",N,N],[6,"N872","","",N,N],[6,"U873","","",N,N],[6,"P873","","",N,N],[6,"N873","","",N,N],[6,"U874","","",N,N],[6,"P874","","",N,N],[6,"N874","","",N,N],[6,"U875","","",N,N],[6,"P875","","",N,N],[6,"N875","","",N,N],[6,"U876","","",N,N],[6,"P876","","",N,N],[6,"N876","","",N,N],[6,"U877","","",N,N],[6,"P877","","",N,N],[6,"N877","","",N,N],[6,"U878","","",N,N],[6,"P878","","",N,N],[6,"N878","","",N,N],[6,"U879","","",N,N],[6,"P879","","",N,N],[6,"N879","","",N,N],[6,"U880","","",N,N],[6,"P880","","",N,N],[6,"N880","","",N,N],[6,"U881","","",N,N],[6,"P881","","",N,N],[6,"N881","","",N,N],[6,"U882","","",N,N],[6,"P882","","",N,N],[6,"N882","","",N,N],[6,"U883","","",N,N],[6,"P883","","",N,N],[6,"N883","","",N,N],[6,"U884","","",N,N],[6,"P884","","",N,N],[6,"N884","","",N,N],[6,"U885","","",N,N],[6,"P885","","",N,N],[6,"N885","","",N,N],[6,"U886","","",N,N],[6,"P886","","",N,N],[6,"N886","","",N,N],[6,"U887","","",N,N],[6,"P887","","",N,N],[6,"N887","","",N,N],[6,"U888","","",N,N],[6,"P888","","",N,N],[6,"N888","","",N,N],[6,"U889","","",N,N],[6,"P889","","",N,N],[6,"N889","","",N,N],[6,"U890","","",N,N],[6,"P890","","",N,N],[6,"N890","","",N,N],[6,"U891","","",N,N],[6,"P891","","",N,N],[6,"N891","","",N,N],[6,"U892","","",N,N],[6,"P892","","",N,N],[6,"N892","","",N,N],[6,"U893","","",N,N],[6,"P893","","",N,N],[6,"N893","","",N,N],[6,"U894","","",N,N],[6,"P894","","",N,N],[6,"N894","","",N,N],[6,"U895","","",N,N],[6,"P895","","",N,N],[6,"N895","","",N,N],[6,"U896","","",N,N],[6,"P896","","",N,N],[6,"N896","","",N,N],[6,"U897","","",N,N],[6,"P897","","",N,N],[6,"N897","","",N,N],[6,"U898","","",N,N],[6,"P898","","",N,N],[6,"N898","","",N,N],[6,"U899","","",N,N],[6,"P899","","",N,N],[6,"N899","","",N,N],[6,"U900","","",N,N],[6,"P900","","",N,N],[6,"N900","","",N,N],[6,"U901","","",N,N],[6,"P901","","",N,N],[6,"N901","","",N,N],[6,"U902","","",N,N],[6,"P902","","",N,N],[6,"N902","","",N,N],[6,"U903","","",N,N],[6,"P903","","",N,N],[6,"N903","","",N,N],[6,"U904","","",N,N],[6,"P904","","",N,N],[6,"N904","","",N,N],[6,"U905","","",N,N],[6,"P905","","",N,N],[6,"N905","","",N,N],[6,"U906","","",N,N],[6,"P906","","",N,N],[6,"N906","","",N,N],[6,"U907","","",N,N],[6,"P907","","",N,N],[6,"N907","","",N,N],[6,"U908","","",N,N],[6,"P908","","",N,N],[6,"N908","","",N,N],[6,"U909","","",N,N],[6,"P909","","",N,N],[6,"N909","","",N,N],[6,"U910","","",N,N],[6,"P910","","",N,N],[6,"N910","","",N,N],[6,"U911","","",N,N],[6,"P911","","",N,N],[6,"N911","","",N,N],[6,"U912","","",N,N],[6,"P912","","",N,N],[6,"N912","","",N,N],[6,"U913","","",N,N],[6,"P913","","",N,N],[6,"N913","","",N,N],[6,"U914","","",N,N],[6,"P914","","",N,N],[6,"N914","","",N,N],[6,"U915","","",N,N],[6,"P915","","",N,N],[6,"N915","","",N,N],[6,"U916","","",N,N],[6,"P916","","",N,N],[6,"N916","","",N,N],[6,"U917","","",N,N],[6,"P917","","",N,N],[6,"N917","","",N,N],[6,"U918","","",N,N],[6,"P918","","",N,N],[6,"N918","","",N,N],[6,"U919","","",N,N],[6,"P919","","",N,N],[6,"N919","","",N,N],[6,"U920","","",N,N],[6,"P920","","",N,N],[6,"N920","","",N,N],[6,"U921","","",N,N],[6,"P921","","",N,N],[6,"N921","","",N,N],[6,"U922","","",N,N],[6,"P922","","",N,N],[6,"N922","","",N,N],[6,"U923","","",N,N],[6,"P923","","",N,N],[6,"N923","","",N,N],[6,"U924","","",N,N],[6,"P924","","",N,N],[6,"N924","","",N,N],[6,"U925","","",N,N],[6,"P925","","",N,N],[6,"N925","","",N,N],[6,"U926","","",N,N],[6,"P926","","",N,N],[6,"N926","","",N,N],[6,"U927","","",N,N],[6,"P927","","",N,N],[6,"N927","","",N,N],[6,"U928","","",N,N],[6,"P928","","",N,N],[6,"N928","","",N,N],[6,"U929","","",N,N],[6,"P929","","",N,N],[6,"N929","","",N,N],[6,"U930","","",N,N],[6,"P930","","",N,N],[6,"N930","","",N,N],[6,"U931","","",N,N],[6,"P931","","",N,N],[6,"N931","","",N,N],[6,"U932","","",N,N],[6,"P932","","",N,N],[6,"N932","","",N,N],[6,"U933","","",N,N],[6,"P933","","",N,N],[6,"N933","","",N,N],[6,"U934","","",N,N],[6,"P934","","",N,N],[6,"N934","","",N,N],[6,"U935","","",N,N],[6,"P935","","",N,N],[6,"N935","","",N,N],[6,"U936","","",N,N],[6,"P936","","",N,N],[6,"N936","","",N,N],[6,"U937","","",N,N],[6,"P937","","",N,N],[6,"N937","","",N,N],[6,"U938","","",N,N],[6,"P938","","",N,N],[6,"N938","","",N,N],[6,"U939","","",N,N],[6,"P939","","",N,N],[6,"N939","","",N,N],[6,"U940","","",N,N],[6,"P940","","",N,N],[6,"N940","","",N,N],[6,"U941","","",N,N],[6,"P941","","",N,N],[6,"N941","","",N,N],[6,"U942","","",N,N],[6,"P942","","",N,N],[6,"N942","","",N,N],[6,"U943","","",N,N],[6,"P943","","",N,N],[6,"N943","","",N,N],[6,"U944","","",N,N],[6,"P944","","",N,N],[6,"N944","","",N,N],[6,"U945","","",N,N],[6,"P945","","",N,N],[6,"N945","","",N,N],[6,"U946","","",N,N],[6,"P946","","",N,N],[6,"N946","","",N,N],[6,"U947","","",N,N],[6,"P947","","",N,N],[6,"N947","","",N,N],[6,"U948","","",N,N],[6,"P948","","",N,N],[6,"N948","","",N,N],[6,"U949","","",N,N],[6,"P949","","",N,N],[6,"N949","","",N,N],[6,"U950","","",N,N],[6,"P950","","",N,N],[6,"N950","","",N,N],[6,"U951","","",N,N],[6,"P951","","",N,N],[6,"N951","","",N,N],[6,"U952","","",N,N],[6,"P952","","",N,N],[6,"N952","","",N,N],[6,"U953","","",N,N],[6,"P953","","",N,N],[6,"N953","","",N,N],[6,"U954","","",N,N],[6,"P954","","",N,N],[6,"N954","","",N,N],[6,"U955","","",N,N],[6,"P955","","",N,N],[6,"N955","","",N,N],[6,"U956","","",N,N],[6,"P956","","",N,N],[6,"N956","","",N,N],[6,"U957","","",N,N],[6,"P957","","",N,N],[6,"N957","","",N,N],[6,"U958","","",N,N],[6,"P958","","",N,N],[6,"N958","","",N,N],[6,"U959","","",N,N],[6,"P959","","",N,N],[6,"N959","","",N,N],[6,"U960","","",N,N],[6,"P960","","",N,N],[6,"N960","","",N,N],[6,"U961","","",N,N],[6,"P961","","",N,N],[6,"N961","","",N,N],[6,"U962","","",N,N],[6,"P962","","",N,N],[6,"N962","","",N,N],[6,"U963","","",N,N],[6,"P963","","",N,N],[6,"N963","","",N,N],[6,"U964","","",N,N],[6,"P964","","",N,N],[6,"N964","","",N,N],[6,"U965","","",N,N],[6,"P965","","",N,N],[6,"N965","","",N,N],[6,"U966","","",N,N],[6,"P966","","",N,N],[6,"N966","","",N,N],[6,"U967","","",N,N],[6,"P967","","",N,N],[6,"N967","","",N,N],[6,"U968","","",N,N],[6,"P968","","",N,N],[6,"N968","","",N,N],[6,"U969","","",N,N],[6,"P969","","",N,N],[6,"N969","","",N,N],[6,"U970","","",N,N],[6,"P970","","",N,N],[6,"N970","","",N,N],[6,"U971","","",N,N],[6,"P971","","",N,N],[6,"N971","","",N,N],[6,"U972","","",N,N],[6,"P972","","",N,N],[6,"N972","","",N,N],[6,"U973","","",N,N],[6,"P973","","",N,N],[6,"N973","","",N,N],[6,"U974","","",N,N],[6,"P974","","",N,N],[6,"N974","","",N,N],[6,"U975","","",N,N],[6,"P975","","",N,N],[6,"N975","","",N,N],[6,"U976","","",N,N],[6,"P976","","",N,N],[6,"N976","","",N,N],[6,"U977","","",N,N],[6,"P977","","",N,N],[6,"N977","","",N,N],[6,"U978","","",N,N],[6,"P978","","",N,N],[6,"N978","","",N,N],[6,"U979","","",N,N],[6,"P979","","",N,N],[6,"N979","","",N,N],[6,"U980","","",N,N],[6,"P980","","",N,N],[6,"N980","","",N,N],[6,"U981","","",N,N],[6,"P981","","",N,N],[6,"N981","","",N,N],[6,"U982","","",N,N],[6,"P982","","",N,N],[6,"N982","","",N,N],[6,"U983","","",N,N],[6,"P983","","",N,N],[6,"N983","","",N,N],[6,"U984","","",N,N],[6,"P984","","",N,N],[6,"N984","","",N,N],[6,"U985","","",N,N],[6,"P985","","",N,N],[6,"N985","","",N,N],[6,"U986","","",N,N],[6,"P986","","",N,N],[6,"N986","","",N,N],[6,"U987","","",N,N],[6,"P987","","",N,N],[6,"N987","","",N,N],[6,"U988","","",N,N],[6,"P988","","",N,N],[6,"N988","","",N,N],[6,"U989","","",N,N],[6,"P989","","",N,N],[6,"N989","","",N,N],[6,"U990","","",N,N],[6,"P990","","",N,N],[6,"N990","","",N,N],[6,"U991","","",N,N],[6,"P991","","",N,N],[6,"N991","","",N,N],[6,"U992","","",N,N],[6,"P992","","",N,N],[6,"N992","","",N,N],[6,"U993","","",N,N],[6,"P993","","",N,N],[6,"N993","","",N,N],[6,"U994","","",N,N],[6,"P994","","",N,N],[6,"N994","","",N,N],[6,"U995","","",N,N],[6,"P995","","",N,N],[6,"N995","","",N,N],[6,"U996","","",N,N],[6,"P996","","",N,N],[6,"N996","","",N,N],[6,"U997","","",N,N],[6,"P997","","",N,N],[6,"N997","","",N,N],[6,"U998","","",N,N],[6,"P998","","",N,N],[6,"N998","","",N,N],[6,"U999","","",N,N],[6,"P999","","",N,N],[6,"N999","","",N,N],[6,"U1000","","",N,N],[6,"P1000","","",N,N],[6,"N1000","","",N,N],[6,"U1001","","",N,N],[6,"P1001","","",N,N],[6,"N1001","","",N,N],[6,"U1002","","",N,N],[6,"P1002","","",N,N],[6,"N1002","","",N,N],[6,"U1003","","",N,N],[6,"P1003","","",N,N],[6,"N1003","","",N,N],[6,"U1004","","",N,N],[6,"P1004","","",N,N],[6,"N1004","","",N,N],[6,"U1005","","",N,N],[6,"P1005","","",N,N],[6,"N1005","","",N,N],[6,"U1006","","",N,N],[6,"P1006","","",N,N],[6,"N1006","","",N,N],[6,"U1007","","",N,N],[6,"P1007","","",N,N],[6,"N1007","","",N,N],[6,"U1008","","",N,N],[6,"P1008","","",N,N],[6,"N1008","","",N,N],[6,"U1009","","",N,N],[6,"P1009","","",N,N],[6,"N1009","","",N,N],[6,"U1010","","",N,N],[6,"P1010","","",N,N],[6,"N1010","","",N,N],[6,"U1011","","",N,N],[6,"P1011","","",N,N],[6,"N1011","","",N,N],[6,"U1012","","",N,N],[6,"P1012","","",N,N],[6,"N1012","","",N,N],[6,"U1013","","",N,N],[6,"P1013","","",N,N],[6,"N1013","","",N,N],[6,"U1014","","",N,N],[6,"P1014","","",N,N],[6,"N1014","","",N,N],[6,"U1015","","",N,N],[6,"P1015","","",N,N],[6,"N1015","","",N,N],[6,"U1016","","",N,N],[6,"P1016","","",N,N],[6,"N1016","","",N,N],[6,"U1017","","",N,N],[6,"P1017","","",N,N],[6,"N1017","","",N,N],[6,"U1018","","",N,N],[6,"P1018","","",N,N],[6,"N1018","","",N,N],[6,"U1019","","",N,N],[6,"P1019","","",N,N],[6,"N1019","","",N,N],[6,"U1020","","",N,N],[6,"P1020","","",N,N],[6,"N1020","","",N,N],[6,"U1021","","",N,N],[6,"P1021","","",N,N],[6,"N1021","","",N,N],[6,"U1022","","",N,N],[6,"P1022","","",N,N],[6,"N1022","","",N,N],[6,"U1023","","",N,N],[6,"P1023","","",N,N],[6,"N1023","","",N,N],[6,"U1024","","",N,N],[6,"P1024","","",N,N],[6,"N1024","","",N,N],[6,"U2048","","",N,N],[6,"P2048","","",N,N],[6,"N2048","","",N,N],[6,"U4096","","",N,N],[6,"P4096","","",N,N],[6,"N4096","","",N,N],[6,"U8192","","",N,N],[6,"P8192","","",N,N],[6,"N8192","","",N,N],[6,"U16384","","",N,N],[6,"P16384","","",N,N],[6,"N16384","","",N,N],[6,"U32768","","",N,N],[6,"P32768","","",N,N],[6,"N32768","","",N,N],[6,"U65536","","",N,N],[6,"P65536","","",N,N],[6,"N65536","","",N,N],[6,"U131072","","",N,N],[6,"P131072","","",N,N],[6,"N131072","","",N,N],[6,"U262144","","",N,N],[6,"P262144","","",N,N],[6,"N262144","","",N,N],[6,"U524288","","",N,N],[6,"P524288","","",N,N],[6,"N524288","","",N,N],[6,"U1048576","","",N,N],[6,"P1048576","","",N,N],[6,"N1048576","","",N,N],[6,"U2097152","","",N,N],[6,"P2097152","","",N,N],[6,"N2097152","","",N,N],[6,"U4194304","","",N,N],[6,"P4194304","","",N,N],[6,"N4194304","","",N,N],[6,"U8388608","","",N,N],[6,"P8388608","","",N,N],[6,"N8388608","","",N,N],[6,"U16777216","","",N,N],[6,"P16777216","","",N,N],[6,"N16777216","","",N,N],[6,"U33554432","","",N,N],[6,"P33554432","","",N,N],[6,"N33554432","","",N,N],[6,"U67108864","","",N,N],[6,"P67108864","","",N,N],[6,"N67108864","","",N,N],[6,"U134217728","","",N,N],[6,"P134217728","","",N,N],[6,"N134217728","","",N,N],[6,"U268435456","","",N,N],[6,"P268435456","","",N,N],[6,"N268435456","","",N,N],[6,"U536870912","","",N,N],[6,"P536870912","","",N,N],[6,"N536870912","","",N,N],[6,"U1073741824","","",N,N],[6,"P1073741824","","",N,N],[6,"N1073741824","","",N,N],[6,"U2147483648","","",N,N],[6,"P2147483648","","",N,N],[6,"N2147483648","","",N,N],[6,"U4294967296","","",N,N],[6,"P4294967296","","",N,N],[6,"N4294967296","","",N,N],[6,"U8589934592","","",N,N],[6,"P8589934592","","",N,N],[6,"N8589934592","","",N,N],[6,"U17179869184","","",N,N],[6,"P17179869184","","",N,N],[6,"N17179869184","","",N,N],[6,"U34359738368","","",N,N],[6,"P34359738368","","",N,N],[6,"N34359738368","","",N,N],[6,"U68719476736","","",N,N],[6,"P68719476736","","",N,N],[6,"N68719476736","","",N,N],[6,"U137438953472","","",N,N],[6,"P137438953472","","",N,N],[6,"N137438953472","","",N,N],[6,"U274877906944","","",N,N],[6,"P274877906944","","",N,N],[6,"N274877906944","","",N,N],[6,"U549755813888","","",N,N],[6,"P549755813888","","",N,N],[6,"N549755813888","","",N,N],[6,"U1099511627776","","",N,N],[6,"P1099511627776","","",N,N],[6,"N1099511627776","","",N,N],[6,"U2199023255552","","",N,N],[6,"P2199023255552","","",N,N],[6,"N2199023255552","","",N,N],[6,"U4398046511104","","",N,N],[6,"P4398046511104","","",N,N],[6,"N4398046511104","","",N,N],[6,"U8796093022208","","",N,N],[6,"P8796093022208","","",N,N],[6,"N8796093022208","","",N,N],[6,"U17592186044416","","",N,N],[6,"P17592186044416","","",N,N],[6,"N17592186044416","","",N,N],[6,"U35184372088832","","",N,N],[6,"P35184372088832","","",N,N],[6,"N35184372088832","","",N,N],[6,"U70368744177664","","",N,N],[6,"P70368744177664","","",N,N],[6,"N70368744177664","","",N,N],[6,"U140737488355328","","",N,N],[6,"P140737488355328","","",N,N],[6,"N140737488355328","","",N,N],[6,"U281474976710656","","",N,N],[6,"P281474976710656","","",N,N],[6,"N281474976710656","","",N,N],[6,"U562949953421312","","",N,N],[6,"P562949953421312","","",N,N],[6,"N562949953421312","","",N,N],[6,"U1125899906842624","","",N,N],[6,"P1125899906842624","","",N,N],[6,"N1125899906842624","","",N,N],[6,"U2251799813685248","","",N,N],[6,"P2251799813685248","","",N,N],[6,"N2251799813685248","","",N,N],[6,"U4503599627370496","","",N,N],[6,"P4503599627370496","","",N,N],[6,"N4503599627370496","","",N,N],[6,"U9007199254740992","","",N,N],[6,"P9007199254740992","","",N,N],[6,"N9007199254740992","","",N,N],[6,"U18014398509481984","","",N,N],[6,"P18014398509481984","","",N,N],[6,"N18014398509481984","","",N,N],[6,"U36028797018963968","","",N,N],[6,"P36028797018963968","","",N,N],[6,"N36028797018963968","","",N,N],[6,"U72057594037927936","","",N,N],[6,"P72057594037927936","","",N,N],[6,"N72057594037927936","","",N,N],[6,"U144115188075855872","","",N,N],[6,"P144115188075855872","","",N,N],[6,"N144115188075855872","","",N,N],[6,"U288230376151711744","","",N,N],[6,"P288230376151711744","","",N,N],[6,"N288230376151711744","","",N,N],[6,"U576460752303423488","","",N,N],[6,"P576460752303423488","","",N,N],[6,"N576460752303423488","","",N,N],[6,"U1152921504606846976","","",N,N],[6,"P1152921504606846976","","",N,N],[6,"N1152921504606846976","","",N,N],[6,"U2305843009213693952","","",N,N],[6,"P2305843009213693952","","",N,N],[6,"N2305843009213693952","","",N,N],[6,"U4611686018427387904","","",N,N],[6,"P4611686018427387904","","",N,N],[6,"N4611686018427387904","","",N,N],[6,"U9223372036854775808","","",N,N],[6,"U10000","","",N,N],[6,"P10000","","",N,N],[6,"N10000","","",N,N],[6,"U100000","","",N,N],[6,"P100000","","",N,N],[6,"N100000","","",N,N],[6,"U1000000","","",N,N],[6,"P1000000","","",N,N],[6,"N1000000","","",N,N],[6,"U10000000","","",N,N],[6,"P10000000","","",N,N],[6,"N10000000","","",N,N],[6,"U100000000","","",N,N],[6,"P100000000","","",N,N],[6,"N100000000","","",N,N],[6,"U1000000000","","",N,N],[6,"P1000000000","","",N,N],[6,"N1000000000","","",N,N],[6,"U10000000000","","",N,N],[6,"P10000000000","","",N,N],[6,"N10000000000","","",N,N],[6,"U100000000000","","",N,N],[6,"P100000000000","","",N,N],[6,"N100000000000","","",N,N],[6,"U1000000000000","","",N,N],[6,"P1000000000000","","",N,N],[6,"N1000000000000","","",N,N],[6,"U10000000000000","","",N,N],[6,"P10000000000000","","",N,N],[6,"N10000000000000","","",N,N],[6,"U100000000000000","","",N,N],[6,"P100000000000000","","",N,N],[6,"N100000000000000","","",N,N],[6,"U1000000000000000","","",N,N],[6,"P1000000000000000","","",N,N],[6,"N1000000000000000","","",N,N],[6,"U10000000000000000","","",N,N],[6,"P10000000000000000","","",N,N],[6,"N10000000000000000","","",N,N],[6,"U100000000000000000","","",N,N],[6,"P100000000000000000","","",N,N],[6,"N100000000000000000","","",N,N],[6,"U1000000000000000000","","",N,N],[6,"P1000000000000000000","","",N,N],[6,"N1000000000000000000","","",N,N],[6,"U10000000000000000000","","",N,N],[0,"bit","typenum","Type-level bits.",N,N],[3,"B0","typenum::bit","The type-level bit 0.",N,N],[3,"B1","","The type-level bit 1.",N,N],[11,"new","","Instantiates a singleton representing this bit.",0,[[],["b0"]]],[11,"new","","Instantiates a singleton representing this bit.",1,[[],["b1"]]],[0,"uint","typenum","Type-level unsigned integers.",N,N],[3,"UTerm","typenum::uint","The terminating type for `UInt`; it always comes after the most significant bit. `UTerm` by itself represents zero, which is aliased to `U0`.",N,N],[3,"UInt","","`UInt` is defined recursively, where `B` is the least significant bit and `U` is the rest of the number. Conceptually, `U` should be bound by the trait `Unsigned` and `B` should be bound by the trait `Bit`, but enforcing these bounds causes linear instead of logrithmic scaling in some places, so they are left off for now. They may be enforced in future.",N,N],[6,"GetBitOut","","",N,N],[6,"SetBitOut","","Alias for the result of calling `SetBit`: `SetBitOut<N, I, B> = <N as SetBit<I, B>>::Output`.",N,N],[8,"GetBit","","",N,N],[16,"Output","","",2,N],[8,"SetBit","","A type operator that, when implemented for unsigned integer `N`, sets the bit at position `I` to `B`.",N,N],[16,"Output","","",3,N],[11,"new","","Instantiates a singleton representing this unsigned integer.",4,[[],["uterm"]]],[11,"new","","Instantiates a singleton representing this unsigned integer.",5,[[],["uint"]]],[0,"int","typenum","Type-level signed integers.",N,N],[3,"PInt","typenum::int","Type-level signed integers with positive sign.",N,N],[3,"NInt","","Type-level signed integers with negative sign.",N,N],[3,"Z0","","The type-level signed integer 0.",N,N],[11,"new","","Instantiates a singleton representing this strictly positive integer.",6,[[],["pint"]]],[11,"new","","Instantiates a singleton representing this strictly negative integer.",7,[[],["nint"]]],[11,"new","","Instantiates a singleton representing the integer 0.",8,[[],["z0"]]],[0,"marker_traits","typenum","All of the marker traits used in typenum.",N,N],[8,"NonZero","typenum::marker_traits","A marker trait to designate that a type is not zero. All number types in this crate implement `NonZero` except `B0`, `U0`, and `Z0`.",N,N],[8,"Ord","","A Marker trait for the types `Greater`, `Equal`, and `Less`.",N,N],[10,"to_ordering","","",9,[[],["ordering"]]],[8,"Bit","","The marker trait for compile time bits.",N,N],[18,"U8","","",10,N],[18,"BOOL","","",10,N],[10,"to_u8","","",10,[[],["u8"]]],[10,"to_bool","","",10,[[],["bool"]]],[8,"Unsigned","","The marker trait for compile time unsigned integers.",N,N],[18,"U8","","",11,N],[18,"U16","","",11,N],[18,"U32","","",11,N],[18,"U64","","",11,N],[18,"USIZE","","",11,N],[18,"I8","","",11,N],[18,"I16","","",11,N],[18,"I32","","",11,N],[18,"I64","","",11,N],[18,"ISIZE","","",11,N],[10,"to_u8","","",11,[[],["u8"]]],[10,"to_u16","","",11,[[],["u16"]]],[10,"to_u32","","",11,[[],["u32"]]],[10,"to_u64","","",11,[[],["u64"]]],[10,"to_usize","","",11,[[],["usize"]]],[10,"to_i8","","",11,[[],["i8"]]],[10,"to_i16","","",11,[[],["i16"]]],[10,"to_i32","","",11,[[],["i32"]]],[10,"to_i64","","",11,[[],["i64"]]],[10,"to_isize","","",11,[[],["isize"]]],[8,"Integer","","The marker trait for compile time signed integers.",N,N],[18,"I8","","",12,N],[18,"I16","","",12,N],[18,"I32","","",12,N],[18,"I64","","",12,N],[18,"ISIZE","","",12,N],[10,"to_i8","","",12,[[],["i8"]]],[10,"to_i16","","",12,[[],["i16"]]],[10,"to_i32","","",12,[[],["i32"]]],[10,"to_i64","","",12,[[],["i64"]]],[10,"to_isize","","",12,[[],["isize"]]],[8,"TypeArray","","The marker trait for type-level arrays of type-level numbers.",N,N],[8,"PowerOfTwo","","The marker trait for type-level numbers which are a power of two.",N,N],[0,"type_operators","typenum","Useful type operators that are not defined in `core::ops`.",N,N],[8,"Same","typenum::type_operators","A type operator that ensures that `Rhs` is the same as `Self`, it is mainly useful for writing macros that can take arbitrary binary or unary operators.",N,N],[16,"Output","","Should always be `Self`",13,N],[8,"Abs","","A type operator that returns the absolute value.",N,N],[16,"Output","","The absolute value.",14,N],[8,"Pow","","A type operator that provides exponentiation by repeated squaring.",N,N],[16,"Output","","The result of the exponentiation.",15,N],[10,"powi","","This function isn't used in this crate, but may be useful for others. It is implemented for primitives.",15,N],[8,"Cmp","","A type operator for comparing `Self` and `Rhs`. It provides a similar functionality to the function `core::cmp::Ord::cmp` but for types.",N,N],[16,"Output","","The result of the comparison. It should only ever be one of `Greater`, `Less`, or `Equal`.",16,N],[8,"Len","","A type operator that gives the length of an `Array` or the number of bits in a `UInt`.",N,N],[16,"Output","","The length as a type-level unsigned integer.",17,N],[10,"len","","This function isn't used in this crate, but may be useful for others.",17,N],[8,"PartialDiv","","Division as a partial function. This type operator performs division just as `Div`, but is only defined when the result is an integer (i.e. there is no remainder).",N,N],[16,"Output","","The type of the result of the division",18,N],[10,"partial_div","","Method for performing the division",18,N],[8,"Min","","A type operator that returns the minimum of `Self` and `Rhs`.",N,N],[16,"Output","","The type of the minimum of `Self` and `Rhs`",19,N],[10,"min","","Method returning the minimum",19,N],[8,"Max","","A type operator that returns the maximum of `Self` and `Rhs`.",N,N],[16,"Output","","The type of the maximum of `Self` and `Rhs`",20,N],[10,"max","","Method returning the maximum",20,N],[8,"IsLess","","A type operator that returns `True` if `Self < Rhs`, otherwise returns `False`.",N,N],[16,"Output","","The type representing either `True` or `False`",21,N],[10,"is_less","","Method returning `True` or `False`.",21,N],[8,"IsEqual","","A type operator that returns `True` if `Self == Rhs`, otherwise returns `False`.",N,N],[16,"Output","","The type representing either `True` or `False`",22,N],[10,"is_equal","","Method returning `True` or `False`.",22,N],[8,"IsGreater","","A type operator that returns `True` if `Self > Rhs`, otherwise returns `False`.",N,N],[16,"Output","","The type representing either `True` or `False`",23,N],[10,"is_greater","","Method returning `True` or `False`.",23,N],[8,"IsLessOrEqual","","A type operator that returns `True` if `Self <= Rhs`, otherwise returns `False`.",N,N],[16,"Output","","The type representing either `True` or `False`",24,N],[10,"is_less_or_equal","","Method returning `True` or `False`.",24,N],[8,"IsNotEqual","","A type operator that returns `True` if `Self != Rhs`, otherwise returns `False`.",N,N],[16,"Output","","The type representing either `True` or `False`",25,N],[10,"is_not_equal","","Method returning `True` or `False`.",25,N],[8,"IsGreaterOrEqual","","A type operator that returns `True` if `Self >= Rhs`, otherwise returns `False`.",N,N],[16,"Output","","The type representing either `True` or `False`",26,N],[10,"is_greater_or_equal","","Method returning `True` or `False`.",26,N],[0,"operator_aliases","typenum","Aliases for the type operators used in this crate. Their purpose is to increase the ergonomics of performing operations on the types defined here. For even more ergonomics, consider using the `op!` macro instead.",N,N],[6,"And","typenum::operator_aliases","Alias for the associated type of `BitAnd`: `And<A, B> = <A as BitAnd<B>>::Output`",N,N],[6,"Or","","Alias for the associated type of `BitOr`: `Or<A, B> = <A as BitOr<B>>::Output`",N,N],[6,"Xor","","Alias for the associated type of `BitXor`: `Xor<A, B> = <A as BitXor<B>>::Output`",N,N],[6,"Shleft","","Alias for the associated type of `Shl`: `Shleft<A, B> = <A as Shl<B>>::Output`",N,N],[6,"Shright","","Alias for the associated type of `Shr`: `Shright<A, B> = <A as Shr<B>>::Output`",N,N],[6,"Sum","","Alias for the associated type of `Add`: `Sum<A, B> = <A as Add<B>>::Output`",N,N],[6,"Diff","","Alias for the associated type of `Sub`: `Diff<A, B> = <A as Sub<B>>::Output`",N,N],[6,"Prod","","Alias for the associated type of `Mul`: `Prod<A, B> = <A as Mul<B>>::Output`",N,N],[6,"Quot","","Alias for the associated type of `Div`: `Quot<A, B> = <A as Div<B>>::Output`",N,N],[6,"Mod","","Alias for the associated type of `Rem`: `Mod<A, B> = <A as Rem<B>>::Output`",N,N],[6,"PartialQuot","","Alias for the associated type of `PartialDiv`: `PartialQuot<A, B> = <A as PartialDiv<B>>::Output`",N,N],[6,"Negate","","Alias for the associated type of `Neg`: `Negate<A> = <A as Neg>::Output`",N,N],[6,"AbsVal","","Alias for the associated type of `Abs`: `AbsVal<A> = <A as Abs>::Output`",N,N],[6,"Exp","","Alias for the associated type of `Pow`: `Exp<A, B> = <A as Pow<B>>::Output`",N,N],[6,"Add1","","Alias to make it easy to add 1: `Add1<A> = <A as Add<B1>>::Output`",N,N],[6,"Sub1","","Alias to make it easy to subtract 1: `Sub1<A> = <A as Sub<B1>>::Output`",N,N],[6,"Square","","Alias to make it easy to square. `Square<A> = <A as Mul<A>>::Output`",N,N],[6,"Cube","","Alias to make it easy to cube. `Cube<A> = <Square<A> as Mul<A>>::Output`",N,N],[6,"Compare","","Alias for the associated type of `Cmp`: `Compare<A, B> = <A as Cmp<B>>::Output`",N,N],[6,"Length","","Alias for the associated type of `Len`: `Length<A> = <A as Len>::Output`",N,N],[6,"Minimum","","Alias for the associated type of `Min`: `Minimum<A, B> = <A as Min<B>>::Output`",N,N],[6,"Maximum","","Alias for the associated type of `Max`: `Maximum<A, B> = <A as Max<B>>::Output`",N,N],[6,"Le","","Alias for the associated type of `IsLess`: `Le<A, B> = <A as IsLess<B>>::Output`",N,N],[6,"Eq","","Alias for the associated type of `IsEqual`: `Eq<A, B> = <A as IsEqual<B>>::Output`",N,N],[6,"Gr","","Alias for the associated type of `IsGreater`: `Gr<A, B> = <A as IsGreater<B>>::Output`",N,N],[6,"GrEq","","Alias for the associated type of `IsGreaterOrEqual`: `GrEq<A, B> = <A as IsGreaterOrEqual<B>>::Output`",N,N],[6,"LeEq","","Alias for the associated type of `IsLessOrEqual`: `LeEq<A, B> = <A as IsLessOrEqual<B>>::Output`",N,N],[6,"NotEq","","Alias for the associated type of `IsNotEqual`: `NotEq<A, B> = <A as IsNotEqual<B>>::Output`",N,N],[0,"array","typenum","A type-level array of type-level numbers.",N,N],[3,"ATerm","typenum::array","The terminating type for type arrays.",N,N],[3,"TArr","","`TArr` is a type that acts as an array of types. It is defined similarly to `UInt`, only its values can be more than bits, and it is designed to act as an array. So you can only add two if they have the same number of elements, for example.",N,N],[14,"op","typenum","Convenient type operations.",N,N],[14,"cmp","","A convenience macro for comparing type numbers. Use `op!` instead.",N,N],[14,"tarr","","Create a new type-level arrray. Only usable on Rust 1.13.0 or newer.",N,N],[14,"assert_type_eq","","Asserts that two types are the same.",N,N],[14,"assert_type","","Asserts that a type is `True`, aka `B1`.",N,N],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"is_less","typenum::bit","",0,N],[11,"is_equal","","",0,N],[11,"is_greater","","",0,N],[11,"is_less_or_equal","","",0,N],[11,"is_not_equal","","",0,N],[11,"is_greater_or_equal","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"is_less","","",1,N],[11,"is_equal","","",1,N],[11,"is_greater","","",1,N],[11,"is_less_or_equal","","",1,N],[11,"is_not_equal","","",1,N],[11,"is_greater_or_equal","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"powi","typenum::uint","",4,N],[11,"partial_div","","",4,N],[11,"is_less","","",4,N],[11,"is_equal","","",4,N],[11,"is_greater","","",4,N],[11,"is_less_or_equal","","",4,N],[11,"is_not_equal","","",4,N],[11,"is_greater_or_equal","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"powi","","",5,N],[11,"partial_div","","",5,N],[11,"is_less","","",5,N],[11,"is_equal","","",5,N],[11,"is_greater","","",5,N],[11,"is_less_or_equal","","",5,N],[11,"is_not_equal","","",5,N],[11,"is_greater_or_equal","","",5,N],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"powi","typenum::int","",6,N],[11,"partial_div","","",6,N],[11,"is_less","","",6,N],[11,"is_equal","","",6,N],[11,"is_greater","","",6,N],[11,"is_less_or_equal","","",6,N],[11,"is_not_equal","","",6,N],[11,"is_greater_or_equal","","",6,N],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"powi","","",7,N],[11,"partial_div","","",7,N],[11,"is_less","","",7,N],[11,"is_equal","","",7,N],[11,"is_greater","","",7,N],[11,"is_less_or_equal","","",7,N],[11,"is_not_equal","","",7,N],[11,"is_greater_or_equal","","",7,N],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"powi","","",8,N],[11,"partial_div","","",8,N],[11,"is_less","","",8,N],[11,"is_equal","","",8,N],[11,"is_greater","","",8,N],[11,"is_less_or_equal","","",8,N],[11,"is_not_equal","","",8,N],[11,"is_greater_or_equal","","",8,N],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"partial_div","typenum::array","",30,N],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"partial_div","","",31,N],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"to_ordering","typenum","",27,[[],["ordering"]]],[11,"to_ordering","","",28,[[],["ordering"]]],[11,"to_ordering","","",29,[[],["ordering"]]],[11,"to_u8","typenum::bit","",0,[[],["u8"]]],[11,"to_bool","","",0,[[],["bool"]]],[11,"to_u8","","",1,[[],["u8"]]],[11,"to_bool","","",1,[[],["bool"]]],[11,"to_u8","typenum::uint","",4,[[],["u8"]]],[11,"to_u16","","",4,[[],["u16"]]],[11,"to_u32","","",4,[[],["u32"]]],[11,"to_u64","","",4,[[],["u64"]]],[11,"to_usize","","",4,[[],["usize"]]],[11,"to_i8","","",4,[[],["i8"]]],[11,"to_i16","","",4,[[],["i16"]]],[11,"to_i32","","",4,[[],["i32"]]],[11,"to_i64","","",4,[[],["i64"]]],[11,"to_isize","","",4,[[],["isize"]]],[11,"to_u8","","",5,[[],["u8"]]],[11,"to_u16","","",5,[[],["u16"]]],[11,"to_u32","","",5,[[],["u32"]]],[11,"to_u64","","",5,[[],["u64"]]],[11,"to_usize","","",5,[[],["usize"]]],[11,"to_i8","","",5,[[],["i8"]]],[11,"to_i16","","",5,[[],["i16"]]],[11,"to_i32","","",5,[[],["i32"]]],[11,"to_i64","","",5,[[],["i64"]]],[11,"to_isize","","",5,[[],["isize"]]],[11,"to_i8","typenum::int","",8,[[],["i8"]]],[11,"to_i16","","",8,[[],["i16"]]],[11,"to_i32","","",8,[[],["i32"]]],[11,"to_i64","","",8,[[],["i64"]]],[11,"to_isize","","",8,[[],["isize"]]],[11,"to_i8","","",6,[[],["i8"]]],[11,"to_i16","","",6,[[],["i16"]]],[11,"to_i32","","",6,[[],["i32"]]],[11,"to_i64","","",6,[[],["i64"]]],[11,"to_isize","","",6,[[],["isize"]]],[11,"to_i8","","",7,[[],["i8"]]],[11,"to_i16","","",7,[[],["i16"]]],[11,"to_i32","","",7,[[],["i32"]]],[11,"to_i64","","",7,[[],["i64"]]],[11,"to_isize","","",7,[[],["isize"]]],[11,"powi","","",8,N],[11,"powi","","",8,N],[11,"powi","","",8,N],[11,"powi","typenum","",32,N],[11,"powi","","",33,N],[11,"powi","","",33,N],[11,"powi","typenum::int","",6,N],[11,"powi","","",7,N],[11,"powi","","",6,N],[11,"powi","","",7,N],[11,"powi","","",7,N],[11,"len","typenum::uint","",4,N],[11,"len","","",5,N],[11,"len","typenum::array","",30,N],[11,"len","","",31,N],[11,"partial_div","typenum::uint","",4,N],[11,"partial_div","","",5,N],[11,"partial_div","typenum::array","",30,N],[11,"partial_div","","",31,N],[11,"min","typenum::bit","",0,[[["self"],["b0"]],["b0"]]],[11,"min","","",0,[[["self"],["b1"]],["b0"]]],[11,"min","","",1,[[["self"],["b0"]],["b0"]]],[11,"min","","",1,[[["self"],["b1"]],["b1"]]],[11,"min","typenum::uint","",4,N],[11,"min","","",5,N],[11,"min","typenum::int","",8,N],[11,"min","","",8,N],[11,"min","","",8,N],[11,"min","","",6,N],[11,"min","","",7,N],[11,"min","","",6,N],[11,"min","","",7,N],[11,"min","","",6,N],[11,"min","","",7,N],[11,"max","typenum::bit","",0,[[["self"],["b0"]],["b0"]]],[11,"max","","",0,[[["self"],["b1"]],["b1"]]],[11,"max","","",1,[[["self"],["b0"]],["b1"]]],[11,"max","","",1,[[["self"],["b1"]],["b1"]]],[11,"max","typenum::uint","",4,N],[11,"max","","",5,N],[11,"max","typenum::int","",8,N],[11,"max","","",8,N],[11,"max","","",8,N],[11,"max","","",6,N],[11,"max","","",7,N],[11,"max","","",6,N],[11,"max","","",7,N],[11,"max","","",6,N],[11,"max","","",7,N],[11,"fmt","typenum::bit","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","typenum::uint","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","typenum::int","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","typenum::array","",30,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",31,[[["self"],["formatter"]],["result"]]],[11,"fmt","typenum","",27,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",29,[[["self"],["formatter"]],["result"]]],[11,"eq","typenum::bit","",0,[[["self"],["b0"]],["bool"]]],[11,"eq","","",1,[[["self"],["b1"]],["bool"]]],[11,"eq","typenum::uint","",4,[[["self"],["uterm"]],["bool"]]],[11,"eq","","",5,[[["self"],["uint"]],["bool"]]],[11,"ne","","",5,[[["self"],["uint"]],["bool"]]],[11,"eq","typenum::int","",6,[[["self"],["pint"]],["bool"]]],[11,"ne","","",6,[[["self"],["pint"]],["bool"]]],[11,"eq","","",7,[[["self"],["nint"]],["bool"]]],[11,"ne","","",7,[[["self"],["nint"]],["bool"]]],[11,"eq","","",8,[[["self"],["z0"]],["bool"]]],[11,"eq","typenum::array","",30,[[["self"],["aterm"]],["bool"]]],[11,"eq","","",31,[[["self"],["tarr"]],["bool"]]],[11,"ne","","",31,[[["self"],["tarr"]],["bool"]]],[11,"eq","typenum","",27,[[["self"],["greater"]],["bool"]]],[11,"eq","","",28,[[["self"],["less"]],["bool"]]],[11,"eq","","",29,[[["self"],["equal"]],["bool"]]],[11,"cmp","typenum::bit","",0,[[["self"],["b0"]],["ordering"]]],[11,"cmp","","",1,[[["self"],["b1"]],["ordering"]]],[11,"cmp","typenum::uint","",4,[[["self"],["uterm"]],["ordering"]]],[11,"cmp","","",5,[[["self"],["uint"]],["ordering"]]],[11,"cmp","typenum::int","",6,[[["self"],["pint"]],["ordering"]]],[11,"cmp","","",7,[[["self"],["nint"]],["ordering"]]],[11,"cmp","","",8,[[["self"],["z0"]],["ordering"]]],[11,"cmp","typenum::array","",30,[[["self"],["aterm"]],["ordering"]]],[11,"cmp","","",31,[[["self"],["tarr"]],["ordering"]]],[11,"cmp","typenum","",27,[[["self"],["greater"]],["ordering"]]],[11,"cmp","","",28,[[["self"],["less"]],["ordering"]]],[11,"cmp","","",29,[[["self"],["equal"]],["ordering"]]],[11,"partial_cmp","typenum::bit","",0,[[["self"],["b0"]],["option",["ordering"]]]],[11,"partial_cmp","","",1,[[["self"],["b1"]],["option",["ordering"]]]],[11,"partial_cmp","typenum::uint","",4,[[["self"],["uterm"]],["option",["ordering"]]]],[11,"partial_cmp","","",5,[[["self"],["uint"]],["option",["ordering"]]]],[11,"lt","","",5,[[["self"],["uint"]],["bool"]]],[11,"le","","",5,[[["self"],["uint"]],["bool"]]],[11,"gt","","",5,[[["self"],["uint"]],["bool"]]],[11,"ge","","",5,[[["self"],["uint"]],["bool"]]],[11,"partial_cmp","typenum::int","",6,[[["self"],["pint"]],["option",["ordering"]]]],[11,"lt","","",6,[[["self"],["pint"]],["bool"]]],[11,"le","","",6,[[["self"],["pint"]],["bool"]]],[11,"gt","","",6,[[["self"],["pint"]],["bool"]]],[11,"ge","","",6,[[["self"],["pint"]],["bool"]]],[11,"partial_cmp","","",7,[[["self"],["nint"]],["option",["ordering"]]]],[11,"lt","","",7,[[["self"],["nint"]],["bool"]]],[11,"le","","",7,[[["self"],["nint"]],["bool"]]],[11,"gt","","",7,[[["self"],["nint"]],["bool"]]],[11,"ge","","",7,[[["self"],["nint"]],["bool"]]],[11,"partial_cmp","","",8,[[["self"],["z0"]],["option",["ordering"]]]],[11,"partial_cmp","typenum::array","",30,[[["self"],["aterm"]],["option",["ordering"]]]],[11,"partial_cmp","","",31,[[["self"],["tarr"]],["option",["ordering"]]]],[11,"lt","","",31,[[["self"],["tarr"]],["bool"]]],[11,"le","","",31,[[["self"],["tarr"]],["bool"]]],[11,"gt","","",31,[[["self"],["tarr"]],["bool"]]],[11,"ge","","",31,[[["self"],["tarr"]],["bool"]]],[11,"partial_cmp","typenum","",27,[[["self"],["greater"]],["option",["ordering"]]]],[11,"partial_cmp","","",28,[[["self"],["less"]],["option",["ordering"]]]],[11,"partial_cmp","","",29,[[["self"],["equal"]],["option",["ordering"]]]],[11,"add","typenum::uint","",4,N],[11,"add","","",5,N],[11,"add","","",4,N],[11,"add","","",5,N],[11,"add","","",5,N],[11,"add","","",4,N],[11,"add","","",5,N],[11,"add","","",5,N],[11,"add","","",5,N],[11,"add","","",5,N],[11,"add","","",5,N],[11,"add","typenum::int","",8,N],[11,"add","","",6,N],[11,"add","","",7,N],[11,"add","","",6,N],[11,"add","","",7,N],[11,"add","","",6,N],[11,"add","","",7,N],[11,"add","typenum::array","",30,N],[11,"add","","",31,N],[11,"sub","typenum::uint","",4,N],[11,"sub","","",5,N],[11,"sub","","",5,N],[11,"sub","","",5,N],[11,"sub","","",5,N],[11,"sub","","",4,N],[11,"sub","","",5,N],[11,"sub","typenum::int","",8,N],[11,"sub","","",8,N],[11,"sub","","",8,N],[11,"sub","","",6,N],[11,"sub","","",7,N],[11,"sub","","",6,N],[11,"sub","","",7,N],[11,"sub","","",6,N],[11,"sub","","",7,N],[11,"sub","typenum::array","",30,N],[11,"sub","","",31,N],[11,"mul","typenum::uint","",5,N],[11,"mul","","",4,N],[11,"mul","","",4,N],[11,"mul","","",5,N],[11,"mul","","",5,N],[11,"mul","","",4,N],[11,"mul","","",5,N],[11,"mul","","",5,N],[11,"mul","typenum::int","",8,N],[11,"mul","","",6,N],[11,"mul","","",7,N],[11,"mul","","",6,N],[11,"mul","","",7,N],[11,"mul","","",6,N],[11,"mul","","",7,N],[11,"mul","typenum::array","",30,N],[11,"mul","","",31,N],[11,"mul","typenum::int","",8,N],[11,"mul","","",6,N],[11,"mul","","",7,N],[11,"mul","","",8,N],[11,"mul","","",6,N],[11,"mul","","",7,N],[11,"div","typenum::uint","",4,N],[11,"div","","",5,N],[11,"div","typenum::int","",8,N],[11,"div","","",6,N],[11,"div","","",6,N],[11,"div","","",7,N],[11,"div","","",7,N],[11,"div","typenum::array","",30,N],[11,"div","","",31,N],[11,"rem","typenum::uint","",4,N],[11,"rem","","",5,N],[11,"rem","typenum::int","",8,N],[11,"rem","","",6,N],[11,"rem","","",6,N],[11,"rem","","",7,N],[11,"rem","","",7,N],[11,"rem","typenum::array","",30,N],[11,"rem","","",31,N],[11,"neg","typenum::int","",8,N],[11,"neg","","",6,N],[11,"neg","","",7,N],[11,"neg","typenum::array","",30,N],[11,"neg","","",31,N],[11,"not","typenum::bit","",0,N],[11,"not","","",1,N],[11,"bitand","","",0,N],[11,"bitand","","",1,N],[11,"bitand","","",1,N],[11,"bitand","typenum::uint","",4,N],[11,"bitand","","",5,N],[11,"bitor","typenum::bit","",0,N],[11,"bitor","","",0,N],[11,"bitor","","",1,N],[11,"bitor","typenum::uint","",4,N],[11,"bitor","","",5,N],[11,"bitor","","",5,N],[11,"bitor","","",5,N],[11,"bitor","","",5,N],[11,"bitor","","",5,N],[11,"bitxor","typenum::bit","",0,N],[11,"bitxor","","",1,N],[11,"bitxor","","",0,N],[11,"bitxor","","",1,N],[11,"bitxor","typenum::uint","",4,N],[11,"bitxor","","",5,N],[11,"shl","","",4,N],[11,"shl","","",4,N],[11,"shl","","",5,N],[11,"shl","","",5,N],[11,"shl","","",5,N],[11,"shl","","",4,N],[11,"shl","","",5,N],[11,"shr","","",4,N],[11,"shr","","",5,N],[11,"shr","","",4,N],[11,"shr","","",4,N],[11,"shr","","",5,N],[11,"shr","","",5,N],[11,"shr","","",5,N],[11,"hash","typenum::bit","",0,N],[11,"hash","","",1,N],[11,"hash","typenum::uint","",4,N],[11,"hash","","",5,N],[11,"hash","typenum::int","",6,N],[11,"hash","","",7,N],[11,"hash","","",8,N],[11,"hash","typenum::array","",30,N],[11,"hash","","",31,N],[11,"hash","typenum","",27,N],[11,"hash","","",28,N],[11,"hash","","",29,N],[11,"clone","typenum::bit","",0,[[["self"]],["b0"]]],[11,"clone","","",1,[[["self"]],["b1"]]],[11,"clone","typenum::uint","",4,[[["self"]],["uterm"]]],[11,"clone","","",5,[[["self"]],["uint"]]],[11,"clone","typenum::int","",6,[[["self"]],["pint"]]],[11,"clone","","",7,[[["self"]],["nint"]]],[11,"clone","","",8,[[["self"]],["z0"]]],[11,"clone","typenum::array","",30,[[["self"]],["aterm"]]],[11,"clone","","",31,[[["self"]],["tarr"]]],[11,"clone","typenum","",27,[[["self"]],["greater"]]],[11,"clone","","",28,[[["self"]],["less"]]],[11,"clone","","",29,[[["self"]],["equal"]]],[11,"default","typenum::bit","",0,[[],["b0"]]],[11,"default","","",1,[[],["b1"]]],[11,"default","typenum::uint","",4,[[],["uterm"]]],[11,"default","","",5,[[],["uint"]]],[11,"default","typenum::int","",6,[[],["pint"]]],[11,"default","","",7,[[],["nint"]]],[11,"default","","",8,[[],["z0"]]],[11,"default","typenum","",27,[[],["greater"]]],[11,"default","","",28,[[],["less"]]],[11,"default","","",29,[[],["equal"]]]],"paths":[[3,"B0"],[3,"B1"],[8,"GetBit"],[8,"SetBit"],[3,"UTerm"],[3,"UInt"],[3,"PInt"],[3,"NInt"],[3,"Z0"],[8,"Ord"],[8,"Bit"],[8,"Unsigned"],[8,"Integer"],[8,"Same"],[8,"Abs"],[8,"Pow"],[8,"Cmp"],[8,"Len"],[8,"PartialDiv"],[8,"Min"],[8,"Max"],[8,"IsLess"],[8,"IsEqual"],[8,"IsGreater"],[8,"IsLessOrEqual"],[8,"IsNotEqual"],[8,"IsGreaterOrEqual"],[3,"Greater"],[3,"Less"],[3,"Equal"],[3,"ATerm"],[3,"TArr"],[6,"P1"],[6,"N1"]]};
searchIndex["unicode_xid"]={"doc":"Determine if a `char` is a valid identifier for a parser and/or lexer according to Unicode Standard Annex #31 rules.","items":[[17,"UNICODE_VERSION","unicode_xid","The version of Unicode that this version of unicode-xid is based on.",N,N],[8,"UnicodeXID","","Methods for determining if a character is a valid identifier character.",N,N],[10,"is_xid_start","","Returns whether the specified character satisfies the 'XID_Start' Unicode property.",0,[[["self"]],["bool"]]],[10,"is_xid_continue","","Returns whether the specified `char` satisfies the 'XID_Continue' Unicode property.",0,[[["self"]],["bool"]]]],"paths":[[8,"UnicodeXID"]]};
initSearch(searchIndex);
